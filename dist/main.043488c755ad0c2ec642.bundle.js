/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 184);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js
//! version : 2.20.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
     true ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

var hookCallback;

function hooks () {
    return hookCallback.apply(null, arguments);
}

// This is done to register the method called with moment()
// without creating circular dependencies.
function setHookCallback (callback) {
    hookCallback = callback;
}

function isArray(input) {
    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
}

function isObject(input) {
    // IE8 will treat undefined and null as object if it wasn't for
    // input != null
    return input != null && Object.prototype.toString.call(input) === '[object Object]';
}

function isObjectEmpty(obj) {
    if (Object.getOwnPropertyNames) {
        return (Object.getOwnPropertyNames(obj).length === 0);
    } else {
        var k;
        for (k in obj) {
            if (obj.hasOwnProperty(k)) {
                return false;
            }
        }
        return true;
    }
}

function isUndefined(input) {
    return input === void 0;
}

function isNumber(input) {
    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
}

function isDate(input) {
    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
}

function map(arr, fn) {
    var res = [], i;
    for (i = 0; i < arr.length; ++i) {
        res.push(fn(arr[i], i));
    }
    return res;
}

function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
}

function extend(a, b) {
    for (var i in b) {
        if (hasOwnProp(b, i)) {
            a[i] = b[i];
        }
    }

    if (hasOwnProp(b, 'toString')) {
        a.toString = b.toString;
    }

    if (hasOwnProp(b, 'valueOf')) {
        a.valueOf = b.valueOf;
    }

    return a;
}

function createUTC (input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, true).utc();
}

function defaultParsingFlags() {
    // We need to deep clone this object.
    return {
        empty           : false,
        unusedTokens    : [],
        unusedInput     : [],
        overflow        : -2,
        charsLeftOver   : 0,
        nullInput       : false,
        invalidMonth    : null,
        invalidFormat   : false,
        userInvalidated : false,
        iso             : false,
        parsedDateParts : [],
        meridiem        : null,
        rfc2822         : false,
        weekdayMismatch : false
    };
}

function getParsingFlags(m) {
    if (m._pf == null) {
        m._pf = defaultParsingFlags();
    }
    return m._pf;
}

var some;
if (Array.prototype.some) {
    some = Array.prototype.some;
} else {
    some = function (fun) {
        var t = Object(this);
        var len = t.length >>> 0;

        for (var i = 0; i < len; i++) {
            if (i in t && fun.call(this, t[i], i, t)) {
                return true;
            }
        }

        return false;
    };
}

function isValid(m) {
    if (m._isValid == null) {
        var flags = getParsingFlags(m);
        var parsedParts = some.call(flags.parsedDateParts, function (i) {
            return i != null;
        });
        var isNowValid = !isNaN(m._d.getTime()) &&
            flags.overflow < 0 &&
            !flags.empty &&
            !flags.invalidMonth &&
            !flags.invalidWeekday &&
            !flags.weekdayMismatch &&
            !flags.nullInput &&
            !flags.invalidFormat &&
            !flags.userInvalidated &&
            (!flags.meridiem || (flags.meridiem && parsedParts));

        if (m._strict) {
            isNowValid = isNowValid &&
                flags.charsLeftOver === 0 &&
                flags.unusedTokens.length === 0 &&
                flags.bigHour === undefined;
        }

        if (Object.isFrozen == null || !Object.isFrozen(m)) {
            m._isValid = isNowValid;
        }
        else {
            return isNowValid;
        }
    }
    return m._isValid;
}

function createInvalid (flags) {
    var m = createUTC(NaN);
    if (flags != null) {
        extend(getParsingFlags(m), flags);
    }
    else {
        getParsingFlags(m).userInvalidated = true;
    }

    return m;
}

// Plugins that add properties should also add the key here (null value),
// so we can properly clone ourselves.
var momentProperties = hooks.momentProperties = [];

function copyConfig(to, from) {
    var i, prop, val;

    if (!isUndefined(from._isAMomentObject)) {
        to._isAMomentObject = from._isAMomentObject;
    }
    if (!isUndefined(from._i)) {
        to._i = from._i;
    }
    if (!isUndefined(from._f)) {
        to._f = from._f;
    }
    if (!isUndefined(from._l)) {
        to._l = from._l;
    }
    if (!isUndefined(from._strict)) {
        to._strict = from._strict;
    }
    if (!isUndefined(from._tzm)) {
        to._tzm = from._tzm;
    }
    if (!isUndefined(from._isUTC)) {
        to._isUTC = from._isUTC;
    }
    if (!isUndefined(from._offset)) {
        to._offset = from._offset;
    }
    if (!isUndefined(from._pf)) {
        to._pf = getParsingFlags(from);
    }
    if (!isUndefined(from._locale)) {
        to._locale = from._locale;
    }

    if (momentProperties.length > 0) {
        for (i = 0; i < momentProperties.length; i++) {
            prop = momentProperties[i];
            val = from[prop];
            if (!isUndefined(val)) {
                to[prop] = val;
            }
        }
    }

    return to;
}

var updateInProgress = false;

// Moment prototype object
function Moment(config) {
    copyConfig(this, config);
    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
    if (!this.isValid()) {
        this._d = new Date(NaN);
    }
    // Prevent infinite loop in case updateOffset creates new moment
    // objects.
    if (updateInProgress === false) {
        updateInProgress = true;
        hooks.updateOffset(this);
        updateInProgress = false;
    }
}

function isMoment (obj) {
    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
}

function absFloor (number) {
    if (number < 0) {
        // -0 -> 0
        return Math.ceil(number) || 0;
    } else {
        return Math.floor(number);
    }
}

function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
        value = 0;

    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
        value = absFloor(coercedNumber);
    }

    return value;
}

// compare two arrays, return the number of differences
function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
        lengthDiff = Math.abs(array1.length - array2.length),
        diffs = 0,
        i;
    for (i = 0; i < len; i++) {
        if ((dontConvert && array1[i] !== array2[i]) ||
            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
            diffs++;
        }
    }
    return diffs + lengthDiff;
}

function warn(msg) {
    if (hooks.suppressDeprecationWarnings === false &&
            (typeof console !==  'undefined') && console.warn) {
        console.warn('Deprecation warning: ' + msg);
    }
}

function deprecate(msg, fn) {
    var firstTime = true;

    return extend(function () {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(null, msg);
        }
        if (firstTime) {
            var args = [];
            var arg;
            for (var i = 0; i < arguments.length; i++) {
                arg = '';
                if (typeof arguments[i] === 'object') {
                    arg += '\n[' + i + '] ';
                    for (var key in arguments[0]) {
                        arg += key + ': ' + arguments[0][key] + ', ';
                    }
                    arg = arg.slice(0, -2); // Remove trailing comma and space
                } else {
                    arg = arguments[i];
                }
                args.push(arg);
            }
            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
            firstTime = false;
        }
        return fn.apply(this, arguments);
    }, fn);
}

var deprecations = {};

function deprecateSimple(name, msg) {
    if (hooks.deprecationHandler != null) {
        hooks.deprecationHandler(name, msg);
    }
    if (!deprecations[name]) {
        warn(msg);
        deprecations[name] = true;
    }
}

hooks.suppressDeprecationWarnings = false;
hooks.deprecationHandler = null;

function isFunction(input) {
    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
}

function set (config) {
    var prop, i;
    for (i in config) {
        prop = config[i];
        if (isFunction(prop)) {
            this[i] = prop;
        } else {
            this['_' + i] = prop;
        }
    }
    this._config = config;
    // Lenient ordinal parsing accepts just a number in addition to
    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
    // TODO: Remove "ordinalParse" fallback in next major release.
    this._dayOfMonthOrdinalParseLenient = new RegExp(
        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
            '|' + (/\d{1,2}/).source);
}

function mergeConfigs(parentConfig, childConfig) {
    var res = extend({}, parentConfig), prop;
    for (prop in childConfig) {
        if (hasOwnProp(childConfig, prop)) {
            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                res[prop] = {};
                extend(res[prop], parentConfig[prop]);
                extend(res[prop], childConfig[prop]);
            } else if (childConfig[prop] != null) {
                res[prop] = childConfig[prop];
            } else {
                delete res[prop];
            }
        }
    }
    for (prop in parentConfig) {
        if (hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])) {
            // make sure changes to properties don't modify parent config
            res[prop] = extend({}, res[prop]);
        }
    }
    return res;
}

function Locale(config) {
    if (config != null) {
        this.set(config);
    }
}

var keys;

if (Object.keys) {
    keys = Object.keys;
} else {
    keys = function (obj) {
        var i, res = [];
        for (i in obj) {
            if (hasOwnProp(obj, i)) {
                res.push(i);
            }
        }
        return res;
    };
}

var defaultCalendar = {
    sameDay : '[Today at] LT',
    nextDay : '[Tomorrow at] LT',
    nextWeek : 'dddd [at] LT',
    lastDay : '[Yesterday at] LT',
    lastWeek : '[Last] dddd [at] LT',
    sameElse : 'L'
};

function calendar (key, mom, now) {
    var output = this._calendar[key] || this._calendar['sameElse'];
    return isFunction(output) ? output.call(mom, now) : output;
}

var defaultLongDateFormat = {
    LTS  : 'h:mm:ss A',
    LT   : 'h:mm A',
    L    : 'MM/DD/YYYY',
    LL   : 'MMMM D, YYYY',
    LLL  : 'MMMM D, YYYY h:mm A',
    LLLL : 'dddd, MMMM D, YYYY h:mm A'
};

function longDateFormat (key) {
    var format = this._longDateFormat[key],
        formatUpper = this._longDateFormat[key.toUpperCase()];

    if (format || !formatUpper) {
        return format;
    }

    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
        return val.slice(1);
    });

    return this._longDateFormat[key];
}

var defaultInvalidDate = 'Invalid date';

function invalidDate () {
    return this._invalidDate;
}

var defaultOrdinal = '%d';
var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

function ordinal (number) {
    return this._ordinal.replace('%d', number);
}

var defaultRelativeTime = {
    future : 'in %s',
    past   : '%s ago',
    s  : 'a few seconds',
    ss : '%d seconds',
    m  : 'a minute',
    mm : '%d minutes',
    h  : 'an hour',
    hh : '%d hours',
    d  : 'a day',
    dd : '%d days',
    M  : 'a month',
    MM : '%d months',
    y  : 'a year',
    yy : '%d years'
};

function relativeTime (number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return (isFunction(output)) ?
        output(number, withoutSuffix, string, isFuture) :
        output.replace(/%d/i, number);
}

function pastFuture (diff, output) {
    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
}

var aliases = {};

function addUnitAlias (unit, shorthand) {
    var lowerCase = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
}

function normalizeUnits(units) {
    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
}

function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
        normalizedProp,
        prop;

    for (prop in inputObject) {
        if (hasOwnProp(inputObject, prop)) {
            normalizedProp = normalizeUnits(prop);
            if (normalizedProp) {
                normalizedInput[normalizedProp] = inputObject[prop];
            }
        }
    }

    return normalizedInput;
}

var priorities = {};

function addUnitPriority(unit, priority) {
    priorities[unit] = priority;
}

function getPrioritizedUnits(unitsObj) {
    var units = [];
    for (var u in unitsObj) {
        units.push({unit: u, priority: priorities[u]});
    }
    units.sort(function (a, b) {
        return a.priority - b.priority;
    });
    return units;
}

function zeroFill(number, targetLength, forceSign) {
    var absNumber = '' + Math.abs(number),
        zerosToFill = targetLength - absNumber.length,
        sign = number >= 0;
    return (sign ? (forceSign ? '+' : '') : '-') +
        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
}

var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

var formatFunctions = {};

var formatTokenFunctions = {};

// token:    'M'
// padded:   ['MM', 2]
// ordinal:  'Mo'
// callback: function () { this.month() + 1 }
function addFormatToken (token, padded, ordinal, callback) {
    var func = callback;
    if (typeof callback === 'string') {
        func = function () {
            return this[callback]();
        };
    }
    if (token) {
        formatTokenFunctions[token] = func;
    }
    if (padded) {
        formatTokenFunctions[padded[0]] = function () {
            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
        };
    }
    if (ordinal) {
        formatTokenFunctions[ordinal] = function () {
            return this.localeData().ordinal(func.apply(this, arguments), token);
        };
    }
}

function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
        return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
}

function makeFormatFunction(format) {
    var array = format.match(formattingTokens), i, length;

    for (i = 0, length = array.length; i < length; i++) {
        if (formatTokenFunctions[array[i]]) {
            array[i] = formatTokenFunctions[array[i]];
        } else {
            array[i] = removeFormattingTokens(array[i]);
        }
    }

    return function (mom) {
        var output = '', i;
        for (i = 0; i < length; i++) {
            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
        }
        return output;
    };
}

// format date using native date object
function formatMoment(m, format) {
    if (!m.isValid()) {
        return m.localeData().invalidDate();
    }

    format = expandFormat(format, m.localeData());
    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

    return formatFunctions[format](m);
}

function expandFormat(format, locale) {
    var i = 5;

    function replaceLongDateFormatTokens(input) {
        return locale.longDateFormat(input) || input;
    }

    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
        localFormattingTokens.lastIndex = 0;
        i -= 1;
    }

    return format;
}

var match1         = /\d/;            //       0 - 9
var match2         = /\d\d/;          //      00 - 99
var match3         = /\d{3}/;         //     000 - 999
var match4         = /\d{4}/;         //    0000 - 9999
var match6         = /[+-]?\d{6}/;    // -999999 - 999999
var match1to2      = /\d\d?/;         //       0 - 99
var match3to4      = /\d\d\d\d?/;     //     999 - 9999
var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
var match1to3      = /\d{1,3}/;       //       0 - 999
var match1to4      = /\d{1,4}/;       //       0 - 9999
var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

var matchUnsigned  = /\d+/;           //       0 - inf
var matchSigned    = /[+-]?\d+/;      //    -inf - inf

var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

// any word (or two) characters or numbers including two/three word month in arabic.
// includes scottish gaelic two word and hyphenated months
var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;


var regexes = {};

function addRegexToken (token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
        return (isStrict && strictRegex) ? strictRegex : regex;
    };
}

function getParseRegexForToken (token, config) {
    if (!hasOwnProp(regexes, token)) {
        return new RegExp(unescapeFormat(token));
    }

    return regexes[token](config._strict, config._locale);
}

// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
function unescapeFormat(s) {
    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
        return p1 || p2 || p3 || p4;
    }));
}

function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}

var tokens = {};

function addParseToken (token, callback) {
    var i, func = callback;
    if (typeof token === 'string') {
        token = [token];
    }
    if (isNumber(callback)) {
        func = function (input, array) {
            array[callback] = toInt(input);
        };
    }
    for (i = 0; i < token.length; i++) {
        tokens[token[i]] = func;
    }
}

function addWeekParseToken (token, callback) {
    addParseToken(token, function (input, array, config, token) {
        config._w = config._w || {};
        callback(input, config._w, config, token);
    });
}

function addTimeToArrayFromToken(token, input, config) {
    if (input != null && hasOwnProp(tokens, token)) {
        tokens[token](input, config._a, config, token);
    }
}

var YEAR = 0;
var MONTH = 1;
var DATE = 2;
var HOUR = 3;
var MINUTE = 4;
var SECOND = 5;
var MILLISECOND = 6;
var WEEK = 7;
var WEEKDAY = 8;

// FORMATTING

addFormatToken('Y', 0, 0, function () {
    var y = this.year();
    return y <= 9999 ? '' + y : '+' + y;
});

addFormatToken(0, ['YY', 2], 0, function () {
    return this.year() % 100;
});

addFormatToken(0, ['YYYY',   4],       0, 'year');
addFormatToken(0, ['YYYYY',  5],       0, 'year');
addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

// ALIASES

addUnitAlias('year', 'y');

// PRIORITIES

addUnitPriority('year', 1);

// PARSING

addRegexToken('Y',      matchSigned);
addRegexToken('YY',     match1to2, match2);
addRegexToken('YYYY',   match1to4, match4);
addRegexToken('YYYYY',  match1to6, match6);
addRegexToken('YYYYYY', match1to6, match6);

addParseToken(['YYYYY', 'YYYYYY'], YEAR);
addParseToken('YYYY', function (input, array) {
    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
});
addParseToken('YY', function (input, array) {
    array[YEAR] = hooks.parseTwoDigitYear(input);
});
addParseToken('Y', function (input, array) {
    array[YEAR] = parseInt(input, 10);
});

// HELPERS

function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
}

function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
}

// HOOKS

hooks.parseTwoDigitYear = function (input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
};

// MOMENTS

var getSetYear = makeGetSet('FullYear', true);

function getIsLeapYear () {
    return isLeapYear(this.year());
}

function makeGetSet (unit, keepTime) {
    return function (value) {
        if (value != null) {
            set$1(this, unit, value);
            hooks.updateOffset(this, keepTime);
            return this;
        } else {
            return get(this, unit);
        }
    };
}

function get (mom, unit) {
    return mom.isValid() ?
        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
}

function set$1 (mom, unit, value) {
    if (mom.isValid() && !isNaN(value)) {
        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
        }
        else {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
        }
    }
}

// MOMENTS

function stringGet (units) {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
        return this[units]();
    }
    return this;
}


function stringSet (units, value) {
    if (typeof units === 'object') {
        units = normalizeObjectUnits(units);
        var prioritized = getPrioritizedUnits(units);
        for (var i = 0; i < prioritized.length; i++) {
            this[prioritized[i].unit](units[prioritized[i].unit]);
        }
    } else {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units](value);
        }
    }
    return this;
}

function mod(n, x) {
    return ((n % x) + x) % x;
}

var indexOf;

if (Array.prototype.indexOf) {
    indexOf = Array.prototype.indexOf;
} else {
    indexOf = function (o) {
        // I know
        var i;
        for (i = 0; i < this.length; ++i) {
            if (this[i] === o) {
                return i;
            }
        }
        return -1;
    };
}

function daysInMonth(year, month) {
    if (isNaN(year) || isNaN(month)) {
        return NaN;
    }
    var modMonth = mod(month, 12);
    year += (month - modMonth) / 12;
    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
}

// FORMATTING

addFormatToken('M', ['MM', 2], 'Mo', function () {
    return this.month() + 1;
});

addFormatToken('MMM', 0, 0, function (format) {
    return this.localeData().monthsShort(this, format);
});

addFormatToken('MMMM', 0, 0, function (format) {
    return this.localeData().months(this, format);
});

// ALIASES

addUnitAlias('month', 'M');

// PRIORITY

addUnitPriority('month', 8);

// PARSING

addRegexToken('M',    match1to2);
addRegexToken('MM',   match1to2, match2);
addRegexToken('MMM',  function (isStrict, locale) {
    return locale.monthsShortRegex(isStrict);
});
addRegexToken('MMMM', function (isStrict, locale) {
    return locale.monthsRegex(isStrict);
});

addParseToken(['M', 'MM'], function (input, array) {
    array[MONTH] = toInt(input) - 1;
});

addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    // if we didn't find a month name, mark the date as invalid.
    if (month != null) {
        array[MONTH] = month;
    } else {
        getParsingFlags(config).invalidMonth = input;
    }
});

// LOCALES

var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
function localeMonths (m, format) {
    if (!m) {
        return isArray(this._months) ? this._months :
            this._months['standalone'];
    }
    return isArray(this._months) ? this._months[m.month()] :
        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
}

var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
function localeMonthsShort (m, format) {
    if (!m) {
        return isArray(this._monthsShort) ? this._monthsShort :
            this._monthsShort['standalone'];
    }
    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
}

function handleStrictParse(monthName, format, strict) {
    var i, ii, mom, llc = monthName.toLocaleLowerCase();
    if (!this._monthsParse) {
        // this is not used
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
        for (i = 0; i < 12; ++i) {
            mom = createUTC([2000, i]);
            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
        }
    }

    if (strict) {
        if (format === 'MMM') {
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
        }
    } else {
        if (format === 'MMM') {
            ii = indexOf.call(this._shortMonthsParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
        }
    }
}

function localeMonthsParse (monthName, format, strict) {
    var i, mom, regex;

    if (this._monthsParseExact) {
        return handleStrictParse.call(this, monthName, format, strict);
    }

    if (!this._monthsParse) {
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
    }

    // TODO: add sorting
    // Sorting makes sure if one month (or abbr) is a prefix of another
    // see sorting in computeMonthsParse
    for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, i]);
        if (strict && !this._longMonthsParse[i]) {
            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
        }
        if (!strict && !this._monthsParse[i]) {
            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
            return i;
        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
            return i;
        } else if (!strict && this._monthsParse[i].test(monthName)) {
            return i;
        }
    }
}

// MOMENTS

function setMonth (mom, value) {
    var dayOfMonth;

    if (!mom.isValid()) {
        // No op
        return mom;
    }

    if (typeof value === 'string') {
        if (/^\d+$/.test(value)) {
            value = toInt(value);
        } else {
            value = mom.localeData().monthsParse(value);
            // TODO: Another silent failure?
            if (!isNumber(value)) {
                return mom;
            }
        }
    }

    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
}

function getSetMonth (value) {
    if (value != null) {
        setMonth(this, value);
        hooks.updateOffset(this, true);
        return this;
    } else {
        return get(this, 'Month');
    }
}

function getDaysInMonth () {
    return daysInMonth(this.year(), this.month());
}

var defaultMonthsShortRegex = matchWord;
function monthsShortRegex (isStrict) {
    if (this._monthsParseExact) {
        if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
        }
        if (isStrict) {
            return this._monthsShortStrictRegex;
        } else {
            return this._monthsShortRegex;
        }
    } else {
        if (!hasOwnProp(this, '_monthsShortRegex')) {
            this._monthsShortRegex = defaultMonthsShortRegex;
        }
        return this._monthsShortStrictRegex && isStrict ?
            this._monthsShortStrictRegex : this._monthsShortRegex;
    }
}

var defaultMonthsRegex = matchWord;
function monthsRegex (isStrict) {
    if (this._monthsParseExact) {
        if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
        }
        if (isStrict) {
            return this._monthsStrictRegex;
        } else {
            return this._monthsRegex;
        }
    } else {
        if (!hasOwnProp(this, '_monthsRegex')) {
            this._monthsRegex = defaultMonthsRegex;
        }
        return this._monthsStrictRegex && isStrict ?
            this._monthsStrictRegex : this._monthsRegex;
    }
}

function computeMonthsParse () {
    function cmpLenRev(a, b) {
        return b.length - a.length;
    }

    var shortPieces = [], longPieces = [], mixedPieces = [],
        i, mom;
    for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, i]);
        shortPieces.push(this.monthsShort(mom, ''));
        longPieces.push(this.months(mom, ''));
        mixedPieces.push(this.months(mom, ''));
        mixedPieces.push(this.monthsShort(mom, ''));
    }
    // Sorting makes sure if one month (or abbr) is a prefix of another it
    // will match the longer piece.
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 12; i++) {
        shortPieces[i] = regexEscape(shortPieces[i]);
        longPieces[i] = regexEscape(longPieces[i]);
    }
    for (i = 0; i < 24; i++) {
        mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._monthsShortRegex = this._monthsRegex;
    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
}

function createDate (y, m, d, h, M, s, ms) {
    // can't just apply() to create a date:
    // https://stackoverflow.com/q/181348
    var date = new Date(y, m, d, h, M, s, ms);

    // the date constructor remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
        date.setFullYear(y);
    }
    return date;
}

function createUTCDate (y) {
    var date = new Date(Date.UTC.apply(null, arguments));

    // the Date.UTC function remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
        date.setUTCFullYear(y);
    }
    return date;
}

// start-of-first-week - start-of-year
function firstWeekOffset(year, dow, doy) {
    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
        fwd = 7 + dow - doy,
        // first-week day local weekday -- which local weekday is fwd
        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

    return -fwdlw + fwd - 1;
}

// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
    var localWeekday = (7 + weekday - dow) % 7,
        weekOffset = firstWeekOffset(year, dow, doy),
        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
        resYear, resDayOfYear;

    if (dayOfYear <= 0) {
        resYear = year - 1;
        resDayOfYear = daysInYear(resYear) + dayOfYear;
    } else if (dayOfYear > daysInYear(year)) {
        resYear = year + 1;
        resDayOfYear = dayOfYear - daysInYear(year);
    } else {
        resYear = year;
        resDayOfYear = dayOfYear;
    }

    return {
        year: resYear,
        dayOfYear: resDayOfYear
    };
}

function weekOfYear(mom, dow, doy) {
    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
        resWeek, resYear;

    if (week < 1) {
        resYear = mom.year() - 1;
        resWeek = week + weeksInYear(resYear, dow, doy);
    } else if (week > weeksInYear(mom.year(), dow, doy)) {
        resWeek = week - weeksInYear(mom.year(), dow, doy);
        resYear = mom.year() + 1;
    } else {
        resYear = mom.year();
        resWeek = week;
    }

    return {
        week: resWeek,
        year: resYear
    };
}

function weeksInYear(year, dow, doy) {
    var weekOffset = firstWeekOffset(year, dow, doy),
        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
}

// FORMATTING

addFormatToken('w', ['ww', 2], 'wo', 'week');
addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

// ALIASES

addUnitAlias('week', 'w');
addUnitAlias('isoWeek', 'W');

// PRIORITIES

addUnitPriority('week', 5);
addUnitPriority('isoWeek', 5);

// PARSING

addRegexToken('w',  match1to2);
addRegexToken('ww', match1to2, match2);
addRegexToken('W',  match1to2);
addRegexToken('WW', match1to2, match2);

addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
    week[token.substr(0, 1)] = toInt(input);
});

// HELPERS

// LOCALES

function localeWeek (mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
}

var defaultLocaleWeek = {
    dow : 0, // Sunday is the first day of the week.
    doy : 6  // The week that contains Jan 1st is the first week of the year.
};

function localeFirstDayOfWeek () {
    return this._week.dow;
}

function localeFirstDayOfYear () {
    return this._week.doy;
}

// MOMENTS

function getSetWeek (input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
}

function getSetISOWeek (input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
}

// FORMATTING

addFormatToken('d', 0, 'do', 'day');

addFormatToken('dd', 0, 0, function (format) {
    return this.localeData().weekdaysMin(this, format);
});

addFormatToken('ddd', 0, 0, function (format) {
    return this.localeData().weekdaysShort(this, format);
});

addFormatToken('dddd', 0, 0, function (format) {
    return this.localeData().weekdays(this, format);
});

addFormatToken('e', 0, 0, 'weekday');
addFormatToken('E', 0, 0, 'isoWeekday');

// ALIASES

addUnitAlias('day', 'd');
addUnitAlias('weekday', 'e');
addUnitAlias('isoWeekday', 'E');

// PRIORITY
addUnitPriority('day', 11);
addUnitPriority('weekday', 11);
addUnitPriority('isoWeekday', 11);

// PARSING

addRegexToken('d',    match1to2);
addRegexToken('e',    match1to2);
addRegexToken('E',    match1to2);
addRegexToken('dd',   function (isStrict, locale) {
    return locale.weekdaysMinRegex(isStrict);
});
addRegexToken('ddd',   function (isStrict, locale) {
    return locale.weekdaysShortRegex(isStrict);
});
addRegexToken('dddd',   function (isStrict, locale) {
    return locale.weekdaysRegex(isStrict);
});

addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
    var weekday = config._locale.weekdaysParse(input, token, config._strict);
    // if we didn't get a weekday name, mark the date as invalid
    if (weekday != null) {
        week.d = weekday;
    } else {
        getParsingFlags(config).invalidWeekday = input;
    }
});

addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
    week[token] = toInt(input);
});

// HELPERS

function parseWeekday(input, locale) {
    if (typeof input !== 'string') {
        return input;
    }

    if (!isNaN(input)) {
        return parseInt(input, 10);
    }

    input = locale.weekdaysParse(input);
    if (typeof input === 'number') {
        return input;
    }

    return null;
}

function parseIsoWeekday(input, locale) {
    if (typeof input === 'string') {
        return locale.weekdaysParse(input) % 7 || 7;
    }
    return isNaN(input) ? null : input;
}

// LOCALES

var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
function localeWeekdays (m, format) {
    if (!m) {
        return isArray(this._weekdays) ? this._weekdays :
            this._weekdays['standalone'];
    }
    return isArray(this._weekdays) ? this._weekdays[m.day()] :
        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
}

var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
function localeWeekdaysShort (m) {
    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
}

var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
function localeWeekdaysMin (m) {
    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
}

function handleStrictParse$1(weekdayName, format, strict) {
    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
    if (!this._weekdaysParse) {
        this._weekdaysParse = [];
        this._shortWeekdaysParse = [];
        this._minWeekdaysParse = [];

        for (i = 0; i < 7; ++i) {
            mom = createUTC([2000, 1]).day(i);
            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
        }
    }

    if (strict) {
        if (format === 'dddd') {
            ii = indexOf.call(this._weekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else if (format === 'ddd') {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        }
    } else {
        if (format === 'dddd') {
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else if (format === 'ddd') {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        }
    }
}

function localeWeekdaysParse (weekdayName, format, strict) {
    var i, mom, regex;

    if (this._weekdaysParseExact) {
        return handleStrictParse$1.call(this, weekdayName, format, strict);
    }

    if (!this._weekdaysParse) {
        this._weekdaysParse = [];
        this._minWeekdaysParse = [];
        this._shortWeekdaysParse = [];
        this._fullWeekdaysParse = [];
    }

    for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already

        mom = createUTC([2000, 1]).day(i);
        if (strict && !this._fullWeekdaysParse[i]) {
            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
        }
        if (!this._weekdaysParse[i]) {
            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
            return i;
        }
    }
}

// MOMENTS

function getSetDayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    if (input != null) {
        input = parseWeekday(input, this.localeData());
        return this.add(input - day, 'd');
    } else {
        return day;
    }
}

function getSetLocaleDayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return input == null ? weekday : this.add(input - weekday, 'd');
}

function getSetISODayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }

    // behaves the same as moment#day except
    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
    // as a setter, sunday should belong to the previous week.

    if (input != null) {
        var weekday = parseIsoWeekday(input, this.localeData());
        return this.day(this.day() % 7 ? weekday : weekday - 7);
    } else {
        return this.day() || 7;
    }
}

var defaultWeekdaysRegex = matchWord;
function weekdaysRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysStrictRegex;
        } else {
            return this._weekdaysRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            this._weekdaysRegex = defaultWeekdaysRegex;
        }
        return this._weekdaysStrictRegex && isStrict ?
            this._weekdaysStrictRegex : this._weekdaysRegex;
    }
}

var defaultWeekdaysShortRegex = matchWord;
function weekdaysShortRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysShortStrictRegex;
        } else {
            return this._weekdaysShortRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysShortRegex')) {
            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
        }
        return this._weekdaysShortStrictRegex && isStrict ?
            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
    }
}

var defaultWeekdaysMinRegex = matchWord;
function weekdaysMinRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysMinStrictRegex;
        } else {
            return this._weekdaysMinRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysMinRegex')) {
            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
        }
        return this._weekdaysMinStrictRegex && isStrict ?
            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
    }
}


function computeWeekdaysParse () {
    function cmpLenRev(a, b) {
        return b.length - a.length;
    }

    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
        i, mom, minp, shortp, longp;
    for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, 1]).day(i);
        minp = this.weekdaysMin(mom, '');
        shortp = this.weekdaysShort(mom, '');
        longp = this.weekdays(mom, '');
        minPieces.push(minp);
        shortPieces.push(shortp);
        longPieces.push(longp);
        mixedPieces.push(minp);
        mixedPieces.push(shortp);
        mixedPieces.push(longp);
    }
    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
    // will match the longer piece.
    minPieces.sort(cmpLenRev);
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 7; i++) {
        shortPieces[i] = regexEscape(shortPieces[i]);
        longPieces[i] = regexEscape(longPieces[i]);
        mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._weekdaysShortRegex = this._weekdaysRegex;
    this._weekdaysMinRegex = this._weekdaysRegex;

    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
}

// FORMATTING

function hFormat() {
    return this.hours() % 12 || 12;
}

function kFormat() {
    return this.hours() || 24;
}

addFormatToken('H', ['HH', 2], 0, 'hour');
addFormatToken('h', ['hh', 2], 0, hFormat);
addFormatToken('k', ['kk', 2], 0, kFormat);

addFormatToken('hmm', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});

addFormatToken('hmmss', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
        zeroFill(this.seconds(), 2);
});

addFormatToken('Hmm', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2);
});

addFormatToken('Hmmss', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2) +
        zeroFill(this.seconds(), 2);
});

function meridiem (token, lowercase) {
    addFormatToken(token, 0, 0, function () {
        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
    });
}

meridiem('a', true);
meridiem('A', false);

// ALIASES

addUnitAlias('hour', 'h');

// PRIORITY
addUnitPriority('hour', 13);

// PARSING

function matchMeridiem (isStrict, locale) {
    return locale._meridiemParse;
}

addRegexToken('a',  matchMeridiem);
addRegexToken('A',  matchMeridiem);
addRegexToken('H',  match1to2);
addRegexToken('h',  match1to2);
addRegexToken('k',  match1to2);
addRegexToken('HH', match1to2, match2);
addRegexToken('hh', match1to2, match2);
addRegexToken('kk', match1to2, match2);

addRegexToken('hmm', match3to4);
addRegexToken('hmmss', match5to6);
addRegexToken('Hmm', match3to4);
addRegexToken('Hmmss', match5to6);

addParseToken(['H', 'HH'], HOUR);
addParseToken(['k', 'kk'], function (input, array, config) {
    var kInput = toInt(input);
    array[HOUR] = kInput === 24 ? 0 : kInput;
});
addParseToken(['a', 'A'], function (input, array, config) {
    config._isPm = config._locale.isPM(input);
    config._meridiem = input;
});
addParseToken(['h', 'hh'], function (input, array, config) {
    array[HOUR] = toInt(input);
    getParsingFlags(config).bigHour = true;
});
addParseToken('hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
    getParsingFlags(config).bigHour = true;
});
addParseToken('hmmss', function (input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
    getParsingFlags(config).bigHour = true;
});
addParseToken('Hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
});
addParseToken('Hmmss', function (input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
});

// LOCALES

function localeIsPM (input) {
    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
    // Using charAt should be more compatible.
    return ((input + '').toLowerCase().charAt(0) === 'p');
}

var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
function localeMeridiem (hours, minutes, isLower) {
    if (hours > 11) {
        return isLower ? 'pm' : 'PM';
    } else {
        return isLower ? 'am' : 'AM';
    }
}


// MOMENTS

// Setting the hour should keep the time, because the user explicitly
// specified which hour he wants. So trying to maintain the same hour (in
// a new timezone) makes sense. Adding/subtracting hours does not follow
// this rule.
var getSetHour = makeGetSet('Hours', true);

// months
// week
// weekdays
// meridiem
var baseConfig = {
    calendar: defaultCalendar,
    longDateFormat: defaultLongDateFormat,
    invalidDate: defaultInvalidDate,
    ordinal: defaultOrdinal,
    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
    relativeTime: defaultRelativeTime,

    months: defaultLocaleMonths,
    monthsShort: defaultLocaleMonthsShort,

    week: defaultLocaleWeek,

    weekdays: defaultLocaleWeekdays,
    weekdaysMin: defaultLocaleWeekdaysMin,
    weekdaysShort: defaultLocaleWeekdaysShort,

    meridiemParse: defaultLocaleMeridiemParse
};

// internal storage for locale config files
var locales = {};
var localeFamilies = {};
var globalLocale;

function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
}

// pick the locale from the array
// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
function chooseLocale(names) {
    var i = 0, j, next, locale, split;

    while (i < names.length) {
        split = normalizeLocale(names[i]).split('-');
        j = split.length;
        next = normalizeLocale(names[i + 1]);
        next = next ? next.split('-') : null;
        while (j > 0) {
            locale = loadLocale(split.slice(0, j).join('-'));
            if (locale) {
                return locale;
            }
            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                //the next array item is better than a shallower substring of this one
                break;
            }
            j--;
        }
        i++;
    }
    return null;
}

function loadLocale(name) {
    var oldLocale = null;
    // TODO: Find a better way to register and load all the locales in Node
    if (!locales[name] && (typeof module !== 'undefined') &&
            module && module.exports) {
        try {
            oldLocale = globalLocale._abbr;
            var aliasedRequire = require;
            __webpack_require__(212)("./" + name);
            getSetGlobalLocale(oldLocale);
        } catch (e) {}
    }
    return locales[name];
}

// This function will load locale and then set the global locale.  If
// no arguments are passed in, it will simply return the current global
// locale key.
function getSetGlobalLocale (key, values) {
    var data;
    if (key) {
        if (isUndefined(values)) {
            data = getLocale(key);
        }
        else {
            data = defineLocale(key, values);
        }

        if (data) {
            // moment.duration._locale = moment._locale = data;
            globalLocale = data;
        }
    }

    return globalLocale._abbr;
}

function defineLocale (name, config) {
    if (config !== null) {
        var parentConfig = baseConfig;
        config.abbr = name;
        if (locales[name] != null) {
            deprecateSimple('defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                    'an existing locale. moment.defineLocale(localeName, ' +
                    'config) should only be used for creating a new locale ' +
                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
            parentConfig = locales[name]._config;
        } else if (config.parentLocale != null) {
            if (locales[config.parentLocale] != null) {
                parentConfig = locales[config.parentLocale]._config;
            } else {
                if (!localeFamilies[config.parentLocale]) {
                    localeFamilies[config.parentLocale] = [];
                }
                localeFamilies[config.parentLocale].push({
                    name: name,
                    config: config
                });
                return null;
            }
        }
        locales[name] = new Locale(mergeConfigs(parentConfig, config));

        if (localeFamilies[name]) {
            localeFamilies[name].forEach(function (x) {
                defineLocale(x.name, x.config);
            });
        }

        // backwards compat for now: also set the locale
        // make sure we set the locale AFTER all child locales have been
        // created, so we won't end up with the child locale set.
        getSetGlobalLocale(name);


        return locales[name];
    } else {
        // useful for testing
        delete locales[name];
        return null;
    }
}

function updateLocale(name, config) {
    if (config != null) {
        var locale, tmpLocale, parentConfig = baseConfig;
        // MERGE
        tmpLocale = loadLocale(name);
        if (tmpLocale != null) {
            parentConfig = tmpLocale._config;
        }
        config = mergeConfigs(parentConfig, config);
        locale = new Locale(config);
        locale.parentLocale = locales[name];
        locales[name] = locale;

        // backwards compat for now: also set the locale
        getSetGlobalLocale(name);
    } else {
        // pass null for config to unupdate, useful for tests
        if (locales[name] != null) {
            if (locales[name].parentLocale != null) {
                locales[name] = locales[name].parentLocale;
            } else if (locales[name] != null) {
                delete locales[name];
            }
        }
    }
    return locales[name];
}

// returns locale data
function getLocale (key) {
    var locale;

    if (key && key._locale && key._locale._abbr) {
        key = key._locale._abbr;
    }

    if (!key) {
        return globalLocale;
    }

    if (!isArray(key)) {
        //short-circuit everything else
        locale = loadLocale(key);
        if (locale) {
            return locale;
        }
        key = [key];
    }

    return chooseLocale(key);
}

function listLocales() {
    return keys(locales);
}

function checkOverflow (m) {
    var overflow;
    var a = m._a;

    if (a && getParsingFlags(m).overflow === -2) {
        overflow =
            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
            -1;

        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
            overflow = DATE;
        }
        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
            overflow = WEEK;
        }
        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
            overflow = WEEKDAY;
        }

        getParsingFlags(m).overflow = overflow;
    }

    return m;
}

// Pick the first defined of two or three arguments.
function defaults(a, b, c) {
    if (a != null) {
        return a;
    }
    if (b != null) {
        return b;
    }
    return c;
}

function currentDateArray(config) {
    // hooks is actually the exported moment object
    var nowValue = new Date(hooks.now());
    if (config._useUTC) {
        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
    }
    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
}

// convert an array to a date.
// the array should mirror the parameters below
// note: all values past the year are optional and will default to the lowest possible value.
// [year, month, day , hour, minute, second, millisecond]
function configFromArray (config) {
    var i, date, input = [], currentDate, expectedWeekday, yearToUse;

    if (config._d) {
        return;
    }

    currentDate = currentDateArray(config);

    //compute day of the year from weeks and weekdays
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
        dayOfYearFromWeekInfo(config);
    }

    //if the day of the year is set, figure out what it is
    if (config._dayOfYear != null) {
        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
            getParsingFlags(config)._overflowDayOfYear = true;
        }

        date = createUTCDate(yearToUse, 0, config._dayOfYear);
        config._a[MONTH] = date.getUTCMonth();
        config._a[DATE] = date.getUTCDate();
    }

    // Default to current date.
    // * if no year, month, day of month are given, default to today
    // * if day of month is given, default month and year
    // * if month is given, default only year
    // * if year is given, don't default anything
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
        config._a[i] = input[i] = currentDate[i];
    }

    // Zero out whatever was not defaulted, including time
    for (; i < 7; i++) {
        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
    }

    // Check for 24:00:00.000
    if (config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0) {
        config._nextDay = true;
        config._a[HOUR] = 0;
    }

    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

    // Apply timezone offset from input. The actual utcOffset can be changed
    // with parseZone.
    if (config._tzm != null) {
        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }

    if (config._nextDay) {
        config._a[HOUR] = 24;
    }

    // check for mismatching day of week
    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
        getParsingFlags(config).weekdayMismatch = true;
    }
}

function dayOfYearFromWeekInfo(config) {
    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
        dow = 1;
        doy = 4;

        // TODO: We need to take the current isoWeekYear, but that depends on
        // how we interpret now (local, utc, fixed offset). So create
        // a now version of current config (take local/utc/offset flags, and
        // create now).
        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
        week = defaults(w.W, 1);
        weekday = defaults(w.E, 1);
        if (weekday < 1 || weekday > 7) {
            weekdayOverflow = true;
        }
    } else {
        dow = config._locale._week.dow;
        doy = config._locale._week.doy;

        var curWeek = weekOfYear(createLocal(), dow, doy);

        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

        // Default to current week.
        week = defaults(w.w, curWeek.week);

        if (w.d != null) {
            // weekday -- low day numbers are considered next week
            weekday = w.d;
            if (weekday < 0 || weekday > 6) {
                weekdayOverflow = true;
            }
        } else if (w.e != null) {
            // local weekday -- counting starts from begining of week
            weekday = w.e + dow;
            if (w.e < 0 || w.e > 6) {
                weekdayOverflow = true;
            }
        } else {
            // default to begining of week
            weekday = dow;
        }
    }
    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
        getParsingFlags(config)._overflowWeeks = true;
    } else if (weekdayOverflow != null) {
        getParsingFlags(config)._overflowWeekday = true;
    } else {
        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
        config._a[YEAR] = temp.year;
        config._dayOfYear = temp.dayOfYear;
    }
}

// iso 8601 regex
// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

var isoDates = [
    ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
    ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
    ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
    ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
    ['YYYY-DDD', /\d{4}-\d{3}/],
    ['YYYY-MM', /\d{4}-\d\d/, false],
    ['YYYYYYMMDD', /[+-]\d{10}/],
    ['YYYYMMDD', /\d{8}/],
    // YYYYMM is NOT allowed by the standard
    ['GGGG[W]WWE', /\d{4}W\d{3}/],
    ['GGGG[W]WW', /\d{4}W\d{2}/, false],
    ['YYYYDDD', /\d{7}/]
];

// iso time formats and regexes
var isoTimes = [
    ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
    ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
    ['HH:mm:ss', /\d\d:\d\d:\d\d/],
    ['HH:mm', /\d\d:\d\d/],
    ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
    ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
    ['HHmmss', /\d\d\d\d\d\d/],
    ['HHmm', /\d\d\d\d/],
    ['HH', /\d\d/]
];

var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

// date from iso format
function configFromISO(config) {
    var i, l,
        string = config._i,
        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
        allowTime, dateFormat, timeFormat, tzFormat;

    if (match) {
        getParsingFlags(config).iso = true;

        for (i = 0, l = isoDates.length; i < l; i++) {
            if (isoDates[i][1].exec(match[1])) {
                dateFormat = isoDates[i][0];
                allowTime = isoDates[i][2] !== false;
                break;
            }
        }
        if (dateFormat == null) {
            config._isValid = false;
            return;
        }
        if (match[3]) {
            for (i = 0, l = isoTimes.length; i < l; i++) {
                if (isoTimes[i][1].exec(match[3])) {
                    // match[2] should be 'T' or space
                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
                    break;
                }
            }
            if (timeFormat == null) {
                config._isValid = false;
                return;
            }
        }
        if (!allowTime && timeFormat != null) {
            config._isValid = false;
            return;
        }
        if (match[4]) {
            if (tzRegex.exec(match[4])) {
                tzFormat = 'Z';
            } else {
                config._isValid = false;
                return;
            }
        }
        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
        configFromStringAndFormat(config);
    } else {
        config._isValid = false;
    }
}

// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
    var result = [
        untruncateYear(yearStr),
        defaultLocaleMonthsShort.indexOf(monthStr),
        parseInt(dayStr, 10),
        parseInt(hourStr, 10),
        parseInt(minuteStr, 10)
    ];

    if (secondStr) {
        result.push(parseInt(secondStr, 10));
    }

    return result;
}

function untruncateYear(yearStr) {
    var year = parseInt(yearStr, 10);
    if (year <= 49) {
        return 2000 + year;
    } else if (year <= 999) {
        return 1900 + year;
    }
    return year;
}

function preprocessRFC2822(s) {
    // Remove comments and folding whitespace and replace multiple-spaces with a single space
    return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').trim();
}

function checkWeekday(weekdayStr, parsedInput, config) {
    if (weekdayStr) {
        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
        if (weekdayProvided !== weekdayActual) {
            getParsingFlags(config).weekdayMismatch = true;
            config._isValid = false;
            return false;
        }
    }
    return true;
}

var obsOffsets = {
    UT: 0,
    GMT: 0,
    EDT: -4 * 60,
    EST: -5 * 60,
    CDT: -5 * 60,
    CST: -6 * 60,
    MDT: -6 * 60,
    MST: -7 * 60,
    PDT: -7 * 60,
    PST: -8 * 60
};

function calculateOffset(obsOffset, militaryOffset, numOffset) {
    if (obsOffset) {
        return obsOffsets[obsOffset];
    } else if (militaryOffset) {
        // the only allowed military tz is Z
        return 0;
    } else {
        var hm = parseInt(numOffset, 10);
        var m = hm % 100, h = (hm - m) / 100;
        return h * 60 + m;
    }
}

// date and time from ref 2822 format
function configFromRFC2822(config) {
    var match = rfc2822.exec(preprocessRFC2822(config._i));
    if (match) {
        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
        if (!checkWeekday(match[1], parsedArray, config)) {
            return;
        }

        config._a = parsedArray;
        config._tzm = calculateOffset(match[8], match[9], match[10]);

        config._d = createUTCDate.apply(null, config._a);
        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

        getParsingFlags(config).rfc2822 = true;
    } else {
        config._isValid = false;
    }
}

// date from iso format or fallback
function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);

    if (matched !== null) {
        config._d = new Date(+matched[1]);
        return;
    }

    configFromISO(config);
    if (config._isValid === false) {
        delete config._isValid;
    } else {
        return;
    }

    configFromRFC2822(config);
    if (config._isValid === false) {
        delete config._isValid;
    } else {
        return;
    }

    // Final attempt, use Input Fallback
    hooks.createFromInputFallback(config);
}

hooks.createFromInputFallback = deprecate(
    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
    'discouraged and will be removed in an upcoming major release. Please refer to ' +
    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
    function (config) {
        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
    }
);

// constant that refers to the ISO standard
hooks.ISO_8601 = function () {};

// constant that refers to the RFC 2822 form
hooks.RFC_2822 = function () {};

// date from string and format string
function configFromStringAndFormat(config) {
    // TODO: Move this to another part of the creation flow to prevent circular deps
    if (config._f === hooks.ISO_8601) {
        configFromISO(config);
        return;
    }
    if (config._f === hooks.RFC_2822) {
        configFromRFC2822(config);
        return;
    }
    config._a = [];
    getParsingFlags(config).empty = true;

    // This array is used to make a Date, either with `new Date` or `Date.UTC`
    var string = '' + config._i,
        i, parsedInput, tokens, token, skipped,
        stringLength = string.length,
        totalParsedInputLength = 0;

    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

    for (i = 0; i < tokens.length; i++) {
        token = tokens[i];
        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
        // console.log('token', token, 'parsedInput', parsedInput,
        //         'regex', getParseRegexForToken(token, config));
        if (parsedInput) {
            skipped = string.substr(0, string.indexOf(parsedInput));
            if (skipped.length > 0) {
                getParsingFlags(config).unusedInput.push(skipped);
            }
            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
            totalParsedInputLength += parsedInput.length;
        }
        // don't parse if it's not a known token
        if (formatTokenFunctions[token]) {
            if (parsedInput) {
                getParsingFlags(config).empty = false;
            }
            else {
                getParsingFlags(config).unusedTokens.push(token);
            }
            addTimeToArrayFromToken(token, parsedInput, config);
        }
        else if (config._strict && !parsedInput) {
            getParsingFlags(config).unusedTokens.push(token);
        }
    }

    // add remaining unparsed input length to the string
    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
    if (string.length > 0) {
        getParsingFlags(config).unusedInput.push(string);
    }

    // clear _12h flag if hour is <= 12
    if (config._a[HOUR] <= 12 &&
        getParsingFlags(config).bigHour === true &&
        config._a[HOUR] > 0) {
        getParsingFlags(config).bigHour = undefined;
    }

    getParsingFlags(config).parsedDateParts = config._a.slice(0);
    getParsingFlags(config).meridiem = config._meridiem;
    // handle meridiem
    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

    configFromArray(config);
    checkOverflow(config);
}


function meridiemFixWrap (locale, hour, meridiem) {
    var isPm;

    if (meridiem == null) {
        // nothing to do
        return hour;
    }
    if (locale.meridiemHour != null) {
        return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
        // Fallback
        isPm = locale.isPM(meridiem);
        if (isPm && hour < 12) {
            hour += 12;
        }
        if (!isPm && hour === 12) {
            hour = 0;
        }
        return hour;
    } else {
        // this is not supposed to happen
        return hour;
    }
}

// date from string and array of format strings
function configFromStringAndArray(config) {
    var tempConfig,
        bestMoment,

        scoreToBeat,
        i,
        currentScore;

    if (config._f.length === 0) {
        getParsingFlags(config).invalidFormat = true;
        config._d = new Date(NaN);
        return;
    }

    for (i = 0; i < config._f.length; i++) {
        currentScore = 0;
        tempConfig = copyConfig({}, config);
        if (config._useUTC != null) {
            tempConfig._useUTC = config._useUTC;
        }
        tempConfig._f = config._f[i];
        configFromStringAndFormat(tempConfig);

        if (!isValid(tempConfig)) {
            continue;
        }

        // if there is any input that was not parsed add a penalty for that format
        currentScore += getParsingFlags(tempConfig).charsLeftOver;

        //or tokens
        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

        getParsingFlags(tempConfig).score = currentScore;

        if (scoreToBeat == null || currentScore < scoreToBeat) {
            scoreToBeat = currentScore;
            bestMoment = tempConfig;
        }
    }

    extend(config, bestMoment || tempConfig);
}

function configFromObject(config) {
    if (config._d) {
        return;
    }

    var i = normalizeObjectUnits(config._i);
    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
        return obj && parseInt(obj, 10);
    });

    configFromArray(config);
}

function createFromConfig (config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    if (res._nextDay) {
        // Adding is smart enough around DST
        res.add(1, 'd');
        res._nextDay = undefined;
    }

    return res;
}

function prepareConfig (config) {
    var input = config._i,
        format = config._f;

    config._locale = config._locale || getLocale(config._l);

    if (input === null || (format === undefined && input === '')) {
        return createInvalid({nullInput: true});
    }

    if (typeof input === 'string') {
        config._i = input = config._locale.preparse(input);
    }

    if (isMoment(input)) {
        return new Moment(checkOverflow(input));
    } else if (isDate(input)) {
        config._d = input;
    } else if (isArray(format)) {
        configFromStringAndArray(config);
    } else if (format) {
        configFromStringAndFormat(config);
    }  else {
        configFromInput(config);
    }

    if (!isValid(config)) {
        config._d = null;
    }

    return config;
}

function configFromInput(config) {
    var input = config._i;
    if (isUndefined(input)) {
        config._d = new Date(hooks.now());
    } else if (isDate(input)) {
        config._d = new Date(input.valueOf());
    } else if (typeof input === 'string') {
        configFromString(config);
    } else if (isArray(input)) {
        config._a = map(input.slice(0), function (obj) {
            return parseInt(obj, 10);
        });
        configFromArray(config);
    } else if (isObject(input)) {
        configFromObject(config);
    } else if (isNumber(input)) {
        // from milliseconds
        config._d = new Date(input);
    } else {
        hooks.createFromInputFallback(config);
    }
}

function createLocalOrUTC (input, format, locale, strict, isUTC) {
    var c = {};

    if (locale === true || locale === false) {
        strict = locale;
        locale = undefined;
    }

    if ((isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)) {
        input = undefined;
    }
    // object construction must be done this way.
    // https://github.com/moment/moment/issues/1423
    c._isAMomentObject = true;
    c._useUTC = c._isUTC = isUTC;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;

    return createFromConfig(c);
}

function createLocal (input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, false);
}

var prototypeMin = deprecate(
    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
    function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other < this ? this : other;
        } else {
            return createInvalid();
        }
    }
);

var prototypeMax = deprecate(
    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
    function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other > this ? this : other;
        } else {
            return createInvalid();
        }
    }
);

// Pick a moment m from moments so that m[fn](other) is true for all
// other. This relies on the function fn to be transitive.
//
// moments should either be an array of moment objects or an array, whose
// first element is an array of moment objects.
function pickBy(fn, moments) {
    var res, i;
    if (moments.length === 1 && isArray(moments[0])) {
        moments = moments[0];
    }
    if (!moments.length) {
        return createLocal();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
        if (!moments[i].isValid() || moments[i][fn](res)) {
            res = moments[i];
        }
    }
    return res;
}

// TODO: Use [].sort instead?
function min () {
    var args = [].slice.call(arguments, 0);

    return pickBy('isBefore', args);
}

function max () {
    var args = [].slice.call(arguments, 0);

    return pickBy('isAfter', args);
}

var now = function () {
    return Date.now ? Date.now() : +(new Date());
};

var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

function isDurationValid(m) {
    for (var key in m) {
        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
            return false;
        }
    }

    var unitHasDecimal = false;
    for (var i = 0; i < ordering.length; ++i) {
        if (m[ordering[i]]) {
            if (unitHasDecimal) {
                return false; // only allow non-integers for smallest unit
            }
            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                unitHasDecimal = true;
            }
        }
    }

    return true;
}

function isValid$1() {
    return this._isValid;
}

function createInvalid$1() {
    return createDuration(NaN);
}

function Duration (duration) {
    var normalizedInput = normalizeObjectUnits(duration),
        years = normalizedInput.year || 0,
        quarters = normalizedInput.quarter || 0,
        months = normalizedInput.month || 0,
        weeks = normalizedInput.week || 0,
        days = normalizedInput.day || 0,
        hours = normalizedInput.hour || 0,
        minutes = normalizedInput.minute || 0,
        seconds = normalizedInput.second || 0,
        milliseconds = normalizedInput.millisecond || 0;

    this._isValid = isDurationValid(normalizedInput);

    // representation for dateAddRemove
    this._milliseconds = +milliseconds +
        seconds * 1e3 + // 1000
        minutes * 6e4 + // 1000 * 60
        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
    // Because of dateAddRemove treats 24 hours as different from a
    // day when working around DST, we need to store them separately
    this._days = +days +
        weeks * 7;
    // It is impossible to translate months into days without knowing
    // which months you are are talking about, so we have to store
    // it separately.
    this._months = +months +
        quarters * 3 +
        years * 12;

    this._data = {};

    this._locale = getLocale();

    this._bubble();
}

function isDuration (obj) {
    return obj instanceof Duration;
}

function absRound (number) {
    if (number < 0) {
        return Math.round(-1 * number) * -1;
    } else {
        return Math.round(number);
    }
}

// FORMATTING

function offset (token, separator) {
    addFormatToken(token, 0, 0, function () {
        var offset = this.utcOffset();
        var sign = '+';
        if (offset < 0) {
            offset = -offset;
            sign = '-';
        }
        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
    });
}

offset('Z', ':');
offset('ZZ', '');

// PARSING

addRegexToken('Z',  matchShortOffset);
addRegexToken('ZZ', matchShortOffset);
addParseToken(['Z', 'ZZ'], function (input, array, config) {
    config._useUTC = true;
    config._tzm = offsetFromString(matchShortOffset, input);
});

// HELPERS

// timezone chunker
// '+10:00' > ['10',  '00']
// '-1530'  > ['-15', '30']
var chunkOffset = /([\+\-]|\d\d)/gi;

function offsetFromString(matcher, string) {
    var matches = (string || '').match(matcher);

    if (matches === null) {
        return null;
    }

    var chunk   = matches[matches.length - 1] || [];
    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
    var minutes = +(parts[1] * 60) + toInt(parts[2]);

    return minutes === 0 ?
      0 :
      parts[0] === '+' ? minutes : -minutes;
}

// Return a moment from input, that is local/utc/zone equivalent to model.
function cloneWithOffset(input, model) {
    var res, diff;
    if (model._isUTC) {
        res = model.clone();
        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
        // Use low-level api, because this fn is low-level api.
        res._d.setTime(res._d.valueOf() + diff);
        hooks.updateOffset(res, false);
        return res;
    } else {
        return createLocal(input).local();
    }
}

function getDateOffset (m) {
    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
    // https://github.com/moment/moment/pull/1871
    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
}

// HOOKS

// This function will be called whenever a moment is mutated.
// It is intended to keep the offset in sync with the timezone.
hooks.updateOffset = function () {};

// MOMENTS

// keepLocalTime = true means only change the timezone, without
// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
// +0200, so we adjust the time as needed, to be valid.
//
// Keeping the time actually adds/subtracts (one hour)
// from the actual represented time. That is why we call updateOffset
// a second time. In case it wants us to change the offset again
// _changeInProgress == true case, then we have to adjust, because
// there is no such time in the given timezone.
function getSetOffset (input, keepLocalTime, keepMinutes) {
    var offset = this._offset || 0,
        localAdjust;
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    if (input != null) {
        if (typeof input === 'string') {
            input = offsetFromString(matchShortOffset, input);
            if (input === null) {
                return this;
            }
        } else if (Math.abs(input) < 16 && !keepMinutes) {
            input = input * 60;
        }
        if (!this._isUTC && keepLocalTime) {
            localAdjust = getDateOffset(this);
        }
        this._offset = input;
        this._isUTC = true;
        if (localAdjust != null) {
            this.add(localAdjust, 'm');
        }
        if (offset !== input) {
            if (!keepLocalTime || this._changeInProgress) {
                addSubtract(this, createDuration(input - offset, 'm'), 1, false);
            } else if (!this._changeInProgress) {
                this._changeInProgress = true;
                hooks.updateOffset(this, true);
                this._changeInProgress = null;
            }
        }
        return this;
    } else {
        return this._isUTC ? offset : getDateOffset(this);
    }
}

function getSetZone (input, keepLocalTime) {
    if (input != null) {
        if (typeof input !== 'string') {
            input = -input;
        }

        this.utcOffset(input, keepLocalTime);

        return this;
    } else {
        return -this.utcOffset();
    }
}

function setOffsetToUTC (keepLocalTime) {
    return this.utcOffset(0, keepLocalTime);
}

function setOffsetToLocal (keepLocalTime) {
    if (this._isUTC) {
        this.utcOffset(0, keepLocalTime);
        this._isUTC = false;

        if (keepLocalTime) {
            this.subtract(getDateOffset(this), 'm');
        }
    }
    return this;
}

function setOffsetToParsedOffset () {
    if (this._tzm != null) {
        this.utcOffset(this._tzm, false, true);
    } else if (typeof this._i === 'string') {
        var tZone = offsetFromString(matchOffset, this._i);
        if (tZone != null) {
            this.utcOffset(tZone);
        }
        else {
            this.utcOffset(0, true);
        }
    }
    return this;
}

function hasAlignedHourOffset (input) {
    if (!this.isValid()) {
        return false;
    }
    input = input ? createLocal(input).utcOffset() : 0;

    return (this.utcOffset() - input) % 60 === 0;
}

function isDaylightSavingTime () {
    return (
        this.utcOffset() > this.clone().month(0).utcOffset() ||
        this.utcOffset() > this.clone().month(5).utcOffset()
    );
}

function isDaylightSavingTimeShifted () {
    if (!isUndefined(this._isDSTShifted)) {
        return this._isDSTShifted;
    }

    var c = {};

    copyConfig(c, this);
    c = prepareConfig(c);

    if (c._a) {
        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
        this._isDSTShifted = this.isValid() &&
            compareArrays(c._a, other.toArray()) > 0;
    } else {
        this._isDSTShifted = false;
    }

    return this._isDSTShifted;
}

function isLocal () {
    return this.isValid() ? !this._isUTC : false;
}

function isUtcOffset () {
    return this.isValid() ? this._isUTC : false;
}

function isUtc () {
    return this.isValid() ? this._isUTC && this._offset === 0 : false;
}

// ASP.NET json date format regex
var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
// and further modified to allow for strings containing both week and day
var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

function createDuration (input, key) {
    var duration = input,
        // matching against regexp is expensive, do it on demand
        match = null,
        sign,
        ret,
        diffRes;

    if (isDuration(input)) {
        duration = {
            ms : input._milliseconds,
            d  : input._days,
            M  : input._months
        };
    } else if (isNumber(input)) {
        duration = {};
        if (key) {
            duration[key] = input;
        } else {
            duration.milliseconds = input;
        }
    } else if (!!(match = aspNetRegex.exec(input))) {
        sign = (match[1] === '-') ? -1 : 1;
        duration = {
            y  : 0,
            d  : toInt(match[DATE])                         * sign,
            h  : toInt(match[HOUR])                         * sign,
            m  : toInt(match[MINUTE])                       * sign,
            s  : toInt(match[SECOND])                       * sign,
            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
        };
    } else if (!!(match = isoRegex.exec(input))) {
        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;
        duration = {
            y : parseIso(match[2], sign),
            M : parseIso(match[3], sign),
            w : parseIso(match[4], sign),
            d : parseIso(match[5], sign),
            h : parseIso(match[6], sign),
            m : parseIso(match[7], sign),
            s : parseIso(match[8], sign)
        };
    } else if (duration == null) {// checks for null or undefined
        duration = {};
    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

        duration = {};
        duration.ms = diffRes.milliseconds;
        duration.M = diffRes.months;
    }

    ret = new Duration(duration);

    if (isDuration(input) && hasOwnProp(input, '_locale')) {
        ret._locale = input._locale;
    }

    return ret;
}

createDuration.fn = Duration.prototype;
createDuration.invalid = createInvalid$1;

function parseIso (inp, sign) {
    // We'd normally use ~~inp for this, but unfortunately it also
    // converts floats to ints.
    // inp may be undefined, so careful calling replace on it.
    var res = inp && parseFloat(inp.replace(',', '.'));
    // apply sign while we're at it
    return (isNaN(res) ? 0 : res) * sign;
}

function positiveMomentsDifference(base, other) {
    var res = {milliseconds: 0, months: 0};

    res.months = other.month() - base.month() +
        (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
        --res.months;
    }

    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

    return res;
}

function momentsDifference(base, other) {
    var res;
    if (!(base.isValid() && other.isValid())) {
        return {milliseconds: 0, months: 0};
    }

    other = cloneWithOffset(other, base);
    if (base.isBefore(other)) {
        res = positiveMomentsDifference(base, other);
    } else {
        res = positiveMomentsDifference(other, base);
        res.milliseconds = -res.milliseconds;
        res.months = -res.months;
    }

    return res;
}

// TODO: remove 'name' arg after deprecation is removed
function createAdder(direction, name) {
    return function (val, period) {
        var dur, tmp;
        //invert the arguments, but complain about it
        if (period !== null && !isNaN(+period)) {
            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
            tmp = val; val = period; period = tmp;
        }

        val = typeof val === 'string' ? +val : val;
        dur = createDuration(val, period);
        addSubtract(this, dur, direction);
        return this;
    };
}

function addSubtract (mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
        days = absRound(duration._days),
        months = absRound(duration._months);

    if (!mom.isValid()) {
        // No op
        return;
    }

    updateOffset = updateOffset == null ? true : updateOffset;

    if (months) {
        setMonth(mom, get(mom, 'Month') + months * isAdding);
    }
    if (days) {
        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
    }
    if (milliseconds) {
        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
    }
    if (updateOffset) {
        hooks.updateOffset(mom, days || months);
    }
}

var add      = createAdder(1, 'add');
var subtract = createAdder(-1, 'subtract');

function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, 'days', true);
    return diff < -6 ? 'sameElse' :
            diff < -1 ? 'lastWeek' :
            diff < 0 ? 'lastDay' :
            diff < 1 ? 'sameDay' :
            diff < 2 ? 'nextDay' :
            diff < 7 ? 'nextWeek' : 'sameElse';
}

function calendar$1 (time, formats) {
    // We want to compare the start of today, vs this.
    // Getting start-of-today depends on whether we're local/utc/offset or not.
    var now = time || createLocal(),
        sod = cloneWithOffset(now, this).startOf('day'),
        format = hooks.calendarFormat(this, sod) || 'sameElse';

    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
}

function clone () {
    return new Moment(this);
}

function isAfter (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() > localInput.valueOf();
    } else {
        return localInput.valueOf() < this.clone().startOf(units).valueOf();
    }
}

function isBefore (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() < localInput.valueOf();
    } else {
        return this.clone().endOf(units).valueOf() < localInput.valueOf();
    }
}

function isBetween (from, to, units, inclusivity) {
    inclusivity = inclusivity || '()';
    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
}

function isSame (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input),
        inputMs;
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(units || 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() === localInput.valueOf();
    } else {
        inputMs = localInput.valueOf();
        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
    }
}

function isSameOrAfter (input, units) {
    return this.isSame(input, units) || this.isAfter(input,units);
}

function isSameOrBefore (input, units) {
    return this.isSame(input, units) || this.isBefore(input,units);
}

function diff (input, units, asFloat) {
    var that,
        zoneDelta,
        delta, output;

    if (!this.isValid()) {
        return NaN;
    }

    that = cloneWithOffset(input, this);

    if (!that.isValid()) {
        return NaN;
    }

    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

    units = normalizeUnits(units);

    switch (units) {
        case 'year': output = monthDiff(this, that) / 12; break;
        case 'month': output = monthDiff(this, that); break;
        case 'quarter': output = monthDiff(this, that) / 3; break;
        case 'second': output = (this - that) / 1e3; break; // 1000
        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
        default: output = this - that;
    }

    return asFloat ? output : absFloor(output);
}

function monthDiff (a, b) {
    // difference in months
    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
        // b is in (anchor - 1 month, anchor + 1 month)
        anchor = a.clone().add(wholeMonthDiff, 'months'),
        anchor2, adjust;

    if (b - anchor < 0) {
        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
        // linear across the month
        adjust = (b - anchor) / (anchor - anchor2);
    } else {
        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
        // linear across the month
        adjust = (b - anchor) / (anchor2 - anchor);
    }

    //check for negative zero, return zero if negative zero
    return -(wholeMonthDiff + adjust) || 0;
}

hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

function toString () {
    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
}

function toISOString(keepOffset) {
    if (!this.isValid()) {
        return null;
    }
    var utc = keepOffset !== true;
    var m = utc ? this.clone().utc() : this;
    if (m.year() < 0 || m.year() > 9999) {
        return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }
    if (isFunction(Date.prototype.toISOString)) {
        // native implementation is ~50x faster, use it when we can
        if (utc) {
            return this.toDate().toISOString();
        } else {
            return new Date(this._d.valueOf()).toISOString().replace('Z', formatMoment(m, 'Z'));
        }
    }
    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
}

/**
 * Return a human readable representation of a moment that can
 * also be evaluated to get a new moment which is the same
 *
 * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
 */
function inspect () {
    if (!this.isValid()) {
        return 'moment.invalid(/* ' + this._i + ' */)';
    }
    var func = 'moment';
    var zone = '';
    if (!this.isLocal()) {
        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
        zone = 'Z';
    }
    var prefix = '[' + func + '("]';
    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
    var suffix = zone + '[")]';

    return this.format(prefix + year + datetime + suffix);
}

function format (inputString) {
    if (!inputString) {
        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
    }
    var output = formatMoment(this, inputString);
    return this.localeData().postformat(output);
}

function from (time, withoutSuffix) {
    if (this.isValid() &&
            ((isMoment(time) && time.isValid()) ||
             createLocal(time).isValid())) {
        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
    } else {
        return this.localeData().invalidDate();
    }
}

function fromNow (withoutSuffix) {
    return this.from(createLocal(), withoutSuffix);
}

function to (time, withoutSuffix) {
    if (this.isValid() &&
            ((isMoment(time) && time.isValid()) ||
             createLocal(time).isValid())) {
        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
    } else {
        return this.localeData().invalidDate();
    }
}

function toNow (withoutSuffix) {
    return this.to(createLocal(), withoutSuffix);
}

// If passed a locale key, it will set the locale for this
// instance.  Otherwise, it will return the locale configuration
// variables for this instance.
function locale (key) {
    var newLocaleData;

    if (key === undefined) {
        return this._locale._abbr;
    } else {
        newLocaleData = getLocale(key);
        if (newLocaleData != null) {
            this._locale = newLocaleData;
        }
        return this;
    }
}

var lang = deprecate(
    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
    function (key) {
        if (key === undefined) {
            return this.localeData();
        } else {
            return this.locale(key);
        }
    }
);

function localeData () {
    return this._locale;
}

function startOf (units) {
    units = normalizeUnits(units);
    // the following switch intentionally omits break keywords
    // to utilize falling through the cases.
    switch (units) {
        case 'year':
            this.month(0);
            /* falls through */
        case 'quarter':
        case 'month':
            this.date(1);
            /* falls through */
        case 'week':
        case 'isoWeek':
        case 'day':
        case 'date':
            this.hours(0);
            /* falls through */
        case 'hour':
            this.minutes(0);
            /* falls through */
        case 'minute':
            this.seconds(0);
            /* falls through */
        case 'second':
            this.milliseconds(0);
    }

    // weeks are a special case
    if (units === 'week') {
        this.weekday(0);
    }
    if (units === 'isoWeek') {
        this.isoWeekday(1);
    }

    // quarters are also special
    if (units === 'quarter') {
        this.month(Math.floor(this.month() / 3) * 3);
    }

    return this;
}

function endOf (units) {
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond') {
        return this;
    }

    // 'date' is an alias for 'day', so it should be considered as such.
    if (units === 'date') {
        units = 'day';
    }

    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
}

function valueOf () {
    return this._d.valueOf() - ((this._offset || 0) * 60000);
}

function unix () {
    return Math.floor(this.valueOf() / 1000);
}

function toDate () {
    return new Date(this.valueOf());
}

function toArray () {
    var m = this;
    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
}

function toObject () {
    var m = this;
    return {
        years: m.year(),
        months: m.month(),
        date: m.date(),
        hours: m.hours(),
        minutes: m.minutes(),
        seconds: m.seconds(),
        milliseconds: m.milliseconds()
    };
}

function toJSON () {
    // new Date(NaN).toJSON() === null
    return this.isValid() ? this.toISOString() : null;
}

function isValid$2 () {
    return isValid(this);
}

function parsingFlags () {
    return extend({}, getParsingFlags(this));
}

function invalidAt () {
    return getParsingFlags(this).overflow;
}

function creationData() {
    return {
        input: this._i,
        format: this._f,
        locale: this._locale,
        isUTC: this._isUTC,
        strict: this._strict
    };
}

// FORMATTING

addFormatToken(0, ['gg', 2], 0, function () {
    return this.weekYear() % 100;
});

addFormatToken(0, ['GG', 2], 0, function () {
    return this.isoWeekYear() % 100;
});

function addWeekYearFormatToken (token, getter) {
    addFormatToken(0, [token, token.length], 0, getter);
}

addWeekYearFormatToken('gggg',     'weekYear');
addWeekYearFormatToken('ggggg',    'weekYear');
addWeekYearFormatToken('GGGG',  'isoWeekYear');
addWeekYearFormatToken('GGGGG', 'isoWeekYear');

// ALIASES

addUnitAlias('weekYear', 'gg');
addUnitAlias('isoWeekYear', 'GG');

// PRIORITY

addUnitPriority('weekYear', 1);
addUnitPriority('isoWeekYear', 1);


// PARSING

addRegexToken('G',      matchSigned);
addRegexToken('g',      matchSigned);
addRegexToken('GG',     match1to2, match2);
addRegexToken('gg',     match1to2, match2);
addRegexToken('GGGG',   match1to4, match4);
addRegexToken('gggg',   match1to4, match4);
addRegexToken('GGGGG',  match1to6, match6);
addRegexToken('ggggg',  match1to6, match6);

addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
    week[token.substr(0, 2)] = toInt(input);
});

addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
    week[token] = hooks.parseTwoDigitYear(input);
});

// MOMENTS

function getSetWeekYear (input) {
    return getSetWeekYearHelper.call(this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy);
}

function getSetISOWeekYear (input) {
    return getSetWeekYearHelper.call(this,
            input, this.isoWeek(), this.isoWeekday(), 1, 4);
}

function getISOWeeksInYear () {
    return weeksInYear(this.year(), 1, 4);
}

function getWeeksInYear () {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
}

function getSetWeekYearHelper(input, week, weekday, dow, doy) {
    var weeksTarget;
    if (input == null) {
        return weekOfYear(this, dow, doy).year;
    } else {
        weeksTarget = weeksInYear(input, dow, doy);
        if (week > weeksTarget) {
            week = weeksTarget;
        }
        return setWeekAll.call(this, input, week, weekday, dow, doy);
    }
}

function setWeekAll(weekYear, week, weekday, dow, doy) {
    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

    this.year(date.getUTCFullYear());
    this.month(date.getUTCMonth());
    this.date(date.getUTCDate());
    return this;
}

// FORMATTING

addFormatToken('Q', 0, 'Qo', 'quarter');

// ALIASES

addUnitAlias('quarter', 'Q');

// PRIORITY

addUnitPriority('quarter', 7);

// PARSING

addRegexToken('Q', match1);
addParseToken('Q', function (input, array) {
    array[MONTH] = (toInt(input) - 1) * 3;
});

// MOMENTS

function getSetQuarter (input) {
    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
}

// FORMATTING

addFormatToken('D', ['DD', 2], 'Do', 'date');

// ALIASES

addUnitAlias('date', 'D');

// PRIOROITY
addUnitPriority('date', 9);

// PARSING

addRegexToken('D',  match1to2);
addRegexToken('DD', match1to2, match2);
addRegexToken('Do', function (isStrict, locale) {
    // TODO: Remove "ordinalParse" fallback in next major release.
    return isStrict ?
      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
      locale._dayOfMonthOrdinalParseLenient;
});

addParseToken(['D', 'DD'], DATE);
addParseToken('Do', function (input, array) {
    array[DATE] = toInt(input.match(match1to2)[0]);
});

// MOMENTS

var getSetDayOfMonth = makeGetSet('Date', true);

// FORMATTING

addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

// ALIASES

addUnitAlias('dayOfYear', 'DDD');

// PRIORITY
addUnitPriority('dayOfYear', 4);

// PARSING

addRegexToken('DDD',  match1to3);
addRegexToken('DDDD', match3);
addParseToken(['DDD', 'DDDD'], function (input, array, config) {
    config._dayOfYear = toInt(input);
});

// HELPERS

// MOMENTS

function getSetDayOfYear (input) {
    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
}

// FORMATTING

addFormatToken('m', ['mm', 2], 0, 'minute');

// ALIASES

addUnitAlias('minute', 'm');

// PRIORITY

addUnitPriority('minute', 14);

// PARSING

addRegexToken('m',  match1to2);
addRegexToken('mm', match1to2, match2);
addParseToken(['m', 'mm'], MINUTE);

// MOMENTS

var getSetMinute = makeGetSet('Minutes', false);

// FORMATTING

addFormatToken('s', ['ss', 2], 0, 'second');

// ALIASES

addUnitAlias('second', 's');

// PRIORITY

addUnitPriority('second', 15);

// PARSING

addRegexToken('s',  match1to2);
addRegexToken('ss', match1to2, match2);
addParseToken(['s', 'ss'], SECOND);

// MOMENTS

var getSetSecond = makeGetSet('Seconds', false);

// FORMATTING

addFormatToken('S', 0, 0, function () {
    return ~~(this.millisecond() / 100);
});

addFormatToken(0, ['SS', 2], 0, function () {
    return ~~(this.millisecond() / 10);
});

addFormatToken(0, ['SSS', 3], 0, 'millisecond');
addFormatToken(0, ['SSSS', 4], 0, function () {
    return this.millisecond() * 10;
});
addFormatToken(0, ['SSSSS', 5], 0, function () {
    return this.millisecond() * 100;
});
addFormatToken(0, ['SSSSSS', 6], 0, function () {
    return this.millisecond() * 1000;
});
addFormatToken(0, ['SSSSSSS', 7], 0, function () {
    return this.millisecond() * 10000;
});
addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
    return this.millisecond() * 100000;
});
addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
    return this.millisecond() * 1000000;
});


// ALIASES

addUnitAlias('millisecond', 'ms');

// PRIORITY

addUnitPriority('millisecond', 16);

// PARSING

addRegexToken('S',    match1to3, match1);
addRegexToken('SS',   match1to3, match2);
addRegexToken('SSS',  match1to3, match3);

var token;
for (token = 'SSSS'; token.length <= 9; token += 'S') {
    addRegexToken(token, matchUnsigned);
}

function parseMs(input, array) {
    array[MILLISECOND] = toInt(('0.' + input) * 1000);
}

for (token = 'S'; token.length <= 9; token += 'S') {
    addParseToken(token, parseMs);
}
// MOMENTS

var getSetMillisecond = makeGetSet('Milliseconds', false);

// FORMATTING

addFormatToken('z',  0, 0, 'zoneAbbr');
addFormatToken('zz', 0, 0, 'zoneName');

// MOMENTS

function getZoneAbbr () {
    return this._isUTC ? 'UTC' : '';
}

function getZoneName () {
    return this._isUTC ? 'Coordinated Universal Time' : '';
}

var proto = Moment.prototype;

proto.add               = add;
proto.calendar          = calendar$1;
proto.clone             = clone;
proto.diff              = diff;
proto.endOf             = endOf;
proto.format            = format;
proto.from              = from;
proto.fromNow           = fromNow;
proto.to                = to;
proto.toNow             = toNow;
proto.get               = stringGet;
proto.invalidAt         = invalidAt;
proto.isAfter           = isAfter;
proto.isBefore          = isBefore;
proto.isBetween         = isBetween;
proto.isSame            = isSame;
proto.isSameOrAfter     = isSameOrAfter;
proto.isSameOrBefore    = isSameOrBefore;
proto.isValid           = isValid$2;
proto.lang              = lang;
proto.locale            = locale;
proto.localeData        = localeData;
proto.max               = prototypeMax;
proto.min               = prototypeMin;
proto.parsingFlags      = parsingFlags;
proto.set               = stringSet;
proto.startOf           = startOf;
proto.subtract          = subtract;
proto.toArray           = toArray;
proto.toObject          = toObject;
proto.toDate            = toDate;
proto.toISOString       = toISOString;
proto.inspect           = inspect;
proto.toJSON            = toJSON;
proto.toString          = toString;
proto.unix              = unix;
proto.valueOf           = valueOf;
proto.creationData      = creationData;

// Year
proto.year       = getSetYear;
proto.isLeapYear = getIsLeapYear;

// Week Year
proto.weekYear    = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;

// Quarter
proto.quarter = proto.quarters = getSetQuarter;

// Month
proto.month       = getSetMonth;
proto.daysInMonth = getDaysInMonth;

// Week
proto.week           = proto.weeks        = getSetWeek;
proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
proto.weeksInYear    = getWeeksInYear;
proto.isoWeeksInYear = getISOWeeksInYear;

// Day
proto.date       = getSetDayOfMonth;
proto.day        = proto.days             = getSetDayOfWeek;
proto.weekday    = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear  = getSetDayOfYear;

// Hour
proto.hour = proto.hours = getSetHour;

// Minute
proto.minute = proto.minutes = getSetMinute;

// Second
proto.second = proto.seconds = getSetSecond;

// Millisecond
proto.millisecond = proto.milliseconds = getSetMillisecond;

// Offset
proto.utcOffset            = getSetOffset;
proto.utc                  = setOffsetToUTC;
proto.local                = setOffsetToLocal;
proto.parseZone            = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST                = isDaylightSavingTime;
proto.isLocal              = isLocal;
proto.isUtcOffset          = isUtcOffset;
proto.isUtc                = isUtc;
proto.isUTC                = isUtc;

// Timezone
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;

// Deprecations
proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

function createUnix (input) {
    return createLocal(input * 1000);
}

function createInZone () {
    return createLocal.apply(null, arguments).parseZone();
}

function preParsePostFormat (string) {
    return string;
}

var proto$1 = Locale.prototype;

proto$1.calendar        = calendar;
proto$1.longDateFormat  = longDateFormat;
proto$1.invalidDate     = invalidDate;
proto$1.ordinal         = ordinal;
proto$1.preparse        = preParsePostFormat;
proto$1.postformat      = preParsePostFormat;
proto$1.relativeTime    = relativeTime;
proto$1.pastFuture      = pastFuture;
proto$1.set             = set;

// Month
proto$1.months            =        localeMonths;
proto$1.monthsShort       =        localeMonthsShort;
proto$1.monthsParse       =        localeMonthsParse;
proto$1.monthsRegex       = monthsRegex;
proto$1.monthsShortRegex  = monthsShortRegex;

// Week
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;

// Day of Week
proto$1.weekdays       =        localeWeekdays;
proto$1.weekdaysMin    =        localeWeekdaysMin;
proto$1.weekdaysShort  =        localeWeekdaysShort;
proto$1.weekdaysParse  =        localeWeekdaysParse;

proto$1.weekdaysRegex       =        weekdaysRegex;
proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

// Hours
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;

function get$1 (format, index, field, setter) {
    var locale = getLocale();
    var utc = createUTC().set(setter, index);
    return locale[field](utc, format);
}

function listMonthsImpl (format, index, field) {
    if (isNumber(format)) {
        index = format;
        format = undefined;
    }

    format = format || '';

    if (index != null) {
        return get$1(format, index, field, 'month');
    }

    var i;
    var out = [];
    for (i = 0; i < 12; i++) {
        out[i] = get$1(format, i, field, 'month');
    }
    return out;
}

// ()
// (5)
// (fmt, 5)
// (fmt)
// (true)
// (true, 5)
// (true, fmt, 5)
// (true, fmt)
function listWeekdaysImpl (localeSorted, format, index, field) {
    if (typeof localeSorted === 'boolean') {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';
    } else {
        format = localeSorted;
        index = format;
        localeSorted = false;

        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';
    }

    var locale = getLocale(),
        shift = localeSorted ? locale._week.dow : 0;

    if (index != null) {
        return get$1(format, (index + shift) % 7, field, 'day');
    }

    var i;
    var out = [];
    for (i = 0; i < 7; i++) {
        out[i] = get$1(format, (i + shift) % 7, field, 'day');
    }
    return out;
}

function listMonths (format, index) {
    return listMonthsImpl(format, index, 'months');
}

function listMonthsShort (format, index) {
    return listMonthsImpl(format, index, 'monthsShort');
}

function listWeekdays (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
}

function listWeekdaysShort (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
}

function listWeekdaysMin (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
}

getSetGlobalLocale('en', {
    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (toInt(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    }
});

// Side effect imports
hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

var mathAbs = Math.abs;

function abs () {
    var data           = this._data;

    this._milliseconds = mathAbs(this._milliseconds);
    this._days         = mathAbs(this._days);
    this._months       = mathAbs(this._months);

    data.milliseconds  = mathAbs(data.milliseconds);
    data.seconds       = mathAbs(data.seconds);
    data.minutes       = mathAbs(data.minutes);
    data.hours         = mathAbs(data.hours);
    data.months        = mathAbs(data.months);
    data.years         = mathAbs(data.years);

    return this;
}

function addSubtract$1 (duration, input, value, direction) {
    var other = createDuration(input, value);

    duration._milliseconds += direction * other._milliseconds;
    duration._days         += direction * other._days;
    duration._months       += direction * other._months;

    return duration._bubble();
}

// supports only 2.0-style add(1, 's') or add(duration)
function add$1 (input, value) {
    return addSubtract$1(this, input, value, 1);
}

// supports only 2.0-style subtract(1, 's') or subtract(duration)
function subtract$1 (input, value) {
    return addSubtract$1(this, input, value, -1);
}

function absCeil (number) {
    if (number < 0) {
        return Math.floor(number);
    } else {
        return Math.ceil(number);
    }
}

function bubble () {
    var milliseconds = this._milliseconds;
    var days         = this._days;
    var months       = this._months;
    var data         = this._data;
    var seconds, minutes, hours, years, monthsFromDays;

    // if we have a mix of positive and negative values, bubble down first
    // check: https://github.com/moment/moment/issues/2166
    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
            (milliseconds <= 0 && days <= 0 && months <= 0))) {
        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
        days = 0;
        months = 0;
    }

    // The following code bubbles up values, see the tests for
    // examples of what that means.
    data.milliseconds = milliseconds % 1000;

    seconds           = absFloor(milliseconds / 1000);
    data.seconds      = seconds % 60;

    minutes           = absFloor(seconds / 60);
    data.minutes      = minutes % 60;

    hours             = absFloor(minutes / 60);
    data.hours        = hours % 24;

    days += absFloor(hours / 24);

    // convert days to months
    monthsFromDays = absFloor(daysToMonths(days));
    months += monthsFromDays;
    days -= absCeil(monthsToDays(monthsFromDays));

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;

    data.days   = days;
    data.months = months;
    data.years  = years;

    return this;
}

function daysToMonths (days) {
    // 400 years have 146097 days (taking into account leap year rules)
    // 400 years have 12 months === 4800
    return days * 4800 / 146097;
}

function monthsToDays (months) {
    // the reverse of daysToMonths
    return months * 146097 / 4800;
}

function as (units) {
    if (!this.isValid()) {
        return NaN;
    }
    var days;
    var months;
    var milliseconds = this._milliseconds;

    units = normalizeUnits(units);

    if (units === 'month' || units === 'year') {
        days   = this._days   + milliseconds / 864e5;
        months = this._months + daysToMonths(days);
        return units === 'month' ? months : months / 12;
    } else {
        // handle milliseconds separately because of floating point math errors (issue #1867)
        days = this._days + Math.round(monthsToDays(this._months));
        switch (units) {
            case 'week'   : return days / 7     + milliseconds / 6048e5;
            case 'day'    : return days         + milliseconds / 864e5;
            case 'hour'   : return days * 24    + milliseconds / 36e5;
            case 'minute' : return days * 1440  + milliseconds / 6e4;
            case 'second' : return days * 86400 + milliseconds / 1000;
            // Math.floor prevents floating point math errors here
            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
            default: throw new Error('Unknown unit ' + units);
        }
    }
}

// TODO: Use this.as('ms')?
function valueOf$1 () {
    if (!this.isValid()) {
        return NaN;
    }
    return (
        this._milliseconds +
        this._days * 864e5 +
        (this._months % 12) * 2592e6 +
        toInt(this._months / 12) * 31536e6
    );
}

function makeAs (alias) {
    return function () {
        return this.as(alias);
    };
}

var asMilliseconds = makeAs('ms');
var asSeconds      = makeAs('s');
var asMinutes      = makeAs('m');
var asHours        = makeAs('h');
var asDays         = makeAs('d');
var asWeeks        = makeAs('w');
var asMonths       = makeAs('M');
var asYears        = makeAs('y');

function clone$1 () {
    return createDuration(this);
}

function get$2 (units) {
    units = normalizeUnits(units);
    return this.isValid() ? this[units + 's']() : NaN;
}

function makeGetter(name) {
    return function () {
        return this.isValid() ? this._data[name] : NaN;
    };
}

var milliseconds = makeGetter('milliseconds');
var seconds      = makeGetter('seconds');
var minutes      = makeGetter('minutes');
var hours        = makeGetter('hours');
var days         = makeGetter('days');
var months       = makeGetter('months');
var years        = makeGetter('years');

function weeks () {
    return absFloor(this.days() / 7);
}

var round = Math.round;
var thresholds = {
    ss: 44,         // a few seconds to seconds
    s : 45,         // seconds to minute
    m : 45,         // minutes to hour
    h : 22,         // hours to day
    d : 26,         // days to month
    M : 11          // months to year
};

// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
}

function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
    var duration = createDuration(posNegDuration).abs();
    var seconds  = round(duration.as('s'));
    var minutes  = round(duration.as('m'));
    var hours    = round(duration.as('h'));
    var days     = round(duration.as('d'));
    var months   = round(duration.as('M'));
    var years    = round(duration.as('y'));

    var a = seconds <= thresholds.ss && ['s', seconds]  ||
            seconds < thresholds.s   && ['ss', seconds] ||
            minutes <= 1             && ['m']           ||
            minutes < thresholds.m   && ['mm', minutes] ||
            hours   <= 1             && ['h']           ||
            hours   < thresholds.h   && ['hh', hours]   ||
            days    <= 1             && ['d']           ||
            days    < thresholds.d   && ['dd', days]    ||
            months  <= 1             && ['M']           ||
            months  < thresholds.M   && ['MM', months]  ||
            years   <= 1             && ['y']           || ['yy', years];

    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
}

// This function allows you to set the rounding function for relative time strings
function getSetRelativeTimeRounding (roundingFunction) {
    if (roundingFunction === undefined) {
        return round;
    }
    if (typeof(roundingFunction) === 'function') {
        round = roundingFunction;
        return true;
    }
    return false;
}

// This function allows you to set a threshold for relative time strings
function getSetRelativeTimeThreshold (threshold, limit) {
    if (thresholds[threshold] === undefined) {
        return false;
    }
    if (limit === undefined) {
        return thresholds[threshold];
    }
    thresholds[threshold] = limit;
    if (threshold === 's') {
        thresholds.ss = limit - 1;
    }
    return true;
}

function humanize (withSuffix) {
    if (!this.isValid()) {
        return this.localeData().invalidDate();
    }

    var locale = this.localeData();
    var output = relativeTime$1(this, !withSuffix, locale);

    if (withSuffix) {
        output = locale.pastFuture(+this, output);
    }

    return locale.postformat(output);
}

var abs$1 = Math.abs;

function sign(x) {
    return ((x > 0) - (x < 0)) || +x;
}

function toISOString$1() {
    // for ISO strings we do not use the normal bubbling rules:
    //  * milliseconds bubble up until they become hours
    //  * days do not bubble at all
    //  * months bubble up until they become years
    // This is because there is no context-free conversion between hours and days
    // (think of clock changes)
    // and also not between days and months (28-31 days per month)
    if (!this.isValid()) {
        return this.localeData().invalidDate();
    }

    var seconds = abs$1(this._milliseconds) / 1000;
    var days         = abs$1(this._days);
    var months       = abs$1(this._months);
    var minutes, hours, years;

    // 3600 seconds -> 60 minutes -> 1 hour
    minutes           = absFloor(seconds / 60);
    hours             = absFloor(minutes / 60);
    seconds %= 60;
    minutes %= 60;

    // 12 months -> 1 year
    years  = absFloor(months / 12);
    months %= 12;


    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
    var Y = years;
    var M = months;
    var D = days;
    var h = hours;
    var m = minutes;
    var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
    var total = this.asSeconds();

    if (!total) {
        // this is the same as C#'s (Noda) and python (isodate)...
        // but not other JS (goog.date)
        return 'P0D';
    }

    var totalSign = total < 0 ? '-' : '';
    var ymSign = sign(this._months) !== sign(total) ? '-' : '';
    var daysSign = sign(this._days) !== sign(total) ? '-' : '';
    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

    return totalSign + 'P' +
        (Y ? ymSign + Y + 'Y' : '') +
        (M ? ymSign + M + 'M' : '') +
        (D ? daysSign + D + 'D' : '') +
        ((h || m || s) ? 'T' : '') +
        (h ? hmsSign + h + 'H' : '') +
        (m ? hmsSign + m + 'M' : '') +
        (s ? hmsSign + s + 'S' : '');
}

var proto$2 = Duration.prototype;

proto$2.isValid        = isValid$1;
proto$2.abs            = abs;
proto$2.add            = add$1;
proto$2.subtract       = subtract$1;
proto$2.as             = as;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds      = asSeconds;
proto$2.asMinutes      = asMinutes;
proto$2.asHours        = asHours;
proto$2.asDays         = asDays;
proto$2.asWeeks        = asWeeks;
proto$2.asMonths       = asMonths;
proto$2.asYears        = asYears;
proto$2.valueOf        = valueOf$1;
proto$2._bubble        = bubble;
proto$2.clone          = clone$1;
proto$2.get            = get$2;
proto$2.milliseconds   = milliseconds;
proto$2.seconds        = seconds;
proto$2.minutes        = minutes;
proto$2.hours          = hours;
proto$2.days           = days;
proto$2.weeks          = weeks;
proto$2.months         = months;
proto$2.years          = years;
proto$2.humanize       = humanize;
proto$2.toISOString    = toISOString$1;
proto$2.toString       = toISOString$1;
proto$2.toJSON         = toISOString$1;
proto$2.locale         = locale;
proto$2.localeData     = localeData;

// Deprecations
proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
proto$2.lang = lang;

// Side effect imports

// FORMATTING

addFormatToken('X', 0, 0, 'unix');
addFormatToken('x', 0, 0, 'valueOf');

// PARSING

addRegexToken('x', matchSigned);
addRegexToken('X', matchTimestamp);
addParseToken('X', function (input, array, config) {
    config._d = new Date(parseFloat(input, 10) * 1000);
});
addParseToken('x', function (input, array, config) {
    config._d = new Date(toInt(input));
});

// Side effect imports


hooks.version = '2.20.1';

setHookCallback(createLocal);

hooks.fn                    = proto;
hooks.min                   = min;
hooks.max                   = max;
hooks.now                   = now;
hooks.utc                   = createUTC;
hooks.unix                  = createUnix;
hooks.months                = listMonths;
hooks.isDate                = isDate;
hooks.locale                = getSetGlobalLocale;
hooks.invalid               = createInvalid;
hooks.duration              = createDuration;
hooks.isMoment              = isMoment;
hooks.weekdays              = listWeekdays;
hooks.parseZone             = createInZone;
hooks.localeData            = getLocale;
hooks.isDuration            = isDuration;
hooks.monthsShort           = listMonthsShort;
hooks.weekdaysMin           = listWeekdaysMin;
hooks.defineLocale          = defineLocale;
hooks.updateLocale          = updateLocale;
hooks.locales               = listLocales;
hooks.weekdaysShort         = listWeekdaysShort;
hooks.normalizeUnits        = normalizeUnits;
hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat        = getCalendarFormat;
hooks.prototype             = proto;

// currently HTML5 input type only supports 24-hour formats
hooks.HTML5_FMT = {
    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
    DATE: 'YYYY-MM-DD',                             // <input type="date" />
    TIME: 'HH:mm',                                  // <input type="time" />
    TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
    TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
    WEEK: 'YYYY-[W]WW',                             // <input type="week" />
    MONTH: 'YYYY-MM'                                // <input type="month" />
};

return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(139)(module)))

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function chain(tasks, state) {
    return tasks.reduce(function (prev, next) {
        return prev.then(next);
    }, new Promise(function (resolve, reject) {
        return resolve(state);
    }));
}

function create_container() {
    var container = document.createElement('div');
    document.body.appendChild(container);
    return container;
}

function _f(arr, acc, swap) {
    if (arr.length) {
        var r = [];
        for (var i = 0, len = arr.length; i < len; i++) {
            var a = arr[i];
            if (_f(a, acc, swap)) {
                if (swap) {
                    r.unshift(a);
                } else {
                    r.push(a);
                }
            }
        }
        if (r.length) {
            acc.push(r);
        }
        return false;
    } else {
        return true;
    }
}

function flatten(arr, swap) {
    var acc = [];
    _f(arr, acc, swap);
    return acc;
}

function split_complex_id(complexId) {
    var separatorIndex = complexId.lastIndexOf('!');
    return separatorIndex > 0 ? { id: complexId.substring(0, separatorIndex),
        productId: complexId.substring(separatorIndex + 1, complexId.length)
    } : { id: complexId };
}

function build_complex_id(id, productId) {
    return productId ? id + '!' + productId : id;
}

function hex(number) {
    var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;

    var h = number.toString(16);
    while (h.length < width) {
        h = '0' + h;
    }
    return h.toUpperCase();
}

function unhex(str) {
    return parseInt(str.substr(1), 16);
}

function is_geometry(obj) {
    var type = obj.type;

    switch (type) {
        case 'Point':
        case 'MultiPoint':
        case 'LineString':
        case 'MultiLineString':
        case 'Polygon':
        case 'MultiPolygon':
        case 'GeometryCollection':
            return true;
        default:
            return false;
    }
}

function normalize_geometry_type(geometry) {
    var type = geometry.type;

    switch (type.toUpperCase()) {
        case 'POINT':
            geometry.type = 'Point';
            break;
        case 'MULTIPOINT':
            geometry.type = 'MultiPoint';
            break;
        case 'LINESTRING':
            geometry.type = 'LineString';
            break;
        case 'MULTILINESTRING':
            geometry.type = 'MultiLineString';
            break;
        case 'POLYGON':
            geometry.type = 'Polygon';
            break;
        case 'MULTIPOLYGON':
            geometry.type = 'MultiPolygon';
            break;
        case 'GEOMETRYCOLLECTION':
            geometry.type = 'GeometryCollection';
            break;
        default:
            break;
    }
    return geometry;
}

function is_geojson_feature(obj) {
    var type = obj.type,
        geometry = obj.geometry,
        properties = obj.properties;

    if (type !== 'Feature') {
        console.log('geojson feature test failed: provided type is not a "Feature" object', obj);
        return false;
    }
    if (!is_geometry(geometry)) {
        console.log('geojson feature test failed: geometry is of wrong type', geometry);
        return false;
    }
    return true;
}

function get_type_of_value(value) {
    switch (typeof value === 'undefined' ? 'undefined' : _typeof(value)) {
        case 'number':
            return Number.isInteger(value) ? 'Integer' : 'Float';
        case 'boolean':
            return 'Boolean';
        case 'string':
        default:
            return 'String';
    }
}

function convert_date(item, fields) {
    for (var k in fields) {
        var field = fields[k];
        if (field.type === 'date') {
            item[k] = new Date(item[k]);
        }
    }
    return item;
}

function from_gmx(_ref) {
    var fields = _ref.fields,
        values = _ref.values,
        types = _ref.types;
    var convertMercator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

    return values.map(function (x) {
        var item = fields.reduce(function (a, k, i) {
            switch (types[i]) {
                default:
                    a[k] = x[i];
                    break;
                case 'date':
                    switch (_typeof(x[i])) {
                        case 'string':
                            a[k] = new Date(x[i]);
                            break;
                        case 'number':
                            a[k] = new Date(x[i] * 1000);
                            break;
                        default:
                            break;
                    }
                    break;
                case 'time':
                    break;
                case 'geometry':
                    a[k] = L.gmxUtil.geometryToGeoJSON(x[i], convertMercator);
                    break;
            }
            switch (k) {
                case 'stereo':
                    var s = x[i];
                    a.stereo = typeof s === 'string' && s !== 'NONE';
                    break;
                default:
                    break;
            }
            return a;
        }, {});
        if (item.geomixergeojson) {
            item.geoJSON = item.geomixergeojson;
            delete item.geomixergeojson;
        }
        item.url = 'http://search.kosmosnimki.ru/QuickLookImage.ashx?id=' + item.sceneid;
        return item;
    });
}

function normalize_geometries(lng, objects) {
    for (var i = 0, len = objects.length; i < len; i++) {
        normalize_geometry(lng, objects[i].geometry);
        fix_anchors(lng, objects[i]);
    }
}

function normalize_ring(lng, coordinates) {
    for (var i = 0; i < coordinates.length; ++i) {
        var d = get_correction(lng, coordinates[i][0]);
        if (d) {
            coordinates[i][0] += d;
        }
    }
}

function normalize_polygon(lng, coordinates) {
    for (var i = 0; i < coordinates.length; ++i) {
        normalize_ring(lng, coordinates[i]);
    }
}

function normalize_geometry(lng, geometry) {
    switch (geometry.type) {
        case 'Polygon':
            normalize_polygon(lng, geometry.coordinates);
            break;
        case 'MultiPolygon':
            for (var i = 0; i < geometry.coordinates.length; ++i) {
                normalize_polygon(lng, geometry.coordinates[i]);
            }
            break;
        default:
            break;
    }
}

function fix_anchors(lng, object) {
    for (var i = 0; i <= 4; ++i) {
        var d = get_correction(lng, object['x' + i]);
        if (d) {
            object['x' + i] += d;
        }
    }
}

function get_correction(lon, x) {
    var d1 = Math.abs(lon - x),
        d2 = Math.abs(lon - (x + 360));
    if (d1 <= d2) {
        return 0;
    } else {
        return 360;
    }
}

function get_bbox(geometry) {
    var type = geometry.type,
        coordinates = geometry.coordinates;

    var lon = 0,
        lat = 0;
    var sorter = function sorter(a, b) {
        if (a > b) {
            return 1;
        }
        if (a < b) {
            return -1;
        }
        return 0;
    };
    var rings = function rings(coords) {
        var _coords$reduce = coords.reduce(function (a, _ref2) {
            var _ref3 = _slicedToArray(_ref2, 2),
                x = _ref3[0],
                y = _ref3[1];

            a.xs.push(x);
            a.ys.push(y);
            return a;
        }, { xs: [], ys: [] }),
            xs = _coords$reduce.xs,
            ys = _coords$reduce.ys;

        xs = xs.sort(sorter);
        ys = ys.sort(sorter);
        var xmin = xs[0];
        var xmax = xs[xs.length - 1];
        var ymin = ys[0];
        var ymax = ys[ys.length - 1];
        return [[xmin, ymax], [xmax, ymax], [xmax, ymin], [xmin, ymin]];
    };
    switch (type.toUpperCase()) {
        case 'POINT':
            var _coordinates = _slicedToArray(coordinates, 2);

            lon = _coordinates[0];
            lat = _coordinates[1];

            return [[lon, lat], [lon, lat], [lon, lat], [lon, lat]];
        case 'MULTIPOINT':
        case 'LINESTRING':
            return rings(coordinates);
        case 'POLYGON':
            return rings(coordinates[0]);
        case 'MULTILINESTRING':
        case 'MULTIPOLYGON':
            var _coordinates$reduce = coordinates.reduce(function (a, coords) {
                var _rings = rings(coords[0]),
                    _rings2 = _slicedToArray(_rings, 4),
                    _rings2$ = _slicedToArray(_rings2[0], 2),
                    x1 = _rings2$[0],
                    y1 = _rings2$[1],
                    _rings2$2 = _slicedToArray(_rings2[1], 2),
                    x2 = _rings2$2[0],
                    y2 = _rings2$2[1],
                    _rings2$3 = _slicedToArray(_rings2[2], 2),
                    x3 = _rings2$3[0],
                    y3 = _rings2$3[1],
                    _rings2$4 = _slicedToArray(_rings2[3], 2),
                    x4 = _rings2$4[0],
                    y4 = _rings2$4[1];

                a.xs.push(x1);
                a.xs.push(x2);
                a.xs.push(x3);
                a.xs.push(x4);
                a.ys.push(y1);
                a.ys.push(y2);
                a.ys.push(y3);
                a.ys.push(y4);
                return a;
            }, { xs: [], ys: [] }),
                xs = _coordinates$reduce.xs,
                ys = _coordinates$reduce.ys;

            xs = xs.sort(sorter);
            ys = ys.sort(sorter);
            var xmin = xs[0];
            var xmax = xs[xs.length - 1];
            var ymin = ys[0];
            var ymax = ys[ys.length - 1];
            return [[xmin, ymax], [xmax, ymax], [xmax, ymin], [xmin, ymin]];
        default:
            break;
    }
}

exports.chain = chain;
exports.create_container = create_container;
exports.flatten = flatten;
exports.split_complex_id = split_complex_id;
exports.unhex = unhex;
exports.hex = hex;
exports.is_geojson_feature = is_geojson_feature;
exports.is_geometry = is_geometry;
exports.get_type_of_value = get_type_of_value;
exports.from_gmx = from_gmx;
exports.normalize_geometries = normalize_geometries;
exports.normalize_geometry = normalize_geometry;
exports.get_bbox = get_bbox;
exports.normalize_geometry_type = normalize_geometry_type;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DEFAULT_LANGUAGE = exports.Translations = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Extensions = __webpack_require__(182);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DEFAULT_LANGUAGE = 'rus';

var Translations = function () {
    function Translations() {
        _classCallCheck(this, Translations);

        this._hash = {};
    }

    _createClass(Translations, [{
        key: 'setLanguage',
        value: function setLanguage(lang) {
            this._language = lang;
        }
    }, {
        key: 'getLanguage',
        value: function getLanguage() {
            return window.language || this._language || DEFAULT_LANGUAGE;
        }
    }, {
        key: 'addText',
        value: function addText(lang, tran) {
            this._hash[lang] = (0, _Extensions.extend)(this._hash[lang] || {}, tran);
            return this;
        }
    }, {
        key: 'getText',
        value: function getText(key) {
            if (key && typeof key === 'string') {
                var locale = this._hash[this.getLanguage()];
                if (locale) {
                    return eval('locale.' + key);
                }
            }
            return null;
        }
    }]);

    return Translations;
}();

exports.Translations = Translations;
exports.DEFAULT_LANGUAGE = DEFAULT_LANGUAGE;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventTarget = function () {
    function EventTarget() {
        _classCallCheck(this, EventTarget);

        this.listeners = {};
    }

    _createClass(EventTarget, [{
        key: "addEventListener",
        value: function addEventListener(type, callback) {
            if (!(type in this.listeners)) {
                this.listeners[type] = [];
            }
            this.listeners[type].push(callback);
        }
    }, {
        key: "removeEventListener",
        value: function removeEventListener(type, callback) {
            if (!(type in this.listeners)) {
                return;
            }
            var stack = this.listeners[type];
            for (var i = 0, l = stack.length; i < l; i++) {
                if (stack[i] === callback) {
                    stack.splice(i, 1);
                    return this.removeEventListener(type, callback);
                }
            }
        }
    }, {
        key: "dispatchEvent",
        value: function dispatchEvent(event) {
            if (!(event.type in this.listeners)) {
                return;
            }
            var stack = this.listeners[event.type];
            // event.target = this;
            for (var i = 0, l = stack.length; i < l; i++) {
                stack[i].call(this, event);
            }
        }
    }]);

    return EventTarget;
}();

exports.EventTarget = EventTarget;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ENUM_ID = exports.DataGrid = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(205);

var _Tristate = __webpack_require__(176);

var _EventTarget2 = __webpack_require__(175);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ENUM_ID = typeof Symbol === 'function' ? Symbol('enumeration id') : 1e+6;

var create_index = function create_index(items, indexBy) {
    return items.reduce(function (a, item, i) {
        var idx = null;
        if (item.hasOwnProperty(indexBy)) {
            idx = item[indexBy];
        } else {
            idx = i;
            item[indexBy] = idx;
        }
        a[idx] = item;
        return a;
    }, {});
};

var serialize = function serialize(obj) {
    return Object.keys(obj).map(function (k) {
        return obj[k];
    });
};

var sort = function sort(items, field, asc) {
    if (field) {
        return items.map(function (e, i) {
            return { i: i, v: e };
        }).sort(function (a, b) {
            var left = a.v[field],
                right = b.v[field];

            if (left == null && right != null) {
                return asc ? -1 : 1;
            }

            if (left != null && right == null) {
                return asc ? 1 : -1;
            }

            if (typeof left == 'string') {
                left = left.toLowerCase();
            }

            if (typeof right == 'string') {
                right = right.toLowerCase();
            }

            if (left < right) {
                return asc ? -1 : 1;
            } else if (left > right) {
                return asc ? 1 : -1;
            } else if (left == right) {
                var i = a.index,
                    k = b.index;
                if (i < k) {
                    return asc ? -1 : 1;
                } else if (i > k) {
                    return asc ? 1 : -1;
                } else {
                    return 0;
                }
            }
        }).map(function (e) {
            return e.v;
        });
    } else {
        return items;
    }
};

var DataGrid = function (_EventTarget) {
    _inherits(DataGrid, _EventTarget);

    function DataGrid(container, _ref) {
        var _ref$hasHeader = _ref.hasHeader,
            hasHeader = _ref$hasHeader === undefined ? true : _ref$hasHeader,
            _ref$align = _ref.align,
            align = _ref$align === undefined ? true : _ref$align,
            _ref$fields = _ref.fields,
            fields = _ref$fields === undefined ? {} : _ref$fields,
            _ref$sortBy = _ref.sortBy,
            sortBy = _ref$sortBy === undefined ? {} : _ref$sortBy,
            _ref$filter = _ref.filter,
            filter = _ref$filter === undefined ? null : _ref$filter,
            _ref$adjustMode = _ref.adjustMode,
            adjustMode = _ref$adjustMode === undefined ? 'auto' : _ref$adjustMode,
            _ref$indexBy = _ref.indexBy,
            indexBy = _ref$indexBy === undefined ? ENUM_ID : _ref$indexBy;

        _classCallCheck(this, DataGrid);

        var _this = _possibleConstructorReturn(this, (DataGrid.__proto__ || Object.getPrototypeOf(DataGrid)).call(this));

        _this._container = container;
        _this._container.classList.add('table-list');
        _this._fields = fields;
        _this._stats = {};
        _this._align = align;
        _this._sortBy = sortBy;
        _this._filter = filter;
        _this._filtered = false;
        _this._adjustMode = adjustMode;
        _this._indexBy = indexBy;
        _this._index = {};

        _this._header = document.createElement('div');
        _this._header.className = 'table-list-header';
        _this._container.appendChild(_this._header);

        _this._body = document.createElement('div');
        _this._body.className = 'table-list-body';
        _this._container.appendChild(_this._body);
        _this._stopPropagation = _this._stopPropagation.bind(_this);
        return _this;
    }

    _createClass(DataGrid, [{
        key: '_stopPropagation',
        value: function _stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: 'getItemByIndex',
        value: function getItemByIndex(id) {
            return this._index[id];
        }
    }, {
        key: 'refresh',
        value: function refresh() {
            var _this2 = this;

            if (this._sortBy.hasOwnProperty('field') && this._sortBy.hasOwnProperty('asc')) {
                var i = -1;
                var keys = Object.keys(this._fields);
                for (var k = 0; k < keys.length; ++k) {
                    if (this._sortBy.field === keys[k]) {
                        i = k;
                        break;
                    }
                }
                if (i >= 0) {
                    this._renderHeader();
                    this._reorder(i, this._sortBy.field, this._sortBy.asc);
                    this._attachColumnsEvents();
                }
            } else {
                this._render(this.items);
            }
            Object.keys(this._fields).filter(function (k) {
                return _typeof(_this2._fields[k].tristate) === 'object';
            }).map(function (k) {
                return _this2._fields[k].tristate;
            }).forEach(function (t) {
                return t.update();
            });
        }
    }, {
        key: '_getCellAlign',
        value: function _getCellAlign(type) {
            switch (type) {
                case 'integer':
                case 'float':
                    return 'right';
                case 'selector':
                case 'button':
                case 'boolean':
                case 'color':
                    return 'center';
                default:
                    return 'left';
            }
        }
    }, {
        key: '_renderCell',
        value: function _renderCell(item, col) {
            var field = this._fields[col];
            var width = field.width;
            var align = this._align ? ' style="text-align: ' + (field.align || this._getCellAlign(field.type)) + '"' : '';
            switch (field.type) {
                case 'selector':
                    return Boolean(item[col]) ? '<td' + align + '><input type="checkbox" checked value="' + col + '" /></td>' : '<td' + align + '><input type="checkbox" value="' + col + '" /></td>';
                case 'button':
                    return '<td' + align + '><i class="table-list-button ' + field.button + '" /></td>';
                case 'boolean':
                    var val = typeof field.formatter === 'function' ? field.formatter(item) : item[col];
                    var cell = field.yes || field.no ? '<i class="table-list-button ' + field.icon + ' ' + (val ? field.yes || '' : field.no || '') + '"></i>' : '' + (val ? '+' : '');
                    return '<td' + align + '>' + cell + '</td>';
                case 'color':
                    return '<td' + align + '>\n                        <div class="table-list-color" style="' + (typeof item[col] !== 'undefined' ? 'border-color: ' + item[col] : 'border: none') + ' ">&nbsp;</div>\n                    </td>';
                default:
                    if (typeof field.styler === 'function') {
                        return '<td' + align + '><i class="' + field.styler(item) + '"></i></td>';
                    } else {
                        var _val = typeof field.formatter === 'function' ? field.formatter(item) : item[col];
                        return '<td' + align + '><span>' + _val + '</span>' + (field.edit ? '<i class="cell-edit"></i>' : '') + '</td>';
                    }

            }
        }
    }, {
        key: '_attachEvents',
        value: function _attachEvents() {
            var rows = this._body.querySelectorAll('tr');
            for (var i = 0; i < rows.length; ++i) {
                var row = rows[i];
                var item = this._index[row.getAttribute('data-item-id')];
                this._attachRowEvents(row, item);
            }
        }
    }, {
        key: '_attachRowEvents',
        value: function _attachRowEvents(row, item) {
            row.addEventListener('mouseover', this._handleRowMouseOver.bind(this, row, item));
            row.addEventListener('mouseout', this._handleRowMouseOut.bind(this, row, item));
            var cells = row.querySelectorAll('td');
            var fields = Object.keys(this._fields);
            for (var j = 0; j < cells.length; ++j) {
                var name = fields[j];
                var field = this._fields[name];
                var cell = cells[j];
                if (typeof field.edit === 'string') {
                    var val = cell.querySelector('span');
                    val.addEventListener('click', this._handleCellClick.bind(this, row, val, name, field, item));
                    var btn = cell.querySelector('i');
                    btn.addEventListener('click', this._handleCellEdit.bind(this, row, cell, val, btn, name, field, item));
                } else {
                    cell.addEventListener('click', this._handleCellClick.bind(this, row, cell, name, field, item));
                }
            }
        }
    }, {
        key: '_renderRow',
        value: function _renderRow(item) {
            if (typeof this._filter !== 'function' || !this._filtered || this._filter(item)) {
                return '<tr data-item-id="' + item[this._indexBy] + '">' + Object.keys(this._fields).map(this._renderCell.bind(this, item)).join('') + '</tr>';
            }
        }
    }, {
        key: '_render',
        value: function _render(items) {
            this._renderHeader();
            this._renderBody(items);
            this.adjustHeader();
            this._updateSelector();
            this._attachColumnsEvents();
        }
    }, {
        key: '_renderBody',
        value: function _renderBody(items) {
            this._clearEvents();
            if (items.length > 0) {
                this._body.innerHTML = '<table>\n                    <colgroup>' + Object.keys(this._fields).map(function (x) {
                    return '<col />';
                }).join('') + '</colgroup>\n                    ' + items.map(this._renderRow.bind(this)).join('') + '\n                </table>';
                this._attachEvents();
            } else {
                this._body.innerHTML = '';
            }
        }
    }, {
        key: '_renderHeaderColumn',
        value: function _renderHeaderColumn(col) {
            var field = this._fields[col];
            var el = '';
            switch (field.type) {
                case 'selector':
                    el = '<input class="table-list-tristate" type="checkbox" />';
                    break;
                case 'boolean':
                case 'string':
                    if (typeof field.name === 'string') {
                        el = '<span>' + field.name + '</span>';
                    } else if (typeof field.columnIcon === 'string') {
                        el = '<i class="' + field.columnIcon + '"></i>';
                    }
                    break;
                case 'button':
                    if (typeof field.columnIcon === 'string') {
                        el = '<i class="' + field.columnIcon + '"></i>';
                    } else if (typeof field.name === 'string') {
                        el = '<span>' + field.name + '</span>';
                    }
                    break;
                default:
                    if (typeof field.name === 'string') {
                        el = '<span>' + field.name + '</span>';
                    }
                    break;
            }
            return '<td' + (field.tooltip ? ' title="' + field.tooltip + '"' : '') + ' class="table-list-col" data-field="' + col + '">\n            ' + el + '\n            <i class="table-list-sort"' + (field.sortable ? '' : ' style="display: none"') + '></i>\n        </td>';
        }
    }, {
        key: '_attachColumnsEvents',
        value: function _attachColumnsEvents() {
            var _this3 = this;

            if (this.hasItems) {
                var cols = this._header.querySelectorAll('td');
                var names = Object.keys(this._fields);

                var _loop = function _loop(i) {
                    var name = names[i];
                    var field = _this3._fields[name];
                    var col = cols[i];
                    if (field.sortable) {
                        col.addEventListener('click', _this3._handleSort.bind(_this3, i));
                    }
                    if (field.type === 'selector') {
                        var ts = col.querySelector('.table-list-tristate');
                        ts.addEventListener('click', _this3._stopPropagation);
                        var items = _this3._body.querySelectorAll('td:nth-child(' + (i + 1) + ') input[type="checkbox"]');
                        field.tristate = new _Tristate.Tristate(ts, items);
                    }
                    col.addEventListener('click', function (e) {
                        var event = document.createEvent('Event');
                        event.initEvent('column:click', false, false);
                        event.detail = { col: col, field: field, name: name };
                        _this3.dispatchEvent(event);
                    });
                };

                for (var i = 0; i < cols.length; ++i) {
                    _loop(i);
                }
            }
        }
    }, {
        key: '_updateColumns',
        value: function _updateColumns(k, asc) {
            var buttons = this._header.querySelectorAll('.table-list-sort');
            for (var i = 0; i < buttons.length; ++i) {
                var btn = buttons[i];
                if (i === k) {
                    if (asc) {
                        btn.classList.remove('table-list-sort-down');
                        btn.classList.add('table-list-sort-up');
                    } else {
                        btn.classList.remove('table-list-sort-up');
                        btn.classList.add('table-list-sort-down');
                    }
                } else {
                    btn.classList.remove('table-list-sort-up');
                    btn.classList.remove('table-list-sort-down');
                }
            }
        }
    }, {
        key: '_updateSelector',
        value: function _updateSelector() {
            var cols = this._header.querySelectorAll('td');
            var fields = serialize(this._fields);
            for (var i = 0; i < cols.length; ++i) {
                var _field = fields[i];
                if (_field.tristate) {
                    var items = this._body.querySelectorAll('td:nth-child(' + (i + 1) + ') input[type="checkbox"]');
                    _field.tristate.state = items;
                    break;
                }
            }
        }
    }, {
        key: '_reorder',
        value: function _reorder(i, name, asc) {
            this._updateColumns(i, asc);
            this._renderBody(sort(this.items, name, asc));
            this.adjustHeader();
            this._updateSelector();
        }
    }, {
        key: '_handleSort',
        value: function _handleSort(k) {
            this._sortBy.asc = !this._sortBy.asc;
            this._sortBy.field = Object.keys(this._fields)[k];
            this._reorder(k, this._sortBy.field, this._sortBy.asc);

            var event = document.createEvent('Event');
            event.initEvent('sort', false, false);
            event.detail = { field: this._fields[this._sortBy.field], name: this._sortBy.field, asc: this._sortBy.asc };
            this.dispatchEvent(event);
        }
    }, {
        key: '_renderHeader',
        value: function _renderHeader() {
            this._header.innerHTML = '<table>\n            <colgroup>' + Object.keys(this._fields).map(function (x) {
                return '<col />';
            }).join('') + '</colgroup>\n            <tr>' + Object.keys(this._fields).map(this._renderHeaderColumn.bind(this)).join('') + '</tr>\n        </table>';
        }
    }, {
        key: 'adjustHeader',
        value: function adjustHeader() {
            if (this.hasItems) {
                var fields = serialize(this._fields);
                var widths = [];
                var hc = this._header.querySelector('colgroup').children;
                var bc = this._body.querySelector('colgroup').children;
                if (this._adjustMode === 'auto') {
                    var row = this._body.querySelector('tr');
                    if (row && row.children) {
                        var cells = row.children;
                        var cols = this._header.querySelectorAll('td');
                        var total = 0;
                        for (var i = 0; i < cells.length; ++i) {
                            var c = cells[i].getBoundingClientRect();
                            var h = cols[i].getBoundingClientRect();
                            widths.push(Math.max(c.width, h.width));
                            total += widths[i];
                        }
                        for (var _i = 0; _i < hc.length; ++_i) {
                            var w = widths[_i] + 'px';
                            hc[_i].style.width = w;
                            bc[_i].style.width = w;
                        }
                    }
                } else {
                    for (var _i2 = 0; _i2 < hc.length; ++_i2) {
                        var _w = fields[_i2].width + 'px';
                        hc[_i2].style.width = _w;
                        bc[_i2].style.width = _w;
                    }
                }
            }
        }
    }, {
        key: '_clearEvents',
        value: function _clearEvents() {
            var rows = this._container.querySelectorAll('tr');
            for (var i = 0; i < rows.length; ++i) {
                var row = rows[i];
                row.removeEventListener('mouseover', this._handleRowMouseOver);
                row.removeEventListener('mouseout', this._handleRowMouseOut);
                this._clearRowEvents(row);
            }
        }
    }, {
        key: '_clearRowEvents',
        value: function _clearRowEvents(row) {
            var cells = row.querySelectorAll('td');
            for (var i = 0; i < cells.length; ++i) {
                cells[i].removeEventListener('click', this._handleCellClick);
            }
        }
    }, {
        key: '_handleCellClick',
        value: function _handleCellClick(row, cell, name, field, item, e) {

            var event = document.createEvent('Event');
            event.initEvent('cell:click', false, false);
            event.detail = { row: row, cell: cell, name: name, field: field, item: item };
            this.dispatchEvent(event);

            e.stopPropagation();
        }
    }, {
        key: '_handleRowMouseOver',
        value: function _handleRowMouseOver(row, item, e) {
            var _this4 = this;

            var cells = row.querySelectorAll('td');
            Object.keys(this._fields).map(function (k) {
                return _this4._fields[k];
            }).forEach(function (x, j) {
                if (typeof x.edit === 'string') {
                    var cell = cells[j];
                    if (!cell.querySelector('input')) {
                        cell.querySelector('i').classList.add(x.edit);
                    }
                }
            });
            var event = document.createEvent('Event');
            event.initEvent('row:mouseover', false, false);
            event.detail = { row: row, item: item };
            this.dispatchEvent(event);

            e.stopPropagation();
        }
    }, {
        key: '_handleRowMouseOut',
        value: function _handleRowMouseOut(row, item, e) {
            var _this5 = this;

            var cells = row.querySelectorAll('td');
            Object.keys(this._fields).map(function (k) {
                return _this5._fields[k];
            }).forEach(function (x, j) {
                if (typeof x.edit === 'string') {
                    cells[j].querySelector('i').classList.remove(x.edit);
                }
            });

            var event = document.createEvent('Event');
            event.initEvent('row:mouseout', false, false);
            event.detail = { row: row, item: item };
            this.dispatchEvent(event);

            e.stopPropagation();
        }
    }, {
        key: '_handleCellEdit',
        value: function _handleCellEdit(row, cell, val, btn, name, field, item) {
            var _this6 = this;

            var input = document.createElement('input');
            input.className = 'cell-edit-input';
            input.type = 'text';
            input.value = cell.innerText;
            input.style.width = '100%';
            val.style.display = 'none';
            btn.classList.remove(field.edit);
            var detach = function detach() {
                document.body.removeEventListener('click', change);
                input.removeEventListener('keydown', handler);
                // input.removeEventListener('blur', change);
                input.removeEventListener('focus', _this6._stopPropagation);
                input.removeEventListener('click', _this6._stopPropagation);
                cell.removeChild(input);

                _this6.adjustHeader();

                var event = document.createEvent('Event');
                event.initEvent('cell:edit', false, false);
                event.detail = { row: row, cell: cell, name: name, field: field, item: item };
                _this6.dispatchEvent(event);
            };
            var change = function change() {
                val.innerText = input.value;
                item[name] = val.innerText;
                val.style.display = 'inline-block';
                detach();
            };
            var revert = function revert() {
                val.innerText = item[name];
                val.style.display = 'inline-block';
                detach();
            };
            var handler = function handler(e) {
                switch (e.keyCode) {
                    case 13:
                        change();
                        break;
                    case 27:
                        revert();
                        break;
                    default:
                        break;
                }
            };
            document.body.addEventListener('click', change);
            input.addEventListener('focus', this._stopPropagation);
            input.addEventListener('keydown', handler);
            input.addEventListener('click', this._stopPropagation);
            cell.insertBefore(input, val);
            input.focus();
            input.select();
            // input.addEventListener('blur', change);
        }
    }, {
        key: 'getRow',
        value: function getRow(id) {
            return this._body.querySelector('[data-item-id="' + id + '"]');
        }
    }, {
        key: 'getCol',
        value: function getCol(name) {
            return this._header.querySelector('[data-field="' + name + '"]');
        }
    }, {
        key: 'scrollToRow',
        value: function scrollToRow(id) {
            var rows = this._body.querySelectorAll('[data-item-id]');
            for (var i = 0; i < rows.length; ++i) {
                var row = rows[i];
                if (row.getAttribute('data-item-id') === id.toString()) {
                    var _row$getBoundingClien = row.getBoundingClientRect(),
                        height = _row$getBoundingClien.height;

                    this._body.scrollTop = i * height;
                    break;
                }
            }
        }
    }, {
        key: 'redrawRow',
        value: function redrawRow(id, item) {
            var row = this.getRow(id);
            this._index[id] = item;
            if (row) {
                this._clearRowEvents(row);
                row.insertAdjacentHTML('afterend', this._renderRow(item));
                row.parentElement.removeChild(row);
                this._attachRowEvents(this.getRow(id), item);
                this._updateSelector();
            }
        }
    }, {
        key: 'items',
        set: function set(value) {
            if (Array.isArray(value) && value.length > 0) {
                this._index = create_index(value, this._indexBy);
                if (this._sortBy.hasOwnProperty('field') && this._sortBy.hasOwnProperty('asc')) {
                    var i = -1;
                    var keys = Object.keys(this._fields);
                    for (var k = 0; k < keys.length; ++k) {
                        if (this._sortBy.field === keys[k]) {
                            i = k;
                            break;
                        }
                    }
                    if (i >= 0) {
                        this._renderHeader();
                        this._reorder(i, this._sortBy.field, this._sortBy.asc);
                        this._attachColumnsEvents();
                    }
                } else {
                    this._render(this.items);
                }
            } else {
                this._index = {};
                this._render(this.items);
            }
        },
        get: function get() {
            return sort(serialize(this._index), this._sortBy.field, this._sortBy.asc);
        }
    }, {
        key: 'hasItems',
        get: function get() {
            return Object.keys(this._index).length > 0;
        }
    }, {
        key: 'filtered',
        get: function get() {
            return this._filtered;
        },
        set: function set(value) {
            this._filtered = value;
            this.refresh();
        }
    }, {
        key: 'filteredItems',
        get: function get() {
            var _this7 = this;

            if (typeof this._filter === 'function' && this.filtered) {
                return this.items.filter(function (item) {
                    return _this7._filter(item);
                });
            } else {
                return this.items;
            }
        }
    }, {
        key: 'filter',
        set: function set(value) {
            this._filter = value;
        }
    }, {
        key: 'count',
        get: function get() {
            var rows = this._body.querySelectorAll('[data-item-id]');
            if (rows && rows.length) {
                return rows.length;
            } else {
                return 0;
            };
        }
    }]);

    return DataGrid;
}(_EventTarget2.EventTarget);

exports.DataGrid = DataGrid;
exports.ENUM_ID = ENUM_ID;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Panel = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(207);

var _Translations = __webpack_require__(2);

var _EventTarget2 = __webpack_require__(178);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

T.addText('rus', {
    minimize: 'Свернуть',
    maximize: 'Показать',
    close: 'Закрыть'
});
T.addText('eng', {
    minimize: 'Minimize',
    maximize: 'Maximize',
    close: 'Close'
});

var Panel = function (_EventTarget) {
    _inherits(Panel, _EventTarget);

    function Panel(container, _ref) {
        var _ref$title = _ref.title,
            title = _ref$title === undefined ? '' : _ref$title,
            _ref$id = _ref.id,
            id = _ref$id === undefined ? '' : _ref$id,
            _ref$closable = _ref.closable,
            closable = _ref$closable === undefined ? true : _ref$closable,
            _ref$left = _ref.left,
            left = _ref$left === undefined ? 100 : _ref$left,
            _ref$top = _ref.top,
            top = _ref$top === undefined ? 100 : _ref$top,
            _ref$modal = _ref.modal,
            modal = _ref$modal === undefined ? false : _ref$modal,
            _ref$header = _ref.header,
            header = _ref$header === undefined ? true : _ref$header;

        _classCallCheck(this, Panel);

        var _this = _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).call(this));

        _this._id = id;
        _this._container = container;
        _this._modal = modal;
        _this._container.classList.add('noselect');
        _this._container.classList.add('panel-container');
        var useClose = closable ? '<td class="panel-close-button" title="' + T.getText('close') + '">\n                <i class="panel-icon-close" />\n            </td>' : '';
        _this._container.innerHTML = '<div class="panel-body">\n                ' + (header ? '<table class="panel-header">\n                        <tr>\n                            <td class="panel-header-title">' + title + '</td>\n                            <td class="panel-toggle-button" title="' + T.getText('minimize') + '">\n                                <i class="panel-icon-minimize" />\n                            </td>\n                            ' + useClose + '\n                        </tr>\n                    </table>' : '') + '\n                <div class="panel-content"></div>\n                <div class="panel-footer"></div>\n            </div>';
        _this._body = _this._container.querySelector('.panel-body');
        _this._content = _this._container.querySelector('.panel-content');
        _this._footer = _this._container.querySelector('.panel-footer');
        _this.show = _this.show.bind(_this);
        _this.hide = _this.hide.bind(_this);

        if (header) {
            _this._header = _this._container.querySelector('.panel-header');
            _this._title = _this._container.querySelector('.panel-header-title');
            _this.toggle = _this.toggle.bind(_this);
            _this._toggleButton = _this._container.querySelector('.panel-toggle-button');
            _this._toggleButton.addEventListener('click', _this.toggle);
        }

        if (header && closable) {
            _this._closeButton = _this._container.querySelector('.panel-close-button');
            _this._closeButton.addEventListener('click', _this.hide);
        }
        _this._savePosition = _this._savePosition.bind(_this);

        _this._stopPropagation = _this._stopPropagation.bind(_this);
        _this._startMove = _this._startMove.bind(_this);
        _this._stopMove = _this._stopMove.bind(_this);
        _this._handleMove = _this._handleMove.bind(_this);
        _this._container.addEventListener('dragstart', _this.preventDefault);
        if (header) {
            _this._header.addEventListener('mousedown', _this._startMove);
            _this._header.addEventListener('mousemove', _this._handleMove);
        }
        document.body.addEventListener('mouseup', _this._stopMove);
        _this._container.addEventListener('mousewheel', _this._stopPropagation);
        _this._restorePosition(top, left);
        if (_this._modal) {
            _this._ovl = document.querySelector('.panel-modal-overlay');
            if (!_this._ovl) {
                _this._ovl = document.createElement('div');
                document.body.appendChild(_this._ovl);
                _this._ovl.className = 'panel-modal-overlay';
                _this._ovl.style.display = 'none';
                _this._ovl.addEventListener('mousemove', _this._stopPropagation);
                _this._ovl.addEventListener('mousewheel', _this._stopPropagation);
                _this._ovl.addEventListener('click', _this._stopPropagation);
            }
            _this._container.classList.add('panel-modal');
        } else {
            _this._container.classList.add('panel-non-modal');
        }
        return _this;
    }

    _createClass(Panel, [{
        key: '_startMove',
        value: function _startMove(e) {
            var _container$getBoundin = this._container.getBoundingClientRect(),
                left = _container$getBoundin.left,
                top = _container$getBoundin.top;

            this._offset = { x: e.clientX - left, y: e.clientY - top };
        }
    }, {
        key: '_stopMove',
        value: function _stopMove(e) {
            this._offset = null;
        }
    }, {
        key: '_handleMove',
        value: function _handleMove(e) {
            if (this._offset) {
                this._container.style.left = e.clientX - this._offset.x + 'px';
                this._container.style.top = e.clientY - this._offset.y + 'px';
            }
        }
    }, {
        key: '_stopPropagation',
        value: function _stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: 'show',
        value: function show() {
            if (this._modal) {
                this._ovl.style.display = 'block';
            }
            this._body.style.visibility = 'visible';
            var event = document.createEvent('Event');
            event.initEvent('show', false, false);
            this.dispatchEvent(event);
        }
    }, {
        key: 'hide',
        value: function hide() {
            if (this._modal) {
                this._ovl.style.display = 'none';
            }
            this._body.style.visibility = 'hidden';
            var event = document.createEvent('Event');
            event.initEvent('hide', false, false);
            this.dispatchEvent(event);
        }
    }, {
        key: 'toggle',
        value: function toggle() {
            var btn = this._toggleButton.querySelector('i');
            if (this._content.style.display == 'none') {
                btn.classList.remove('fa-plus-circle');
                btn.classList.add('fa-minus-circle');
                this._content.style.display = 'block';
            } else {
                btn.classList.remove('fa-minus-circle');
                btn.classList.add('fa-plus-circle');
                this._content.style.display = 'none';
            }
        }
    }, {
        key: 'getTitle',
        value: function getTitle() {
            return this._title.innerText;
        }
    }, {
        key: 'setTitle',
        value: function setTitle(text) {
            return this._title.innerText = text;
        }
    }, {
        key: '_restorePosition',
        value: function _restorePosition(top, left) {
            if (typeof this._id === 'string' && this._id != '') {
                var x = localStorage.getItem(this._id + '.left') || left;
                var y = localStorage.getItem(this._id + '.top') || top;
                this._container.style.left = x + 'px';
                this._container.style.top = y + 'px';
            }
        }
    }, {
        key: '_savePosition',
        value: function _savePosition() {
            if (typeof this._id === 'string' && this._id != '') {
                var p = this._container.getBoundingClientRect();
                localStorage.setItem(this._id + '.top', p.top);
                localStorage.setItem(this._id + '.left', p.left);
            }
        }
    }, {
        key: 'header',
        get: function get() {
            return this._header;
        }
    }, {
        key: 'body',
        get: function get() {
            return this._body;
        }
    }, {
        key: 'footer',
        get: function get() {
            return this._footer;
        }
    }, {
        key: 'content',
        get: function get() {
            return this._content;
        }
    }]);

    return Panel;
}(_EventTarget2.EventTarget);

exports.Panel = Panel;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getSatelliteName = exports.satellites = undefined;

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Translations = __webpack_require__(2);

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

window.Catalog = window.Catalog || {};
var T = window.Catalog.Translations = window.Catalog.Translations || new _Translations.Translations();

T.addText('rus', {
    operator: {
        dg: 'Digital Globe, США',
        airbus: 'Airbus Defence & Space, Франция',
        siis: 'SI Imaging Services (SIIS), Южная Корея',
        ge: 'GeoEye, США',
        iinv: 'ImageSat International, N.V., Израиль',
        spaceview: 'Beijing Space View Technology Co., Ltd (Space View), КНР',
        vniiem: 'ФГУП "НПП ВНИИЭМ", Беларусь',
        blackbridge: 'BlackBridge AG, ФРГ',
        usgs: 'United States Geological Survey, США',
        roskosmos: 'Роскосмос'
    }
});

T.addText('eng', {
    operator: {
        dg: 'Digital Globe, USA',
        airbus: 'Airbus Defence & Space, France',
        siis: 'SI Imaging Services (SIIS), South Korea',
        ge: 'GeoEye, USA',
        iinv: 'ImageSat International, N.V., Israel',
        spaceview: 'Beijing Space View Technology Co., Ltd (Space View), China',
        vniiem: 'ФГУП "НПП ВНИИЭМ", Belarus',
        blackbridge: 'BlackBridge AG, Germany',
        usgs: 'United States Geological Survey, USA',
        roskosmos: 'Roskosmos'
    }
});

var Satellite = function () {
    function Satellite(_ref) {
        var id = _ref.id,
            platforms = _ref.platforms,
            name = _ref.name,
            resolution = _ref.resolution,
            swath = _ref.swath,
            operator = _ref.operator,
            since = _ref.since,
            _ref$ms = _ref.ms,
            ms = _ref$ms === undefined ? true : _ref$ms,
            _ref$arity = _ref.arity,
            arity = _ref$arity === undefined ? 1 : _ref$arity,
            _ref$restricted = _ref.restricted,
            restricted = _ref$restricted === undefined ? false : _ref$restricted,
            _ref$checked = _ref.checked,
            checked = _ref$checked === undefined ? false : _ref$checked;

        _classCallCheck(this, Satellite);

        this._id = id;
        this._platforms = platforms;
        this._name = name;
        this._resolution = resolution;
        this._swath = swath;
        this._operator = operator;
        this._since = since;
        this._arity = arity;
        this._ms = ms;
        this._restricted = restricted;
        this._checked = checked;
    }

    _createClass(Satellite, [{
        key: 'islocal',
        value: function islocal(archive) {
            switch (archive) {
                case 'global':
                    return ' AND islocal = FALSE';
                case 'local':
                    return ' AND islocal = TRUE';
                default:
                case 'all':
                    return '';
            }
        }
    }, {
        key: 'condition',
        value: function condition(archive) {
            return 'platform IN (' + this.platforms.map(function (x) {
                return '\'' + x + '\'';
            }).join(',') + ')' + this.islocal(archive);
        }
    }, {
        key: 'id',
        get: function get() {
            return this._id;
        }
    }, {
        key: 'platforms',
        get: function get() {
            return this._platforms;
        }
    }, {
        key: 'name',
        get: function get() {
            return this._name;
        }
    }, {
        key: 'resolution',
        get: function get() {
            return this._resolution;
        }
    }, {
        key: 'swath',
        get: function get() {
            return this._swath;
        }
    }, {
        key: 'operator',
        get: function get() {
            return this._operator;
        }
    }, {
        key: 'since',
        get: function get() {
            return this._since;
        }
    }, {
        key: 'arity',
        get: function get() {
            return this._arity;
        }
    }, {
        key: 'ms',
        get: function get() {
            return this._ms;
        }
    }, {
        key: 'restricted',
        get: function get() {
            return this._restricted;
        }
    }, {
        key: 'checked',
        get: function get() {
            return this._checked;
        },
        set: function set(value) {
            this._checked = value;
        }
    }]);

    return Satellite;
}();

var DG = function (_Satellite) {
    _inherits(DG, _Satellite);

    function DG(_ref2) {
        var id = _ref2.id,
            platforms = _ref2.platforms,
            name = _ref2.name,
            resolution = _ref2.resolution,
            swath = _ref2.swath,
            since = _ref2.since,
            ms = _ref2.ms;

        _classCallCheck(this, DG);

        return _possibleConstructorReturn(this, (DG.__proto__ || Object.getPrototypeOf(DG)).call(this, { id: id, platforms: platforms, name: name, resolution: resolution, swath: swath, operator: T.getText('operator.dg'), since: since, ms: ms }));
    }

    return DG;
}(Satellite);

var KOMPSAT = function (_Satellite2) {
    _inherits(KOMPSAT, _Satellite2);

    function KOMPSAT(_ref3) {
        var id = _ref3.id,
            platforms = _ref3.platforms,
            name = _ref3.name,
            resolution = _ref3.resolution,
            swath = _ref3.swath,
            since = _ref3.since;

        _classCallCheck(this, KOMPSAT);

        return _possibleConstructorReturn(this, (KOMPSAT.__proto__ || Object.getPrototypeOf(KOMPSAT)).call(this, { id: id, platforms: platforms, name: name, resolution: resolution, swath: swath, operator: T.getText('operator.siis'), since: since }));
    }

    return KOMPSAT;
}(Satellite);

var SpaceView = function (_Satellite3) {
    _inherits(SpaceView, _Satellite3);

    function SpaceView(_ref4) {
        var id = _ref4.id,
            platforms = _ref4.platforms,
            name = _ref4.name,
            resolution = _ref4.resolution,
            swath = _ref4.swath,
            since = _ref4.since;

        _classCallCheck(this, SpaceView);

        return _possibleConstructorReturn(this, (SpaceView.__proto__ || Object.getPrototypeOf(SpaceView)).call(this, { id: id, platforms: platforms, name: name, resolution: resolution, swath: swath, operator: T.getText('operator.spaceview'), since: since, restricted: true }));
    }

    return SpaceView;
}(Satellite);

var GF1 = function (_SpaceView) {
    _inherits(GF1, _SpaceView);

    function GF1(_ref5) {
        var id = _ref5.id,
            platforms = _ref5.platforms,
            name = _ref5.name,
            resolution = _ref5.resolution,
            swath = _ref5.swath,
            since = _ref5.since,
            sensor = _ref5.sensor;

        _classCallCheck(this, GF1);

        var _this4 = _possibleConstructorReturn(this, (GF1.__proto__ || Object.getPrototypeOf(GF1)).call(this, { id: id, platforms: platforms, name: name, resolution: resolution, swath: swath, since: since }));

        _this4._sensor = sensor;
        return _this4;
    }

    _createClass(GF1, [{
        key: 'condition',
        value: function condition(archive) {
            return _get(GF1.prototype.__proto__ || Object.getPrototypeOf(GF1.prototype), 'condition', this).call(this, archive) + ' AND sensor = \'' + this.sensor + '\'';
        }
    }, {
        key: 'sensor',
        get: function get() {
            return this._sensor;
        }
    }]);

    return GF1;
}(SpaceView);

var Airbus = function (_Satellite4) {
    _inherits(Airbus, _Satellite4);

    function Airbus(_ref6) {
        var id = _ref6.id,
            platforms = _ref6.platforms,
            name = _ref6.name,
            resolution = _ref6.resolution,
            swath = _ref6.swath,
            since = _ref6.since,
            arity = _ref6.arity,
            ms = _ref6.ms;

        _classCallCheck(this, Airbus);

        return _possibleConstructorReturn(this, (Airbus.__proto__ || Object.getPrototypeOf(Airbus)).call(this, { id: id, platforms: platforms, name: name, resolution: resolution, swath: swath, operator: T.getText('operator.airbus'), since: since, arity: arity, ms: ms }));
    }

    return Airbus;
}(Satellite);

var PHR = function (_Airbus) {
    _inherits(PHR, _Airbus);

    function PHR() {
        _classCallCheck(this, PHR);

        return _possibleConstructorReturn(this, (PHR.__proto__ || Object.getPrototypeOf(PHR)).call(this, { id: 'PHR', platforms: ['PHR1A', 'PHR1B', '1A_PM', '1B_PM', 'PHR-1A', 'PHR-1B'], name: 'Pleiades A-B', resolution: 0.5, swath: 20, since: '2011, 2012', arity: 2 }));
    }

    _createClass(PHR, [{
        key: 'condition',
        value: function condition(archive) {
            switch (archive) {
                case 'all':
                    return "platform IN ('PHR1A','PHR1B','1A_PM','1B_PM','PHR-1A','PHR-1B')";
                case 'local':
                    return "platform IN ('1A_PM','1B_PM','PHR-1A','PHR-1B')";
                case 'global':
                default:
                    return _get(PHR.prototype.__proto__ || Object.getPrototypeOf(PHR.prototype), 'condition', this).call(this, archive);
            }
        }
    }]);

    return PHR;
}(Airbus);

var PLD_1A = function (_Airbus2) {
    _inherits(PLD_1A, _Airbus2);

    function PLD_1A() {
        _classCallCheck(this, PLD_1A);

        return _possibleConstructorReturn(this, (PLD_1A.__proto__ || Object.getPrototypeOf(PLD_1A)).call(this, { id: '1A_PHR', platforms: ['1A-PHR-1A', '1A-PHR-1B'], name: '1ATLAS (PLD)', resolution: 0.5, swath: 20, since: '2011, 2012', arity: 2 }));
    }

    _createClass(PLD_1A, [{
        key: 'condition',
        value: function condition(archive) {
            return "platform IN ('1A-PHR-1A','1A-PHR-1B')";
        }
    }, {
        key: 'restricted',
        get: function get() {
            return true;
        }
    }]);

    return PLD_1A;
}(Airbus);

var SP5_10MS = function (_Airbus3) {
    _inherits(SP5_10MS, _Airbus3);

    function SP5_10MS() {
        _classCallCheck(this, SP5_10MS);

        return _possibleConstructorReturn(this, (SP5_10MS.__proto__ || Object.getPrototypeOf(SP5_10MS)).call(this, { id: 'SP5_10MS', platforms: ['SPOT 5'], name: 'SPOT 5 (10m)', resolution: 10, swath: 20, since: '2002 - 2015' }));
    }

    _createClass(SP5_10MS, [{
        key: 'condition',
        value: function condition(archive) {
            return "platform = 'SPOT 5' AND sensor = 'J'";
        }
    }]);

    return SP5_10MS;
}(Airbus);

var SP5_5MS = function (_Airbus4) {
    _inherits(SP5_5MS, _Airbus4);

    function SP5_5MS() {
        _classCallCheck(this, SP5_5MS);

        return _possibleConstructorReturn(this, (SP5_5MS.__proto__ || Object.getPrototypeOf(SP5_5MS)).call(this, { id: 'SP5_5MS', platforms: ['SPOT 5'], name: 'SPOT 5 (5m)', resolution: 5, swath: 20, since: '2002 - 2015' }));
    }

    _createClass(SP5_5MS, [{
        key: 'condition',
        value: function condition() {
            return "platform = 'SPOT 5' AND (sensor = 'J' AND (spot5_a_exists = TRUE OR spot5_b_exists = TRUE))";
        }
    }]);

    return SP5_5MS;
}(Airbus);

var SP5_5PC = function (_SP5_5MS) {
    _inherits(SP5_5PC, _SP5_5MS);

    function SP5_5PC() {
        _classCallCheck(this, SP5_5PC);

        var _this10 = _possibleConstructorReturn(this, (SP5_5PC.__proto__ || Object.getPrototypeOf(SP5_5PC)).call(this));

        _this10._id = 'SP5_5PC';
        _this10._ms = false;
        return _this10;
    }

    _createClass(SP5_5PC, [{
        key: 'condition',
        value: function condition() {
            return "platform = 'SPOT 5' AND (sensor = 'A' OR sensor = 'B' AND spot5_b_exists = FALSE)";
        }
    }]);

    return SP5_5PC;
}(SP5_5MS);

var SP5_2MS = function (_Airbus5) {
    _inherits(SP5_2MS, _Airbus5);

    function SP5_2MS() {
        _classCallCheck(this, SP5_2MS);

        return _possibleConstructorReturn(this, (SP5_2MS.__proto__ || Object.getPrototypeOf(SP5_2MS)).call(this, { id: 'SP5_2MS', platforms: ['SPOT 5'], name: 'SPOT 5 (2.5m)', resolution: 2.5, swath: 20, since: '2002 - 2015' }));
    }

    _createClass(SP5_2MS, [{
        key: 'condition',
        value: function condition() {
            return "platform = 'SPOT 5' AND sensor = 'J' AND spot5_a_exists = TRUE AND spot5_b_exists = TRUE";
        }
    }]);

    return SP5_2MS;
}(Airbus);

var SP5_2PC = function (_SP5_2MS) {
    _inherits(SP5_2PC, _SP5_2MS);

    function SP5_2PC() {
        _classCallCheck(this, SP5_2PC);

        var _this12 = _possibleConstructorReturn(this, (SP5_2PC.__proto__ || Object.getPrototypeOf(SP5_2PC)).call(this));

        _this12._id = 'SP5_2PC';
        _this12._ms = false;
        return _this12;
    }

    _createClass(SP5_2PC, [{
        key: 'condition',
        value: function condition() {
            return "platform = 'SPOT 5' AND sensor = 'A' AND spot5_b_exists = TRUE";
        }
    }]);

    return SP5_2PC;
}(SP5_2MS);

var SP6_7 = function (_Airbus6) {
    _inherits(SP6_7, _Airbus6);

    function SP6_7() {
        _classCallCheck(this, SP6_7);

        return _possibleConstructorReturn(this, (SP6_7.__proto__ || Object.getPrototypeOf(SP6_7)).call(this, { id: 'SP6_7', platforms: ['SPOT6', 'SPOT 6', 'SPOT7', 'SPOT 7'], name: 'SPOT 6-7', resolution: 1.5, swath: 60, since: '2012, 2014', arity: 2 }));
    }

    _createClass(SP6_7, [{
        key: 'condition',
        value: function condition(archive, authorized) {
            return 'platform IN (\'SPOT6\',\'SPOT 6\',\'SPOT7\',\'SPOT 7\')' + (authorized ? this.islocal(archive) : '');
        }
    }]);

    return SP6_7;
}(Airbus);

var SP6_7_1A = function (_Airbus7) {
    _inherits(SP6_7_1A, _Airbus7);

    function SP6_7_1A() {
        _classCallCheck(this, SP6_7_1A);

        return _possibleConstructorReturn(this, (SP6_7_1A.__proto__ || Object.getPrototypeOf(SP6_7_1A)).call(this, { id: '1A_SP6_7', platforms: ['1A-SPOT-6', '1A-SPOT-7'], name: '1ATLAS (SP)', resolution: 1.5, swath: 60, since: '2012, 2014', arity: 2 }));
    }

    _createClass(SP6_7_1A, [{
        key: 'condition',
        value: function condition(archive, authorized) {
            return "platform IN ('1A-SPOT-6','1A-SPOT-7')";
        }
    }, {
        key: 'restricted',
        get: function get() {
            return true;
        }
    }]);

    return SP6_7_1A;
}(Airbus);

var EROS = function (_Satellite5) {
    _inherits(EROS, _Satellite5);

    function EROS(_ref7) {
        var id = _ref7.id,
            platforms = _ref7.platforms,
            name = _ref7.name,
            resolution = _ref7.resolution,
            swath = _ref7.swath,
            since = _ref7.since;

        _classCallCheck(this, EROS);

        return _possibleConstructorReturn(this, (EROS.__proto__ || Object.getPrototypeOf(EROS)).call(this, { id: id, platforms: platforms, name: name, resolution: resolution, swath: swath, operator: T.getText('operator.iinv'), restricted: true, since: since, ms: false }));
    }

    return EROS;
}(Satellite);

var RP = function (_Satellite6) {
    _inherits(RP, _Satellite6);

    function RP(_ref8) {
        var id = _ref8.id,
            platforms = _ref8.platforms,
            name = _ref8.name,
            ms = _ref8.ms;

        _classCallCheck(this, RP);

        return _possibleConstructorReturn(this, (RP.__proto__ || Object.getPrototypeOf(RP)).call(this, { id: id, platforms: platforms, name: name, resolution: 1, swath: 38, operator: T.getText('operator.roskosmos'), arity: 3, since: '2013, 2014, 2016', ms: ms }));
    }

    _createClass(RP, [{
        key: 'condition',
        value: function condition(archive) {
            return _get(RP.prototype.__proto__ || Object.getPrototypeOf(RP.prototype), 'condition', this).call(this, archive) + ' AND sensor = \'\u0421\u041F\u041F\u0418 "\u0421\u0430\u043D\u0433\u0443\u0440-1\u0423"\'';
        }
    }]);

    return RP;
}(Satellite);

var RP_PC = function (_RP) {
    _inherits(RP_PC, _RP);

    function RP_PC() {
        _classCallCheck(this, RP_PC);

        return _possibleConstructorReturn(this, (RP_PC.__proto__ || Object.getPrototypeOf(RP_PC)).call(this, { id: 'RP_PC', platforms: ['Ресурс-П1', 'Ресурс-П2', 'Ресурс-П3'], name: 'Ресурс-П', ms: false }));
    }

    _createClass(RP_PC, [{
        key: 'condition',
        value: function condition(archive) {
            return _get(RP_PC.prototype.__proto__ || Object.getPrototypeOf(RP_PC.prototype), 'condition', this).call(this, archive) + ' AND spot5_a_exists = TRUE AND spot5_b_exists = FALSE';
        }
    }]);

    return RP_PC;
}(RP);

var RP_1MS = function (_RP2) {
    _inherits(RP_1MS, _RP2);

    function RP_1MS() {
        _classCallCheck(this, RP_1MS);

        return _possibleConstructorReturn(this, (RP_1MS.__proto__ || Object.getPrototypeOf(RP_1MS)).call(this, { id: 'RP_1MS', platforms: ['Ресурс-П1', 'Ресурс-П2', 'Ресурс-П3'], name: 'Ресурс-П (1м)', resolution: 1, ms: true }));
    }

    _createClass(RP_1MS, [{
        key: 'condition',
        value: function condition(archive) {
            return _get(RP_1MS.prototype.__proto__ || Object.getPrototypeOf(RP_1MS.prototype), 'condition', this).call(this, archive) + ' AND spot5_a_exists = TRUE AND spot5_b_exists = TRUE';
        }
    }]);

    return RP_1MS;
}(RP);

var RP_4MS = function (_RP3) {
    _inherits(RP_4MS, _RP3);

    function RP_4MS() {
        _classCallCheck(this, RP_4MS);

        return _possibleConstructorReturn(this, (RP_4MS.__proto__ || Object.getPrototypeOf(RP_4MS)).call(this, { id: 'RP_4MS', platforms: ['Ресурс-П1', 'Ресурс-П2', 'Ресурс-П3'], name: 'Ресурс-П (4м)', resolution: 4, ms: true }));
    }

    _createClass(RP_4MS, [{
        key: 'condition',
        value: function condition(archive) {
            return _get(RP_4MS.prototype.__proto__ || Object.getPrototypeOf(RP_4MS.prototype), 'condition', this).call(this, archive) + ' AND spot5_b_exists = TRUE';
        }
    }]);

    return RP_4MS;
}(RP);

var satellites = {
    ms: [new DG({ id: 'WV04', platforms: ['WV04'], name: 'WorldView 4', resolution: 0.3, swath: 13.2, since: '2016' }), new DG({ id: 'WV03', platforms: ['WV03'], name: 'WorldView 3', resolution: 0.3, swath: 13.1, since: '2014' }), new DG({ id: 'WV02', platforms: ['WV02'], name: 'WorldView 2', resolution: 0.4, swath: 16.4, since: '2009' }), new DG({ id: 'GE01', platforms: ['GE01'], name: 'GeoEye-1', resolution: 0.4, swath: 15.2, since: '2008' }), new PHR(), new DG({ id: 'QB02', platforms: ['QB02'], name: 'Quickbird', resolution: 0.5, swath: 16.5, since: '2001 - 2015' }), new KOMPSAT({ id: 'KOMPSAT3A', platforms: ['KOMPSAT3A'], name: 'KOMPSAT-3A', resolution: 0.5, swath: 12, since: '2015' }), new KOMPSAT({ id: 'KOMPSAT3', platforms: ['KOMPSAT3'], name: 'KOMPSAT-3', resolution: 0.7, swath: 16, since: '2012' }), new Satellite({ id: 'IK', platforms: ['IK-2', 'IKONOS-2'], name: 'IKONOS', resolution: 0.8, swath: 11.3, operator: T.getText('operator.ge'), since: '1999 - 2015' }), new SpaceView({ id: 'GF2', platforms: ['GF2'], name: 'GaoFen-2', resolution: 0.8, swath: 45, since: '2014' }), new KOMPSAT({ id: 'KOMPSAT2', platforms: ['KOMPSAT2'], name: 'KOMPSAT-2', resolution: 1, swath: 15, since: '2006' }), new RP_1MS(), new SP6_7(), new Satellite({ id: 'BKA', platforms: ['BKA'], name: 'БелКА', resolution: 2, swath: 20, operator: T.getText('operator.vniiem'), since: '2012', restricted: true }), new GF1({ id: 'GF1_2m', platforms: ['GF1'], name: 'GaoFen-1 (2m)', resolution: 2, swath: 60, since: '2013', sensor: 'A' }), new SpaceView({ id: 'ZY3', platforms: ['ZY3', 'ZY302'], name: 'ZiYuan-3', resolution: 2.1, swath: 51, since: '2012' }),
    // new SP5_2MS(),
    new RP_4MS(),
    // new SP5_5MS(),
    new Satellite({ id: 'RE', platforms: ['RE'], name: 'RapidEye', resolution: 6.5, swath: 77, operator: T.getText('operator.blackbridge'), since: '2008', restricted: true }), new SP5_10MS(), new Satellite({ id: 'LANDSAT8', platforms: ['LANDSAT_8'], name: 'LANDSAT 8', resolution: 15, swath: 185, operator: T.getText('operator.usgs'), since: '2013', restricted: true }), new GF1({ id: 'GF1_16m', platforms: ['GF1'], name: 'GaoFen-1 (16m)', resolution: 16, swath: 800, since: '2013', sensor: 'B' }), new SP6_7_1A(), new PLD_1A()],
    pc: [new DG({ id: 'WV01', platforms: ['WV01'], name: 'WorldView 1', resolution: 0.5, swath: 17.6, since: '2007' }), new EROS({ id: 'EROSB', platforms: ['EROS-B'], name: 'EROS-B', resolution: 0.7, swath: 7, since: '2006' }), new RP_PC(), new EROS({ id: 'EROSA', platforms: ['EROS-A1'], name: 'EROS-A', resolution: 1.9, swath: 14, since: '2000' }),
    // new SP5_2PC(),
    new SP5_5PC()]
};

function get_name(a, x) {
    return x.platforms.reduce(function (b, y) {
        b[y] = x.name;
        return b;
    }, a);
}

var names = satellites.ms.reduce(get_name, {});
names = satellites.pc.reduce(get_name, names);

function getSatelliteName(platform) {
    return names[platform];
}

exports.satellites = satellites;
exports.getSatelliteName = getSatelliteName;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function copy(source) {
    switch (typeof source === 'undefined' ? 'undefined' : _typeof(source)) {
        case 'number':
        case 'string':
        case 'function':
        default:
            return source;
        case 'object':
            if (source === null) {
                return null;
            } else if (Array.isArray(source)) {
                return source.map(function (item) {
                    return copy(item);
                });
            } else if (source instanceof Date) {
                return source;
            } else {
                return Object.keys(source).reduce(function (a, k) {
                    a[k] = copy(source[k]);
                    return a;
                }, {});
            }
    }
}

function extend(target, source) {
    if (target === source) {
        return target;
    } else {
        return Object.keys(source).reduce(function (a, k) {
            var value = source[k];
            if (_typeof(a[k]) === 'object' && k in a) {
                a[k] = extend(a[k], value);
            } else {
                a[k] = copy(value);
            }
            return a;
        }, copy(target));
    }
}

exports.copy = copy;
exports.extend = extend;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Color = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Utils = __webpack_require__(19);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Color = function () {
    function Color() {
        _classCallCheck(this, Color);
    }

    _createClass(Color, [{
        key: 'hsl2rgb',
        value: function hsl2rgb(h, s, l) {
            var q;
            if (l < 0.5) {
                q = l * (1.0 + s);
            } else if (l >= 0.5) {
                q = l + s - l * s;
            }
            var p = 2.0 * l - q;
            var hk = h / 360;
            var norm = function norm(tc) {
                if (tc < 0) return tc + 1.0;
                if (tc > 1) return tc - 1.0;
                return tc;
            };
            var tr = norm(hk + 1 / 3);
            var tg = norm(hk);
            var tb = norm(hk - 1 / 3);

            var color = function color(tc) {
                if (tc < 1 / 6) {
                    return p + (q - p) * 6.0 * tc;
                }
                if (1 / 6 <= tc && tc < 1 / 2) {
                    return q;
                }
                if (1 / 2 <= tc && tc < 2 / 3) {
                    return p + (q - p) * (2 / 3 - tc) * 6.0;
                }
                return p;
            };
            return {
                r: Math.round(color(tr) * 255),
                g: Math.round(color(tg) * 255),
                b: Math.round(color(tb) * 255)
            };
        }
    }, {
        key: 'rgb2hsl',
        value: function rgb2hsl(R, G, B) {
            var r = R / 255,
                g = G / 255,
                b = B / 255;
            var max = Math.max(r, g, b);
            var min = Math.min(r, g, b);
            var h;
            if (max == min) {
                h = undefined;
            } else if (max == r && g >= b) {
                h = 60 * (g - b) / (max - min);
            } else if (max == r && g < b) {
                h = 60 * (g - b) / (max - min) + 360;
            } else if (max == g) {
                h = 60 * (b - r) / (max - min) + 120;
            } else if (max == b) {
                h = 60 * (r - g) / (max - min) + 240;
            }
            var l = (max + min) / 2;
            var s;
            if (l == 0 || max == min) {
                s = 0;
            } else if (0 < l && l <= 0.5) {
                s = (max - min) / (max + min);
            } else if (0.5 < l && l < 1) {
                s = (max - min) / (2 - (max + min));
            }
            return { h: h, s: s, l: l };
        }
    }, {
        key: 'rgb2hex',
        value: function rgb2hex(r, g, b) {
            return '#' + [r, g, b].map(function (x) {
                return _Utils.Utils.padLeft(x.toString(16), '0', 2).toUpperCase();
            }).join('');
        }
    }, {
        key: 'hex2rgb',
        value: function hex2rgb(hex) {
            var _$exec$slice$map = /#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})/gi.exec(hex).slice(1).map(function (x) {
                return parseInt(x, 16);
            }),
                _$exec$slice$map2 = _slicedToArray(_$exec$slice$map, 3),
                r = _$exec$slice$map2[0],
                g = _$exec$slice$map2[1],
                b = _$exec$slice$map2[2];

            return { r: r, g: g, b: b };
        }
    }]);

    return Color;
}();

var color = new Color();

exports.Color = color;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventTarget = function () {
    function EventTarget() {
        _classCallCheck(this, EventTarget);

        this.listeners = {};
    }

    _createClass(EventTarget, [{
        key: "addEventListener",
        value: function addEventListener(type, callback) {
            if (!(type in this.listeners)) {
                this.listeners[type] = [];
            }
            this.listeners[type].push(callback);
        }
    }, {
        key: "removeEventListener",
        value: function removeEventListener(type, callback) {
            if (!(type in this.listeners)) {
                return;
            }
            var stack = this.listeners[type];
            for (var i = 0, l = stack.length; i < l; i++) {
                if (stack[i] === callback) {
                    stack.splice(i, 1);
                    return this.removeEventListener(type, callback);
                }
            }
        }
    }, {
        key: "dispatchEvent",
        value: function dispatchEvent(event) {
            if (!(event.type in this.listeners)) {
                return;
            }
            var stack = this.listeners[event.type];
            // event.target = this;
            for (var i = 0, l = stack.length; i < l; i++) {
                stack[i].call(this, event);
            }
        }
    }]);

    return EventTarget;
}();

exports.EventTarget = EventTarget;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Cart = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

__webpack_require__(187);

var _Panel2 = __webpack_require__(5);

var _Satellites = __webpack_require__(6);

var _Translations = __webpack_require__(2);

var _Utils = __webpack_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

T.addText('rus', {
    cart: {
        title: 'Корзина',
        clear: 'Очистить корзину',
        back: 'Назад',
        order: 'Перейти к оформлению заказа',
        warning: 'Для редактирования контактной информации воспользуйтесь <a href="#">ссылкой</a>.\r\nПосле этого необходимо снова зайти в систему.',
        customer: 'Организация (заказчик)',
        project: {
            name: 'Название проекта',
            type: {
                title: 'Тип проекта',
                commercial: 'Коммерческий',
                internal: 'Внутренний',
                presale: 'Пресейл'
            },
            number: '№ Договора-контракта'
        },
        person: 'Имя и фамилия',
        company: 'Компания',
        email: 'Электронная почта',
        comment: 'Комментарий',
        header: 'Оформление заказа',
        submit: 'Заказать',
        close: 'Закрыть',
        success: {
            header: 'Благодарим за оформление заказа!',
            content: 'На адрес электронной почты, указанный при регистрации было отправлено сообщение с ссылкой на детали заказа.',
            footer: 'В ближайшее время мы свяжемся с Вами и дадим подробную информацию о стоимости и характеристиках.'
        },
        invalid: 'Данное поле обязательно для заполнения'
    }
});

T.addText('eng', {
    cart: {
        title: 'Cart',
        clear: 'Clear',
        back: 'Back',
        order: 'To order',
        warning: 'To edit contact information use the link #. Afterwards it is necessary to login.',
        customer: 'Organization (customer)',
        project: {
            name: 'Project name',
            type: {
                title: 'Project type',
                commercial: 'Commercial',
                internal: 'Internal',
                presale: 'Presale'
            },
            number: 'Project number'
        },
        person: 'Name',
        company: 'Company',
        email: 'Email',
        comment: 'Comment',
        header: 'Place an order',
        submit: 'Submit',
        close: 'Close',
        success: {
            header: 'Thank you for order!',
            content: 'An email with the permanent link to your query has been sent to your address.',
            footer: 'We will soon send you more information concerning the cost and details.'
        },
        invalid: 'This field is required'
    }
});

var Cart = function (_Panel) {
    _inherits(Cart, _Panel);

    function Cart(container, _ref) {
        var catalogResourceServer = _ref.catalogResourceServer,
            left = _ref.left,
            top = _ref.top,
            _ref$cols = _ref.cols,
            cols = _ref$cols === undefined ? 2 : _ref$cols,
            _ref$imageWidth = _ref.imageWidth,
            imageWidth = _ref$imageWidth === undefined ? 250 : _ref$imageWidth,
            _ref$imageHeight = _ref.imageHeight,
            imageHeight = _ref$imageHeight === undefined ? 250 : _ref$imageHeight,
            _ref$internal = _ref.internal,
            internal = _ref$internal === undefined ? true : _ref$internal;

        _classCallCheck(this, Cart);

        var _this = _possibleConstructorReturn(this, (Cart.__proto__ || Object.getPrototypeOf(Cart)).call(this, container, { id: 'panel.cart', title: T.getText('cart.header'), left: left, top: top, modal: true }));

        _this._catalogResourceServer = catalogResourceServer;
        _this._body.classList.add('cart');
        _this._cols = cols;
        _this._internal = internal;
        _this._link = 'http://my.kosmosnimki.ru/Home/Settings';
        _this._submit = _this._submit.bind(_this);
        _this._imageWidth = imageWidth;
        _this._imageHeight = imageHeight;
        _this._items = [];
        _this._permalink = '';
        _this.hide();

        var dlgCartContainer = (0, _Utils.create_container)();
        dlgCartContainer.classList.add('cart-dialog');
        _this._dlgCart = new _Panel2.Panel(dlgCartContainer, {
            id: 'cart.dialog',
            left: window.DIALOG_PLACE.left,
            top: window.DIALOG_PLACE.top,
            modal: true
        });
        _this._dlgCart.hide();
        _this._dlgCart.content.innerHTML = '<div>' + T.getText('cart.success.header') + '</div>\n        <div>' + T.getText('cart.success.content') + '</div>\n        <div>' + T.getText('cart.success.footer') + '</div>';
        _this._dlgCart.footer.innerHTML = '<button class="cart-close-button">' + T.getText('cart.close') + '</button>';
        _this._dlgCart.footer.querySelector('button').addEventListener('click', function (e) {
            _this._dlgCart.hide();
        });

        _this._requiredFields = _this._internal ? ['.cart-customer input', '.cart-project input', '.cart-project-number', '.cart-person input', '.cart-email input'] : ['.cart-person input', '.cart-email input'];
        return _this;
    }

    _createClass(Cart, [{
        key: '_view',
        value: function _view() {
            var _this2 = this;

            this._updateItemsNumber();
            var warning = T.getText('cart.warning').replace('#', this._link).replace(/\r\n/, '<br />');
            var userInfo = window.Catalog.userInfo;
            this._content.innerHTML = '<div class="cart-order">\n            <div class="cart-order-form">\n                <div class="cart-order-warning">' + warning + '</div>\n                <table>\n                    <tbody>\n                        <tr class="cart-customer">\n                            <td>\n                                <label>' + T.getText('cart.customer') + '</label>\n                            </td>\n                            <td>\n                                <input type="text" value="" />\n                            </td>\n                            <td>' + (this._internal ? '*' : '') + '</td>\n                        </tr>\n                        ' + (this._internal ? '<tr class="cart-project">\n                                <td>\n                                    <label>' + T.getText('cart.project.name') + '</label>\n                                </td>\n                                <td>\n                                    <input type="text" value="" />\n                                </td>\n                                <td>*</td>\n                            </tr>\n                            <tr class="cart-project-type">\n                                <td>\n                                    <label>' + T.getText('cart.project.type.title') + '</label>                                    \n                                </td>\n                                <td>\n                                    <select>\n                                        <option value="commercial">' + T.getText('cart.project.type.commercial') + '</option>\n                                        <option value="internal">' + T.getText('cart.project.type.internal') + '</option>\n                                        <option value="presale">' + T.getText('cart.project.type.presale') + '</option>\n                                    </select>                                  \n                                </td>\n                                <td>*</td>\n                            </tr>\n                            <tr class="cart-project-number">\n                                <td>\n                                    <label>' + T.getText('cart.project.number') + '</label>\n                                </td>\n                                <td>\n                                    <input type="text" class="cart-project-number" value="" />\n                                </td>\n                                <td>*</td>\n                            </tr>' : '') + '\n                        <tr class="cart-person">\n                            <td>\n                                <label>' + T.getText('cart.person') + '</label>\n                            </td>\n                            <td>\n                                <input type="text" value="' + userInfo.FullName + '" />\n                            </td>\n                            <td>*</td>\n                        </tr>\n                        ' + (this._internal ? '<tr class="cart-company">\n                                <td>\n                                    <label>' + T.getText('cart.company') + '</label>\n                                </td>\n                                <td>\n                                    <input type="text" readonly value="' + userInfo.Organization + '" />\n                                </td>\n                                <td></td>\n                            </tr>' : '') + '\n                        <tr class="cart-email">\n                            <td>\n                                <label>' + T.getText('cart.email') + '</label>\n                            </td>\n                            <td>\n                                <input type="text" value="' + userInfo.Email + '" />\n                            </td>\n                            <td>*</td>\n                        </tr>\n                        <tr class="cart-comment">\n                            <td>\n                                <label>' + T.getText('cart.comment') + '</label>\n                            </td>\n                            <td>                            \n                                <textarea maxlength="1000"></textarea>\n                            </td>\n                            <td>                                \n                            </td>\n                        </tr>                  \n                    </tbody>\n                </table>                \n            </div>\n            <div class="cart-order-footer">                \n                <button class="cart-order-submit">' + T.getText('cart.submit') + '</button>\n            </div>\n        </div>';

            this._submitButton = this._content.querySelector('.cart-order-submit');
            this._submitButton.addEventListener('click', this._submit);

            if (this._internal) {
                this._projectTypeSelect = this._content.querySelector('.cart-project-type select');
                var update_project_number = function update_project_number() {
                    var field = _this2._content.querySelector('.cart-project-number');
                    var input = field.querySelector('input');
                    var required = _this2._projectTypeSelect.value === 'commercial';
                    input.readOnly = !required;
                    field.querySelector('td:nth-child(3)').innerText = required ? '*' : '';
                    if (input.readOnly) {
                        input.classList.add('read-only');
                    } else {
                        input.classList.remove('read-only');
                    }
                };
                update_project_number();
                this._projectTypeSelect.addEventListener('change', function (e) {
                    return update_project_number();
                });
            }

            this.clear = this.clear.bind(this);

            this._requiredFields.forEach(function (s) {
                var el = _this2._container.querySelector(s === '.cart-project-number' ? s + ' input' : s);
                if (el) {
                    el.addEventListener('focus', function (e) {
                        el.classList.remove('invalid-field');
                    });
                }
            });
        }
    }, {
        key: '_updateItemsNumber',
        value: function _updateItemsNumber() {
            var event = document.createEvent('Event');
            event.initEvent('items:change', false, false);
            event.detail = this.count;
            this.dispatchEvent(event);
        }
    }, {
        key: 'hide',
        value: function hide() {
            _get(Cart.prototype.__proto__ || Object.getPrototypeOf(Cart.prototype), 'hide', this).call(this);
            var event = document.createEvent('Event');
            event.initEvent('hide', false, false);
            this.dispatchEvent(event);
        }
    }, {
        key: '_valid',
        value: function _valid(s) {
            if (this._internal && s === '.cart-project-number') {
                switch (this._projectTypeSelect.value) {
                    case 'commercial':
                        var _el = this._container.querySelector(s + ' input');
                        if (_el && _el.value.trim() === '') {
                            _el.classList.add('invalid-field');
                            return false;
                        } else {
                            _el.classList.remove('invalid-field');
                            return true;
                        }
                    case 'internal':
                    case 'presale':
                        return true;
                    default:
                        return false;
                }
            }
            var el = this._container.querySelector(s);
            if (el && el.value.trim() === '') {
                el.classList.add('invalid-field');
                return false;
            } else {
                el.classList.remove('invalid-field');
                return true;
            }
        }
    }, {
        key: '_validate',
        value: function _validate() {
            return this._requiredFields.map(this._valid.bind(this)).every(function (s) {
                return s;
            });
        }
    }, {
        key: '_getProjectType',
        value: function _getProjectType(type) {
            switch (type) {
                case 'commercial':
                    return 'К';
                case 'internal':
                    return 'ВН';
                case 'presale':
                    return 'ПС';
                default:
                    throw 'unknown project type';
            }
        }
    }, {
        key: '_submit',
        value: function _submit() {
            var _this3 = this;

            if (this._validate()) {
                this._catalogResourceServer.sendPostRequest('CreateOrder.ashx', {
                    TinyReference: this.permalink,
                    ReceiveWay: '',
                    Customer: this._container.querySelector('.cart-customer input').value,
                    Project: this._internal ? this._container.querySelector('.cart-project input').value : '',
                    ProjectType: this._getProjectType(this._internal ? this._container.querySelector('.cart-project-type select').value : 'commercial'),
                    ContractNumber: this._internal ? this._container.querySelector('input.cart-project-number').value : '',
                    Name: '',
                    Surname: this._container.querySelector('.cart-person input').value,
                    Organization: this._internal ? this._container.querySelector('.cart-company input').value : '',
                    Email: this._container.querySelector('.cart-email input').value,
                    Phone: '',
                    Comment: this._container.querySelector('.cart-comment textarea').value,
                    Scenes: this.items.map(function (item) {
                        return item.sceneid;
                    }).join(','),
                    Internal: this._internal
                }).then(function (response) {
                    _this3.hide();
                    if (response.Status === 'ok') {
                        _this3._dlgCart.show();
                    } else {
                        console.log(response);
                    }
                }).catch(function (e) {
                    _this3.hide();
                    console.log(e);
                });
            }
        }
    }, {
        key: 'clear',
        value: function clear() {
            this._items = [];
            this._view();
            this.hide();
        }
    }, {
        key: 'items',
        get: function get() {
            return this._items;
        },
        set: function set(value) {
            this._items = value;
            this._view();
        }
    }, {
        key: 'permalink',
        set: function set(value) {
            this._permalink = value;
        },
        get: function get() {
            return this._permalink;
        }
    }, {
        key: 'count',
        get: function get() {
            return this.items.length;
        }
    }]);

    return Cart;
}(_Panel2.Panel);

exports.Cart = Cart;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DrawnObjectsControl = exports.DrawnObjects = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _DataGrid = __webpack_require__(4);

__webpack_require__(188);

var _EventTarget2 = __webpack_require__(3);

var _Panel = __webpack_require__(5);

var _Translations = __webpack_require__(2);

var _ColorPicker = __webpack_require__(173);

var _Utils = __webpack_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

T.addText('rus', {
    objects: {
        title: 'Объекты',
        polygon: 'Многоугольник',
        line: 'Линия',
        point: 'Точка'
    },
    name: 'Название',
    area: 'Характеристика',
    color: 'Цвет'
});

T.addText('eng', {
    objects: {
        title: 'Objects',
        polygon: 'Polygon',
        line: 'Line',
        point: 'Point'
    },
    name: 'Name',
    area: 'Data',
    color: 'Color'
});

function get_area_text(area) {
    var sq = '<span class="square">2</span>';
    if (area < 10e+5) {
        return Math.round(area).toFixed(0) + ' ' + T.getText('units.m') + sq;
    } else {
        return Math.round(area / 10e+5).toFixed(0) + ' ' + T.getText('units.km') + sq;
    }
}

var DrawnObjects = function (_EventTarget) {
    _inherits(DrawnObjects, _EventTarget);

    function DrawnObjects(container, _ref) {
        var _ref$color = _ref.color,
            color = _ref$color === undefined ? '#0000FF' : _ref$color;

        _classCallCheck(this, DrawnObjects);

        var _this = _possibleConstructorReturn(this, (DrawnObjects.__proto__ || Object.getPrototypeOf(DrawnObjects)).call(this));

        _this._count = 0;
        _this._container = container;
        _this._container.style.display = 'none';
        _this._container.innerHTML = '<div class="drawn-objects">\n                <div class="drawn-objects-header">\n                    <span class="drawn-objects-title">' + T.getText('objects.title') + '</span>\n                    <span class="drawn-objects-number">0</span>\n                    <span class="drawn-objects-minimize"></span>\n                </div>\n                <div class="drawn-objects-list"></div>\n            </div>';
        _this._preventDefault = _this._preventDefault.bind(_this);
        _this._stopPropagation = _this._stopPropagation.bind(_this);
        _this._container.addEventListener('click', _this._preventDefault);
        _this._container.addEventListener('click', _this._stopPropagation);
        _this._container.addEventListener('mousewheel', _this._stopPropagation);
        _this._toggle = _this._toggle.bind(_this);
        _this._container.querySelector('.drawn-objects-minimize').addEventListener('click', _this._toggle);

        _this._onCellClick = _this._onCellClick.bind(_this);
        _this._onCellEdit = _this._onCellEdit.bind(_this);
        _this._onColumnClick = _this._onColumnClick.bind(_this);
        _this._grid = new _DataGrid.DataGrid(_this._container.querySelector('.drawn-objects-list'), {
            fields: {
                'visible': {
                    type: 'boolean',
                    columnIcon: 'drawn-objects-visible',
                    icon: 'search',
                    yes: 'search-visibility-off',
                    no: 'search-visibility-on',
                    default: true
                },
                'color': {
                    type: 'color',
                    name: T.getText('color'),
                    default: color
                },
                'name': {
                    type: 'string',
                    name: T.getText('name'),
                    edit: 'drawing-edit',
                    sortable: true
                },
                'area': {
                    type: 'float',
                    name: T.getText('area'),
                    align: 'right',
                    sortable: true,
                    default: 0,
                    formatter: function formatter(item) {
                        var geoJSON = item.geoJSON;
                        var g = geoJSON.geometry;
                        var type = g.type;
                        var value = item.area;
                        switch (type.toUpperCase()) {
                            case "POINT":
                                return L.gmxUtil.latLonToString(g.coordinates[0], g.coordinates[1], 6);
                            case "LINESTRING":
                            case "MULTILINESTRING":
                                return L.gmxUtil.prettifyDistance(value);
                            case "MULTIPOLYGON":
                            case "POLYGON":
                            default:
                                return get_area_text(value);
                        }
                    }
                },
                'delete': {
                    columnIcon: 'delete-all',
                    type: 'button',
                    button: 'search search-delete'
                }
            }
        });
        _this._grid.addEventListener('cell:click', _this._onCellClick);
        _this._grid.addEventListener('cell:edit', _this._onCellEdit);
        _this._grid.addEventListener('column:click', _this._onColumnClick);
        _this._colorPickerCell = null;
        _this._onSetColor = _this._onSetColor.bind(_this);

        _this._colorPickerContainer = (0, _Utils.create_container)();
        _this._colorPickerContainer.classList.add('noselect');
        _this._hideColorPicker = _this._hideColorPicker.bind(_this);
        _this._colorPicker = new _ColorPicker.ColorPicker(_this._colorPickerContainer);
        _this._colorPicker.addEventListener('change', _this._onSetColor);
        document.body.addEventListener('click', _this._hideColorPicker);
        return _this;
    }

    _createClass(DrawnObjects, [{
        key: '_toggle',
        value: function _toggle(e) {
            var content = this._container.querySelector('.drawn-objects-list');
            content.style.display = content.style.display === 'none' ? 'block' : 'none';
        }
    }, {
        key: '_preventDefault',
        value: function _preventDefault(e) {
            e.preventDefault();
        }
    }, {
        key: '_stopPropagation',
        value: function _stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: '_hideColorPicker',
        value: function _hideColorPicker(e) {
            this._colorPickerContainer.style.visibility = 'hidden';
        }
    }, {
        key: '_onSetColor',
        value: function _onSetColor(e) {
            if (this._colorPickerCell) {
                var _colorPickerCell = this._colorPickerCell,
                    item = _colorPickerCell.item,
                    cell = _colorPickerCell.cell;

                item.color = e.detail.hex;
                cell.querySelector('.table-list-color').style.borderColor = e.detail.hex;

                var event = document.createEvent('Event');
                event.initEvent('edit', false, false);
                event.detail = item;
                this.dispatchEvent(event);
            }
        }
    }, {
        key: '_onCellClick',
        value: function _onCellClick(e) {
            var _e$detail = e.detail,
                i = _e$detail.i,
                j = _e$detail.j,
                row = _e$detail.row,
                cell = _e$detail.cell,
                name = _e$detail.name,
                field = _e$detail.field,
                item = _e$detail.item;

            var event = document.createEvent('Event');
            switch (name) {
                case 'visible':
                    // let btn = cell.querySelector('i');
                    // if (btn.classList.contains('search-visibility-off')) {
                    //     btn.classList.remove('search-visibility-off');
                    //     btn.classList.add('search-visibility-on');
                    //     item.visible = false;
                    // }
                    // else {
                    //     btn.classList.remove('search-visibility-on');
                    //     btn.classList.add('search-visibility-off');

                    // }   
                    item.visible = !item.visible;
                    var id = item[_DataGrid.ENUM_ID];
                    this._grid.redrawRow(id, item);

                    event.initEvent('check', false, false);
                    event.detail = item;
                    this.dispatchEvent(event);

                    break;
                case 'color':
                    if (item.color) {
                        this._colorPickerCell = { item: item, cell: cell };

                        var _cell$getBoundingClie = cell.getBoundingClientRect(),
                            left = _cell$getBoundingClie.left,
                            top = _cell$getBoundingClie.top;

                        var colorPickerRect = this._colorPickerContainer.getBoundingClientRect();
                        this._colorPickerContainer.style.left = left - colorPickerRect.width - 50 + 'px';
                        var rect = document.body.getBoundingClientRect();
                        this._colorPickerContainer.style.top = (top + colorPickerRect.height < rect.bottom ? top : top - colorPickerRect.height + 10) + 'px';
                        this._colorPicker.value = item.color;
                        this._colorPickerContainer.style.visibility = 'visible';
                    }
                    break;
                case 'delete':
                    event.initEvent('delete', false, false);
                    event.detail = item;
                    this.dispatchEvent(event);
                    break;
                default:
                    event.initEvent('fit', false, false);
                    event.detail = item;
                    this.dispatchEvent(event);
                    break;
            }
        }
    }, {
        key: '_onCellEdit',
        value: function _onCellEdit(e) {
            var item = e.detail.item;

            var event = document.createEvent('Event');
            event.initEvent('edit', false, false);
            event.detail = item;
            this.dispatchEvent(event);
        }
    }, {
        key: '_onColumnClick',
        value: function _onColumnClick(e) {
            var _e$detail2 = e.detail,
                col = _e$detail2.col,
                name = _e$detail2.name;

            var event = document.createEvent('Event');
            switch (name) {
                case 'visible':
                    var state = !col.querySelector('i').classList.contains('drawn-objects-visible');
                    this._grid.items.forEach(function (item) {
                        return item.visible = state;
                    });
                    this._grid.refresh();
                    var btn = this._grid.getCol(name).querySelector('i');
                    if (state) {
                        btn.classList.remove('drawn-objects-hidden');
                        btn.classList.add('drawn-objects-visible');
                    } else {
                        btn.classList.add('drawn-objects-hidden');
                        btn.classList.remove('drawn-objects-visible');
                    }

                    event.initEvent('show:all', false, false);
                    event.detail = state;
                    this.dispatchEvent(event);
                    break;
                case 'delete':
                    event.initEvent('delete:all', false, false);
                    this.dispatchEvent(event);
                    break;
                default:
                    break;
            }
        }
    }, {
        key: 'updateCount',
        value: function updateCount(num) {
            this._count = parseInt(num, 10);
            this._container.querySelector('.drawn-objects-number').innerText = num;
        }
    }, {
        key: 'resize',
        value: function resize(total) {
            var height = this._container.querySelector('.table-list-header').getBoundingClientRect().height;
            this._container.querySelector('.table-list-body').style.maxHeight = total - height + 'px';
        }
    }, {
        key: 'items',
        set: function set(items) {
            if (Array.isArray(items) && items.length > 0) {
                this._container.style.display = 'block';
                this._grid.items = items;
                this.updateCount(this._grid.items.length);
            } else {
                this._container.style.display = 'none';
                this._grid.items = [];
                this.updateCount(0);
            }
        },
        get: function get() {
            return this._grid.items;
        }
    }, {
        key: 'count',
        get: function get() {
            return this._count;
        }
    }]);

    return DrawnObjects;
}(_EventTarget2.EventTarget);

var DrawnObjectsControl = L.Control.extend({
    includes: L.Evented ? L.Evented.prototype : L.Mixin.Events,

    // options.position (left|right)
    initialize: function initialize(options) {
        L.setOptions(this, options);
    },

    onAdd: function onAdd(map) {
        this._container = L.DomUtil.create('div', 'drawn-objects-control');
        this.widget = new DrawnObjects(this._container, {});
        // L.DomEvent.disableClickPropagation(this._container);
        // L.DomEvent.disableScrollPropagation(this._container);
        // L.DomEvent.on(this._container, 'mousemove', L.DomEvent.stopPropagation);
        return this._container;
    },

    onRemove: function onRemove(map) {}

});

exports.DrawnObjects = DrawnObjects;
exports.DrawnObjectsControl = DrawnObjectsControl;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ImageDetails = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _EventTarget2 = __webpack_require__(3);

__webpack_require__(190);

var _Translations = __webpack_require__(2);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

var ImageDetails = function (_EventTarget) {
    _inherits(ImageDetails, _EventTarget);

    function ImageDetails(container, _ref) {
        var left = _ref.left,
            top = _ref.top;

        _classCallCheck(this, ImageDetails);

        var _this = _possibleConstructorReturn(this, (ImageDetails.__proto__ || Object.getPrototypeOf(ImageDetails)).call(this));

        _this._container = container;
        _this._container.classList.add('image-info');
        _this.stopPropagation = _this.stopPropagation.bind(_this);
        _this._container.addEventListener('click', _this.stopPropagation);
        _this._left = left;
        _this._top = top;
        _this.hide();
        return _this;
    }

    _createClass(ImageDetails, [{
        key: 'stopPropagation',
        value: function stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: 'show',
        value: function show() {
            var _this2 = this;

            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { left: this._left, top: this._top };
            var left = options.left,
                top = options.top;

            var header = document.body.querySelector('#header').getBoundingClientRect();
            var body = document.body.getBoundingClientRect();
            var above_top = function above_top(value) {
                return top < header.top + header.height;
            };
            var below_bottom = function below_bottom(value) {
                return top + _this2._height > body.height - header.height;
            };
            this._container.style.left = left + 'px';
            if (above_top(top)) {
                this._container.style.top = top + this._height + 'px';
            } else {
                this._container.style.top = top + 'px';
            }

            if (below_bottom(top)) {
                this._container.style.top = top - this._height + 'px';
            } else {
                this._container.style.top = top + 'px';
            }
            this._container.style.visibility = 'visible';
            if (this.button) {
                this.button.classList.add('search-info-off');
                this.button.classList.remove('search-info-on');
            }

            // this.dispatchEvent(new CustomEvent('show', {
            //     detail: {item: this._item, button: this.button},
            // }));

            var event = document.createEvent('Event');
            event.initEvent('show', false, false);
            event.detail = { item: this._item, button: this.button };
            this.dispatchEvent(event);
        }
    }, {
        key: 'hide',
        value: function hide() {
            this._container.style.visibility = 'hidden';
            if (this.button) {
                this.button.classList.remove('search-info-off');
                this.button.classList.add('search-info-on');
            }

            // this.dispatchEvent(new CustomEvent('hide', {
            //     detail: {item: this._item, button: this.button},
            // }));

            var event = document.createEvent('Event');
            event.initEvent('hide', false, false);
            event.detail = { item: this._item, button: this.button };
            this.dispatchEvent(event);
        }
    }, {
        key: 'item',
        set: function set(value) {
            this._item = value;
            this._container.innerHTML = '<table>\n            <tbody>\n                <tr>\n                    <td class="image-info-id-label">ID:</td>\n                    <td class="image-info-id-value">' + this._item.sceneid + '</td>\n                </tr>\n            </tbody>\n        </table>';
        },
        get: function get() {
            return this._item;
        }
    }, {
        key: 'visible',
        get: function get() {
            return this._container.style.visibility === 'visible';
        }
    }]);

    return ImageDetails;
}(_EventTarget2.EventTarget);

exports.ImageDetails = ImageDetails;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ResultList = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(191);

var _DataGrid = __webpack_require__(4);

var _Satellites = __webpack_require__(6);

var _EventTarget2 = __webpack_require__(3);

var _Utils = __webpack_require__(1);

var _Translations = __webpack_require__(2);

var _DataGrid2 = __webpack_require__(4);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

T.addText('rus', {
    results: {
        title: 'Найденные снимки',
        sceneid: 'ID',
        date: 'Дата',
        satellite: 'Спутник',
        clouds: 'Обл.',
        angle: 'Угол',
        stereo: 'Стерео',
        visibility: 'Видимость',
        cart: 'Добавить все в корзину'
    },
    warning: {
        title: 'Внимание'
    }
});

T.addText('eng', {
    results: {
        title: 'Found images',
        sceneid: 'ID',
        date: 'Date',
        satellite: 'Satellite',
        clouds: 'Clouds',
        angle: 'Angle',
        stereo: 'Stereo',
        visibility: 'Visibility',
        cart: 'Add all to cart'
    },
    warning: {
        title: 'Warning'
    }
});

var ResultList = function (_EventTarget) {
    _inherits(ResultList, _EventTarget);

    function ResultList(container, _ref) {
        var restricted = _ref.restricted;

        _classCallCheck(this, ResultList);

        var _this = _possibleConstructorReturn(this, (ResultList.__proto__ || Object.getPrototypeOf(ResultList)).call(this));

        _this._cart = {};
        _this._restricted = restricted;
        _this._container = container;
        _this._container.classList.add('result-list');
        _this._onColumnClick = _this._onColumnClick.bind(_this);
        _this._onCellClick = _this._onCellClick.bind(_this);
        _this._onRowMouseOver = _this._onRowMouseOver.bind(_this);
        _this._onRowMouseOut = _this._onRowMouseOut.bind(_this);
        _this._onSort = _this._onSort.bind(_this);
        _this._activeInfo = null;
        _this._disableMouseHover = false;
        _this._fields = {
            'visible': {
                type: 'string',
                icon: 'search',
                default: false,
                width: 30,
                styler: function styler(item) {
                    switch (item.visible) {
                        case 'visible':
                            return 'search search-visibility-off';
                        case 'hidden':
                            return 'search search-visibility-on';
                        case 'loading':
                            return 'search-visibility-loading';
                        case 'failed':
                            return 'search-visibility-failed';
                        default:
                            return '';
                    }
                }
            },
            'stereo': {
                columnIcon: 'search search-stereo',
                type: 'boolean',
                icon: 'search',
                yes: 'search-stereo',
                sortable: true,
                default: false,
                tooltip: T.getText('results.stereo'),
                width: 32,
                formatter: function formatter(item) {
                    switch (_typeof(item.stereo)) {
                        case 'string':
                            return item.stereo !== 'NONE';
                        case 'boolean':
                            return item.stereo;
                        default:
                            return false;
                    }
                }
            },
            'platform': {
                type: 'string',
                name: T.getText('results.satellite'),
                sortable: true,
                formatter: function formatter(item) {
                    switch (item.platform) {
                        case 'SPOT6':
                        case 'SPOT 6':
                            return item.islocal ? 'SPOT 6' : 'SPOT 6 (A)';
                        case 'SPOT7':
                        case 'SPOT 7':
                            return item.islocal ? 'SPOT 7' : 'SPOT 7 (A)';
                        case 'SPOT 5':
                            var sp5 = 'SPOT 5';
                            if (item.sensor === 'J') {
                                if (item.spot5_a_exists & item.spot5_b_exists) {
                                    sp5 = 'SPOT 5 - 2.5ms';
                                } else if (item.spot5_a_exists || item.spot5_b_exists) {
                                    sp5 = 'SPOT 5 - 5ms';
                                } else {
                                    sp5 = 'SPOT 5 - 10ms';
                                }
                            } else if (item.sensor === 'A' || item.sensor === 'B' && !item.spot5_b_exists) {
                                sp5 = 'SPOT 5 - 5pan';
                            } else if (item.sensor === 'A' && item.spot5_b_exists) {
                                sp5 = 'SPOT 5 - 2.5pan';
                            }
                            return '' + sp5 + (item.islocal ? '' : ' (A)');
                        case 'Ресурс-П1':
                        case 'Ресурс-П2':
                        case 'Ресурс-П3':
                            if (item.spot5_a_exists && !item.spot5_b_exists) {
                                return item.platform + ' pan';
                            } else if (item.spot5_b_exists) {
                                return item.platform + ' ms';
                            } else {
                                return item.platform;
                            }
                        case 'GF1':
                            switch (item.sensor) {
                                case 'A':
                                    return 'GaoFen-1 (2m)';
                                case 'B':
                                    return 'GaoFen-1 (16m)';
                                default:
                                    return 'GaoFen-1';
                            }
                        case '1A-PHR-1A':
                            return '1ATLAS (PHR-1A)';
                        case '1A-PHR-1B':
                            return '1ATLAS (PHR-1B)';
                        case '1A-SPOT-6':
                            return '1ATLAS (SP6)';
                        case '1A-SPOT-7':
                            return '1ATLAS (SP7)';
                        default:
                            return '' + (0, _Satellites.getSatelliteName)(item.platform) + (item.islocal ? ' (L)' : '');
                    }
                },
                width: 100
            },
            'cloudness': {
                type: 'float',
                name: T.getText('results.clouds'),
                sortable: true,
                formatter: function formatter(item) {
                    var value = item.cloudness;
                    return value < 0 ? '' : Math.round(value);
                },
                default: 0,
                align: 'center',
                width: 55
            },
            'tilt': {
                type: 'float',
                name: T.getText('results.angle'),
                sortable: true,
                formatter: function formatter(item) {
                    var value = item.tilt;
                    return value < 0 ? '' : Math.round(value);
                },
                default: 0,
                align: 'center',
                width: 55
            },
            'acqdate': {
                type: 'date',
                name: T.getText('results.date'),
                formatter: function formatter(item) {
                    return item.acqdate.toLocaleDateString();
                },
                sortable: true,
                width: 71
            },
            'info': {
                type: 'boolean',
                icon: 'search',
                yes: 'search-info-off',
                no: 'search-info-on',
                width: 26
            },
            'cart': {
                tooltip: T.getText('results.cart'),
                columnIcon: 'cart-add cart-add-active',
                type: 'boolean',
                icon: 'cart-add',
                yes: 'cart-add-active',
                no: 'cart-add-passive',
                width: 22
            }
        };

        _this._grid = new _DataGrid.DataGrid(_this._container, {
            fields: _this.fields,
            filter: function filter(item) {
                return Boolean(item.checked);
            },
            sortBy: { field: 'acqdate', asc: false },
            indexBy: 'gmx_id'
        });
        _this._grid.addEventListener('cell:click', _this._onCellClick);
        _this._grid.addEventListener('column:click', _this._onColumnClick);
        _this._grid.addEventListener('row:mouseover', _this._onRowMouseOver);
        _this._grid.addEventListener('row:mouseout', _this._onRowMouseOut);
        _this._grid.addEventListener('sort', _this._onSort);
        _this._stopPropagation = _this._stopPropagation.bind(_this);
        return _this;
    }

    _createClass(ResultList, [{
        key: '_stopPropagation',
        value: function _stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: 'getItemByIndex',
        value: function getItemByIndex(id) {
            return this._grid.getItemByIndex(id);
        }
    }, {
        key: '_onSort',
        value: function _onSort(e) {
            var event = document.createEvent('Event');
            event.initEvent('sort', false, false);
            event.detail = this._grid.items;
            this.dispatchEvent(event);
        }
    }, {
        key: '_onCellClick',
        value: function _onCellClick(e) {
            e.stopPropagation();
            var _e$detail = e.detail,
                row = _e$detail.row,
                cell = _e$detail.cell,
                name = _e$detail.name,
                field = _e$detail.field,
                item = _e$detail.item;

            var event = document.createEvent('Event');
            var btn = null;
            var k = 0;

            switch (name) {
                case 'cart':
                    btn = cell.querySelector('i');
                    if (btn.classList.contains('cart-add-active')) {
                        btn.classList.remove('cart-add-active');
                        btn.classList.add('cart-add-passive');
                        item.cart = false;
                    } else {
                        btn.classList.remove('cart-add-passive');
                        btn.classList.add('cart-add-active');
                        item.cart = true;
                    }

                    event.initEvent('cart', false, false);
                    event.detail = item;
                    this.dispatchEvent(event);
                    break;
                case 'visible':
                    event.initEvent('visible', false, false);
                    event.detail = item;
                    this.dispatchEvent(event);
                    break;
                case 'info':
                    var _cell$getBoundingClie = cell.getBoundingClientRect(),
                        left = _cell$getBoundingClie.left,
                        top = _cell$getBoundingClie.top;

                    var button = cell.querySelector('i');

                    event.initEvent('info', false, false);
                    event.detail = { item: item, left: left, top: top, button: button };
                    this.dispatchEvent(event);
                    break;
                default:
                    k = Object.keys(this._fields).indexOf('visible');
                    btn = row.querySelectorAll('td')[k].querySelector('i');
                    btn.classList.remove('search-visibility-on');
                    btn.classList.add('search-visibility-off');
                    item.visible = true;

                    event.initEvent('visible', false, false);
                    event.detail = item;
                    this.dispatchEvent(event);
                    break;
            }
            switch (name) {
                case 'cart':
                case 'info':
                case 'visible':
                    break;
                default:
                    event.initEvent('click', false, false);
                    event.detail = e.detail;
                    this.dispatchEvent(event);
                    break;
            }
        }
    }, {
        key: '_updateChecked',
        value: function _updateChecked(state) {
            var btn = this._grid.getCol('cart').querySelector('i');
            if (state) {
                btn.classList.remove('cart-add-passive');
                btn.classList.add('cart-add-active');
            } else {
                btn.classList.remove('cart-add-active');
                btn.classList.add('cart-add-passive');
            }
        }
    }, {
        key: '_getChecked',
        value: function _getChecked() {
            if (this._grid.items.length === 0) {
                return false;
            }
            var checked = false;
            if (this._grid.items.every(function (x) {
                return x.cart;
            })) {
                checked = true;
            } else if (this._grid.items.every(function (x) {
                return !x.cart;
            })) {
                checked = false;
            }
            return checked;
        }
    }, {
        key: '_onColumnClick',
        value: function _onColumnClick(e) {
            e.stopPropagation();
            var _e$detail2 = e.detail,
                col = _e$detail2.col,
                field = _e$detail2.field,
                name = _e$detail2.name;

            var event = document.createEvent('Event');
            switch (name) {
                case 'cart':
                    var newItems = this._grid.items.filter(function (item) {
                        return !item.cart;
                    });
                    // let state = !this._getChecked();
                    var state = true;
                    if (newItems.length + window.Catalog.favoritesList.items.length <= window.MAX_CART_SIZE) {
                        this._grid.items.forEach(function (item) {
                            item.checked = state;
                        });
                        this._grid.refresh();

                        // this._updateChecked(state);

                        event.initEvent('cart:all', false, false);
                        event.detail = { items: state ? newItems : this._grid.items, state: state };
                        this.dispatchEvent(event);
                    } else {
                        event.initEvent('cart:limit', false, false);
                        this.dispatchEvent(event);
                    }
                    break;
                default:
                    break;
            }
        }
    }, {
        key: '_onRowMouseOver',
        value: function _onRowMouseOver(e) {
            if (!this._disableMouseHover) {
                var event = document.createEvent('Event');
                event.initEvent('mouseover', false, false);
                event.detail = e.detail;
                this.dispatchEvent(event);
            }
        }
    }, {
        key: '_onRowMouseOut',
        value: function _onRowMouseOut(e) {
            if (!this._disableMouseHover) {
                var event = document.createEvent('Event');
                event.initEvent('mouseout', false, false);
                event.detail = e.detail;
                this.dispatchEvent(event);
            }
        }
    }, {
        key: 'hilite',
        value: function hilite(id) {
            this._grid.getRow(id).classList.add('hilite');
        }
    }, {
        key: 'dim',
        value: function dim(id) {
            this._grid.getRow(id).classList.remove('hilite');
        }
    }, {
        key: 'resize',
        value: function resize(total) {
            var height = this._container.querySelector('.table-list-header').getBoundingClientRect().height;
            this._container.querySelector('.table-list-body').style.maxHeight = total - height + 'px';
        }
    }, {
        key: 'refresh',
        value: function refresh() {
            this._grid.refresh();
            // this._updateChecked(this._getChecked());
            var event = document.createEvent('Event');
            event.initEvent('refreshed', false, false);
            this.dispatchEvent(event);
        }
    }, {
        key: 'scrollToRow',
        value: function scrollToRow(id) {
            this._grid.scrollToRow(id);
        }
    }, {
        key: 'enableFilter',
        value: function enableFilter(enable) {
            this._grid.filtered = enable;
        }
    }, {
        key: 'adjustWidth',
        value: function adjustWidth() {
            this._grid.adjustHeader();
        }
    }, {
        key: 'getRow',
        value: function getRow(rowId) {
            return this._grid.getRow(rowId);
        }
    }, {
        key: 'redrawItem',
        value: function redrawItem(id, item) {
            this._disableMouseHover = true;
            this._grid.redrawRow(id, item);
            this._disableMouseHover = false;
        }
    }, {
        key: 'fields',
        get: function get() {
            return this._fields;
        }
    }, {
        key: 'items',
        set: function set(value) {
            if (Array.isArray(value)) {
                this._grid.items = value;
            }
        },
        get: function get() {
            return this._grid.items;
        }
    }, {
        key: 'filteredItems',
        get: function get() {
            return this._grid.filteredItems;
        }
    }, {
        key: 'bbox',
        get: function get() {
            return this._container.getBoundingClientRect();
        }
    }, {
        key: 'filter',
        set: function set(value) {
            this._grid.filter = value;
        }
    }, {
        key: 'count',
        get: function get() {
            return this._grid.count;
        }
    }]);

    return ResultList;
}(_EventTarget2.EventTarget);

exports.ResultList = ResultList;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AuthManager = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Request = __webpack_require__(17);

var _EventTarget2 = __webpack_require__(16);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AuthManager = function (_EventTarget) {
    _inherits(AuthManager, _EventTarget);

    function AuthManager(_ref) {
        var authorizationEndpoint = _ref.authorizationEndpoint,
            userInfoEndpoint = _ref.userInfoEndpoint,
            redirectEndpointHtml = _ref.redirectEndpointHtml,
            redirectEndpointAshx = _ref.redirectEndpointAshx,
            credentialLoginEndpoint = _ref.credentialLoginEndpoint,
            clientId = _ref.clientId;

        _classCallCheck(this, AuthManager);

        // поддерживаем как минимум два события для
        // серверов ресурсов: login и logout
        var _this = _possibleConstructorReturn(this, (AuthManager.__proto__ || Object.getPrototypeOf(AuthManager)).call(this));

        _this._authorizationEndpoint = authorizationEndpoint;
        _this._userInfoEndpoint = userInfoEndpoint;
        _this._redirectEndpointHtml = redirectEndpointHtml;
        _this._redirectEndpointAshx = redirectEndpointAshx;
        _this._redirectEndpointAshx2 = redirectEndpointAshx + '/?return_url=' + location.href;
        _this._credentialLoginEndpoint = credentialLoginEndpoint;
        _this._resourceServers = [];
        _this._clientId = clientId || 1;
        return _this;
    }

    _createClass(AuthManager, [{
        key: '$getAntiCsrfToken',
        value: function $getAntiCsrfToken() {
            var cookieName = "sync";
            var re = new RegExp('.*' + cookieName + '=([^;]+).*', 'i');
            return document.cookie.replace(re, '$1');
        }
        /** Добавляет сервер ресурсов
         * Должна вызываться только из класса ResourceServer.
         * @param {ResourceServer} resourceServer
         */

    }, {
        key: '$addResourceServer',
        value: function $addResourceServer(resourceServer) {
            this._resourceServers.push(resourceServer);
        }
    }, {
        key: '_chain',
        value: function _chain(tasks, state) {
            return tasks.reduce(function (prev, next) {
                return prev.then(next);
            }, new Promise(function (resolve, reject) {
                return resolve(state);
            }));
        }
    }, {
        key: '_authorizeResourceServers',
        value: function _authorizeResourceServers() {
            var tasks = this._resourceServers.map(function (rs) {
                return function (state) {
                    return new Promise(function (resolve) {
                        rs.sendGetRequest('oAuth2/LoginDialog.ashx').then(function (response) {
                            state = state.concat(response);
                            resolve(state);
                        }).catch(function (e) {
                            return state.push(e);
                        });
                    });
                };
            });
            return this._chain(tasks, []);
        }
    }, {
        key: '_processAuthorization',
        value: function _processAuthorization(search) {
            var _this2 = this,
                _arguments = arguments;

            function parseQueryString(search) {
                var a = search.slice(1).split('&');
                var o = {};
                for (var i = 0; i < a.length; i++) {
                    var s = a[i].split('=');
                    o[s[0]] = s[1];
                }
                return o;
            }
            return new Promise(function (resolve, reject) {
                // превращаем строку с параметрами в хеш
                var params = parseQueryString(search);

                if (params.error) {
                    reject({
                        Status: 'auth',
                        Result: null,
                        Error: {
                            message: params.error
                        }
                    });
                } else {
                    (0, _Request.sendCrossDomainJSONRequest)('' + _this2._redirectEndpointAshx + search, function (resp) {
                        if (resp.Status === 'ok') {
                            resolve({
                                Status: 'ok',
                                Result: resp.Result
                            });
                        } else {
                            reject({
                                Status: resp.Status,
                                Result: null
                            });
                        }
                    }, 'CallbackName', function () {
                        reject({
                            Status: 'network',
                            Result: null,
                            Error: {
                                message: _arguments[2]
                            }
                        });
                    });
                }
            });
        }
        /** Получение информации о пользователе от AuthServer
         * @return {Function} promise(userInfo)
         */

    }, {
        key: 'getUserInfo',
        value: function getUserInfo() {
            var _this3 = this;

            if (this._getUserInfoDeferred) {
                return this._getUserInfoDeferred;
            }
            return this._getUserInfoDeferred = new Promise(function (resolve, reject) {

                function authorizationGrant(search) {
                    // удаляем айфрейм и глобальную переменную
                    setTimeout(function () {
                        delete window.authorizationGrant;
                        document.body.removeChild(document.body.querySelector('.authorizationIframe'));
                    }, 0);

                    this._processAuthorization(search).then(function (resp) {
                        return resolve(resp);
                    }, function (err) {
                        return reject(err);
                    });
                }

                // посылаем запросы на все сервера ресурсов
                // когда они все ответят ..
                _this3._authorizeResourceServers().then(function (servers) {
                    // .. формируем параметры state и scope
                    var scope = '';
                    var state = '';
                    for (var i = 0; i < servers.length; i++) {
                        var response = servers[i];
                        scope += response.Service.ServerId + ',';
                        state += response.Result.State + ',';
                    }
                    scope = scope.slice(0, -1);
                    state = state.slice(0, -1);

                    // .. и посылаем запрос на сервер авторизации
                    window.authorizationGrant = authorizationGrant.bind(_this3);
                    document.body.insertAdjacentHTML('afterbegin', '<iframe\n                    class="authorizationIframe"\n                    style="display: block !important; position: absolute; left: -99999px;"\n                    src="' + _this3._userInfoEndpoint + '/?client_id=1&redirect_uri=' + _this3._redirectEndpointHtml + '&scope=' + scope + '&state=' + state + '">\n                </iframe>');
                }).catch(function () {
                    reject({
                        Status: 'error'
                    });
                });
            });
        }
        /** Принудительное перелогинивание пользователя.
         * Пользователь должен увидеть поля для ввода
         * логина/пароля (возможно, на сервере авторизации).
         * При успешной авторизации библиотека должна
         * произвести авторизацию пользователя на всех
         * подключенных серверах ресурсов
         * и только после этого resolve promise
         * @return {Function} promise(userInfo)
         */

    }, {
        key: 'login',
        value: function login(arg) {
            var _this4 = this;

            var foreignServer = void 0;
            var iframeContainer = void 0;
            if (typeof arg === 'string') {
                // обратная совместимость
                foreignServer = arg;
            } else if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) === 'object') {
                foreignServer = arg.foreignServer;
                iframeContainer = arg.iframeContainer;
            }

            this._authorizeResourceServers().then(function (servers) {
                // .. формируем параметры state и scope
                var scope = '';
                var state = '';
                for (var i = 0; i < servers.length; i++) {
                    var response = servers[i];
                    scope += response.Service.ServerId + ',';
                    state += response.Result.State + ',';
                }
                scope = scope.slice(0, -1);
                state = state.slice(0, -1);

                var authUrl = _this4._authorizationEndpoint + '/?client_id=1&redirect_uri=' + _this4._redirectEndpointAshx2 + '&scope=' + scope + '&state=' + state;

                if (foreignServer) {
                    authUrl += '&authserver=' + foreignServer;
                }

                if (!iframeContainer) {
                    window.open(authUrl, '_self');
                } else {
                    var authorizationGrant = function authorizationGrant() {
                        window.location.reload();
                        var event = document.createEvent('Event');
                        event.initEvent('login', false, false);
                        this.dispatchEvent(event);
                    };

                    window.authorizationGrant = authorizationGrant;
                    document.body.removeChild(document.body.querySelector('.authorizationIframe'));
                    document.body.insertAdjacentHTML('afterbegin', '<iframe\n                    class="authorizationIframe"\n                    src="' + self._authorizationEndpoint + '/?client_id=1\n                        &redirect_uri=' + self._redirectEndpointHtml + '\n                        &redirect_uri_alt=' + self._redirectEndpointAshx2 + '\n                        &scope=' + scope + '\n                        &state=' + state + '">\n                </iframe>');
                }
            });
        }
        /** Залогиниться, используя логин и пароль
         * @param  {String} login
         * @param  {String} password
         * @return {Promise}
         */

    }, {
        key: 'loginWithCredentials',
        value: function loginWithCredentials(login, password) {
            var _this5 = this,
                _arguments2 = arguments;

            // отправляем ajax-запрос на Handler/Login с логином и паролем
            // После этого пользователь считается залогиненным на my.
            // Затем вызываем getUserInfo()

            return new Promise(function (resolve, reject) {
                (0, _Request.sendCrossDomainJSONRequest)(_this5._credentialLoginEndpoint + '?login=' + encodeURIComponent(login) + '&password=' + encodeURIComponent(password), function (response) {
                    if (response.Status.toLowerCase() === 'ok') {
                        _this5.getUserInfo().then(function () {
                            resolve({
                                Status: 'ok',
                                Result: _arguments2[0].Result
                            });
                        }).catch(function () {
                            reject({
                                Status: 'error',
                                Result: {
                                    Message: 'authorization error'
                                }
                            });
                        });
                    } else if (response.Status.toLowerCase() === 'auth') {
                        reject({
                            Status: 'auth',
                            Result: {
                                Message: response.Result.Message
                            }
                        });
                    } else {
                        reject({
                            Status: 'error',
                            Result: {
                                Message: 'unknown error'
                            }
                        });
                    }
                }, 'CallbackName', function () {
                    reject({
                        Status: 'network',
                        Result: {
                            Message: 'network error'
                        }
                    });
                });
            });
        }
        /** Принудительное разлогинивание пользователя.
         * В том числе и на серверах ресурсов
         * @return {Function} promise(status)
         */

    }, {
        key: 'logout',
        value: function logout() {
            var _this6 = this;

            return new Promise(function (resolve, reject) {
                var promises = [];
                for (var i = 0; i < _this6._resourceServers.length; i++) {
                    var resourceServer = _this6._resourceServers[i];
                    var promise = resourceServer.sendGetRequest('oAuth2/Logout.ashx');
                    promises.push(promise);
                }
                _this6._chain(promises, {}).then(function () {
                    if (_this6._clientId === 1) {
                        (0, _Request.sendCrossDomainJSONRequest)('http://my.kosmosnimki.ru/Handler/Logout', function (response) {
                            return resolve({ Status: 'ok' });
                        }, '', function () {
                            return reject({ Status: 'network' });
                        });
                    } else {
                        resolve({
                            Status: 'ok'
                        });
                        var event = document.createEvent('Event');
                        event.initEvent('logout', false, false);
                        _this6.dispatchEvent(event);
                    }
                }).catch(function () {
                    reject({
                        Status: 'error'
                    });
                });
            });
        }
    }]);

    return AuthManager;
}(_EventTarget2.EventTarget);

exports.AuthManager = AuthManager;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ResourceServer = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _Server2 = __webpack_require__(169);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ResourceServer = function (_Server) {
    _inherits(ResourceServer, _Server);

    function ResourceServer(authManager, _ref) {
        var id = _ref.id,
            root = _ref.root;

        _classCallCheck(this, ResourceServer);

        var _this = _possibleConstructorReturn(this, (ResourceServer.__proto__ || Object.getPrototypeOf(ResourceServer)).call(this, { root: root }));

        _this._id = id;
        _this._authManager = authManager;
        _this._authManager.$addResourceServer(_this);
        // this.sendGetRequest = this.extendRequestMethod('sendGetRequest');
        // this.sendImageRequest = this.extendRequestMethod('sendImageRequest');
        // this.sendPostRequest = this.extendRequestMethod('sendPostRequest');
        return _this;
    }
    // extendRequestMethod (requestFuncName) {
    //     return function(url, params, baseForm) {
    //         let params = params || {};
    //         params.sync = this._authManager.$getAntiCsrfToken();
    //         return new Promise((resolve, reject) => {
    //             super[requestFuncName].call(this, url, params, baseForm)
    //             .then(data => {
    //                 data.Service = { ServerId: self._id };                    
    //                 if (data.Status === 'ok') {
    //                     resolve(data);
    //                 } else {
    //                     reject(data);
    //                 }
    //             })
    //             .catch(errors => {
    //                 reject({
    //                     Status: 'error',
    //                     ErrorInfo: errors.ErrorInfo
    //                 });
    //             });
    //         });                    
    //     }
    // }


    _createClass(ResourceServer, [{
        key: 'sendGetRequest',
        value: function sendGetRequest(url, params, baseForm) {
            var _this2 = this;

            params = params || {};
            params.sync = this._authManager.$getAntiCsrfToken();
            return new Promise(function (resolve, reject) {
                _get(ResourceServer.prototype.__proto__ || Object.getPrototypeOf(ResourceServer.prototype), 'sendGetRequest', _this2).call(_this2, url, params, baseForm).then(function (data) {
                    data.Service = { ServerId: _this2._id };
                    if (data.Status === 'ok') {
                        resolve(data);
                    } else {
                        reject(data);
                    }
                }).catch(function (errors) {
                    return reject({ Status: 'error', ErrorInfo: errors.ErrorInfo });
                });
            });
        }
    }, {
        key: 'sendImageRequest',
        value: function sendImageRequest(url, params, baseForm) {
            var _this3 = this;

            params = params || {};
            params.sync = this._authManager.$getAntiCsrfToken();
            return new Promise(function (resolve, reject) {
                _get(ResourceServer.prototype.__proto__ || Object.getPrototypeOf(ResourceServer.prototype), 'sendImageRequest', _this3).call(_this3, url, params, baseForm).then(function (data) {
                    data.Service = { ServerId: _this3._id };
                    if (data.Status === 'ok') {
                        resolve(data);
                    } else {
                        reject(data);
                    }
                }).catch(function (errors) {
                    return reject({ Status: 'error', ErrorInfo: errors.ErrorInfo });
                });
            });
        }
    }, {
        key: 'sendPostRequest',
        value: function sendPostRequest(url, params, baseForm) {
            var _this4 = this;

            params = params || {};
            params.sync = this._authManager.$getAntiCsrfToken();
            return new Promise(function (resolve, reject) {
                _get(ResourceServer.prototype.__proto__ || Object.getPrototypeOf(ResourceServer.prototype), 'sendPostRequest', _this4).call(_this4, url, params, baseForm).then(function (data) {
                    data.Service = { ServerId: _this4._id };
                    if (data.Status === 'ok') {
                        resolve(data);
                    } else {
                        reject(data);
                    }
                }).catch(function (errors) {
                    return reject({ Status: 'error', ErrorInfo: errors.ErrorInfo });
                });
            });
        }
    }]);

    return ResourceServer;
}(_Server2.Server);

exports.ResourceServer = ResourceServer;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventTarget = function () {
    function EventTarget() {
        _classCallCheck(this, EventTarget);

        this.listeners = {};
    }

    _createClass(EventTarget, [{
        key: "addEventListener",
        value: function addEventListener(type, callback) {
            if (!(type in this.listeners)) {
                this.listeners[type] = [];
            }
            this.listeners[type].push(callback);
        }
    }, {
        key: "removeEventListener",
        value: function removeEventListener(type, callback) {
            if (!(type in this.listeners)) {
                return;
            }
            var stack = this.listeners[type];
            for (var i = 0, l = stack.length; i < l; i++) {
                if (stack[i] === callback) {
                    stack.splice(i, 1);
                    return this.removeEventListener(type, callback);
                }
            }
        }
    }, {
        key: "dispatchEvent",
        value: function dispatchEvent(event) {
            if (!(event.type in this.listeners)) {
                return;
            }
            var stack = this.listeners[event.type];
            // event.target = this;
            for (var i = 0, l = stack.length; i < l; i++) {
                stack[i].call(this, event);
            }
        }
    }]);

    return EventTarget;
}();

exports.EventTarget = EventTarget;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var uniqueGlobalName = function () {
    var freeid = 0;
    return function (thing) {
        var id = "gmx_unique_" + freeid++;
        window[id] = thing;
        return id;
    };
}();

/** Посылает кросс-доменный GET запрос к серверу с использованием транспорта JSONP.
 *
 * @memberOf nsGmx.Utils
 * @param {String} url URL сервера.
 * @param {Function} callback Ф-ция, которая будет вызвана при получении от сервера результата.
 * @param {String} [callbackParamName=CallbackName] Имя параметра для задания имени ф-ции ответа.
 * @param {Function} [errorCallback] Ф-ция, которая будет вызвана в случае ошибки запроса к серверу
 */
function sendCrossDomainJSONRequest(url, callback, callbackParamName, errorCallback) {
    callbackParamName = callbackParamName || 'CallbackName';

    var script = document.createElement("script");
    script.setAttribute("charset", "UTF-8");
    var callbackName = uniqueGlobalName(function (obj) {
        callback && callback(obj);
        window[callbackName] = false;
        document.getElementsByTagName("head").item(0).removeChild(script);
    });

    var sepSym = url.indexOf('?') == -1 ? '?' : '&';

    if (errorCallback) {
        script.onerror = errorCallback;
    }

    script.setAttribute("src", "" + url + sepSym + callbackParamName + "=" + callbackName + "&" + Math.random());
    document.getElementsByTagName("head").item(0).appendChild(script);
}

exports.sendCrossDomainJSONRequest = sendCrossDomainJSONRequest;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Slider = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _EventTarget2 = __webpack_require__(9);

__webpack_require__(204);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Slider = function (_EventTarget) {
    _inherits(Slider, _EventTarget);

    function Slider(container) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, Slider);

        var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this));

        _this._options = options;
        _this._options.orientation = _this._options.orientation || 'horizontal';
        _this._container = container;
        _this._container.classList.add('slider');
        _this._container.classList.add('noselect');
        _this._container.innerHTML = ['<div class="slider-bar">', '<div class="slider-tick">', '<div class="slider-tip">00</div>', '</div>', '</div>'].join('');
        _this._bar = _this._container.querySelector('.slider-bar');
        _this._tick = _this._container.querySelector('.slider-tick');
        _this._tick.classList.add('noselect');
        _this._tip = _this._container.querySelector('.slider-tip');
        var tickRect = _this._tick.getBoundingClientRect();
        _this._halfWidth = Math.round(tickRect.width / 2);
        _this._halfHeight = Math.round(tickRect.height / 2);
        _this._moving = false;
        switch (_this._options.orientation) {
            default:
            case 'horizontal':
                _this._tick.style.left = -_this._halfWidth + 'px';
                _this._startHorizontal = _this._startHorizontal.bind(_this);
                _this._moveHorizontal = _this._moveHorizontal.bind(_this);
                _this._clickHorizontal = _this._clickHorizontal.bind(_this);
                _this._tip.style.top = '-20px';
                _this._bar.addEventListener('click', _this._clickHorizontal);
                _this._tick.addEventListener('mousedown', _this._startHorizontal);
                document.addEventListener('mousemove', _this._moveHorizontal);
                break;
            case 'vertical':
                _this._tick.style.top = -_this._halfHeight + 'px';
                _this._startVertical = _this._startVertical.bind(_this);
                _this._moveVertical = _this._moveVertical.bind(_this);
                _this._clickVertical = _this._clickVertical.bind(_this);
                _this._tip.style.top = '-5px';
                _this._tip.style.left = '20px';
                _this._bar.addEventListener('click', _this._clickVertical);
                _this._tick.addEventListener('mousedown', _this._startVertical);
                document.addEventListener('mousemove', _this._moveVertical);
                break;
        }
        _this._stop = _this._stop.bind(_this);
        document.addEventListener('mouseup', _this._stop);

        var containerRect = _this._container.getBoundingClientRect();
        _this._width = containerRect.width;
        _this._height = containerRect.height;
        _this._offset = 0;
        return _this;
    }

    _createClass(Slider, [{
        key: '_clickHorizontal',
        value: function _clickHorizontal(e) {
            e.stopPropagation();
            var containerRect = this._container.getBoundingClientRect();
            var x = e.clientX - this._halfWidth - containerRect.left;
            if (x <= -this._halfWidth) {
                this._tick.style.left = -this._halfWidth + 'px';
                x = -this._halfWidth;
            } else if (x >= this._width - this._halfWidth) {
                this._tick.style.left = this._width - this._halfWidth + 'px';
                x = this._width - this._halfWidth;
            } else {
                this._tick.style.left = x + 'px';
            }

            // this.dispatchEvent (new CustomEvent('slide', {detail: {value: x + this._halfWidth }}));

            var event = document.createEvent('Event');
            event.initEvent('slide', false, false);
            event.detail = { value: x + this._halfWidth };
            this.dispatchEvent(event);
        }
    }, {
        key: '_startHorizontal',
        value: function _startHorizontal(e) {
            e.stopPropagation();
            var tickRect = this._tick.getBoundingClientRect();
            this._offset = e.clientX - tickRect.left;
            this._moving = true;
            if (this._options.useTip) {
                this._tip.style.display = 'block';
            }
        }
    }, {
        key: '_moveHorizontal',
        value: function _moveHorizontal(e) {
            e.stopPropagation();
            if (this._moving) {
                document.body.style.cursor = 'pointer';
                var containerRect = this._container.getBoundingClientRect();
                var x = e.clientX - this._offset - containerRect.left;
                if (x <= -this._halfWidth) {
                    this._tick.style.left = -this._halfWidth + 'px';
                    x = -this._halfWidth;
                } else if (x >= this._width - this._halfWidth) {
                    this._tick.style.left = this._width - this._halfWidth + 'px';
                    x = this._width - this._halfWidth;
                } else {
                    this._tick.style.left = x + 'px';
                }
                if (this._options.useTip) {
                    this._tip.style.display = 'block';
                }

                // this.dispatchEvent (new CustomEvent('slide', {detail: {value: x + this._halfWidth, tip: this._tip}}));

                var event = document.createEvent('Event');
                event.initEvent('slide', false, false);
                event.detail = { value: x + this._halfWidth, tip: this._tip };
                this.dispatchEvent(event);
            }
        }
    }, {
        key: '_clickVertical',
        value: function _clickVertical(e) {
            e.stopPropagation();
            var containerRect = this._container.getBoundingClientRect();
            var y = e.clientY - this._halfHeight - containerRect.top;
            if (y <= -this._halfHeight) {
                this._tick.style.top = -this._halfHeight + 'px';
                y = -this._halfHeight;
            } else if (y >= this._height - this._halfHeight) {
                this._tick.style.top = this._height - this._halfHeight + 'px';
                y = this._height - this._halfHeight;
            } else {
                this._tick.style.top = y + 'px';
            }

            // this.dispatchEvent (new CustomEvent('slide', {detail: {value: y + this._halfHeight}}));   

            var event = document.createEvent('Event');
            event.initEvent('slide', false, false);
            event.detail = { value: y + this._halfHeight };
            this.dispatchEvent(event);
        }
    }, {
        key: '_startVertical',
        value: function _startVertical(e) {
            e.stopPropagation();
            var tickRect = this._tick.getBoundingClientRect();
            this._offset = e.clientY - tickRect.top;
            this._moving = true;
        }
    }, {
        key: '_moveVertical',
        value: function _moveVertical(e) {
            e.stopPropagation();
            if (this._moving) {
                document.body.style.cursor = 'pointer';
                var containerRect = this._container.getBoundingClientRect();
                var y = e.clientY - this._offset - containerRect.top;
                if (y <= -this._halfHeight) {
                    this._tick.style.top = -this._halfHeight + 'px';
                    y = -this._halfHeight;
                } else if (y >= this._height - this._halfHeight) {
                    this._tick.style.top = this._height - this._halfHeight + 'px';
                    y = this._height - this._halfHeight;
                } else {
                    this._tick.style.top = y + 'px';
                }
                if (this._options.useTip) {
                    this._tip.style.display = 'block';
                }

                // this.dispatchEvent (new CustomEvent('slide', {detail: {value: y + this._halfHeight, tip: this._tip}}));

                var event = document.createEvent('Event');
                event.initEvent('slide', false, false);
                event.detail = { value: y + this._halfHeight, tip: this._tip };
                this.dispatchEvent(event);
            }
        }
    }, {
        key: '_stop',
        value: function _stop(e) {
            e.stopPropagation();
            this._moving = false;
            this._offset = 0;
            document.body.style.cursor = 'default';
            if (this._options.useTip) {
                this._tip.style.display = 'none';
            }
        }
    }, {
        key: 'value',
        get: function get() {
            var tickRect = this._tick.getBoundingClientRect();
            var containerRect = this._container.getBoundingClientRect();
            switch (this._options.orientation) {
                default:
                case 'horizontal':
                    return tickRect.left + this._halfWidth - containerRect.left;
                case 'vertical':
                    return tickRect.top + this._halfHeight - containerRect.top;
            }
        },
        set: function set(value) {
            var containerRect = this._container.getBoundingClientRect();
            switch (this._options.orientation) {
                default:
                case 'horizontal':
                    this._tick.style.left = value - this._halfWidth + 'px';
                    break;
                case 'vertical':
                    this._tick.style.top = value - this._halfHeight + 'px';
                    break;
            }
        }
    }]);

    return Slider;
}(_EventTarget2.EventTarget);

exports.Slider = Slider;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Utils = function () {
    function Utils() {
        _classCallCheck(this, Utils);
    }

    _createClass(Utils, [{
        key: 'expand',
        value: function (_expand) {
            function expand(_x, _x2, _x3) {
                return _expand.apply(this, arguments);
            }

            expand.toString = function () {
                return _expand.toString();
            };

            return expand;
        }(function (n, a, radix) {
            if (n === 0) {
                return a;
            } else {
                return expand(Math.round(n / radix), a.concat(n % radix), radix);
            }
        })
    }, {
        key: 'padLeft',
        value: function padLeft(str, sym, width) {
            return this.pad('left', str, width, sym);
        }
    }, {
        key: 'padRight',
        value: function padRight(str, sym, width) {
            return this.pad('right', str, width, sym);
        }
    }, {
        key: 'stringToArray',
        value: function stringToArray(str) {
            var arr = [];
            for (var i = 0; i < str.length; ++i) {
                arr.push(str.charAt(i));
            }
            return arr;
        }
    }, {
        key: 'pad',
        value: function pad(origin, str, width, sym) {
            var s = this.stringToArray(str);
            for (var i = 0; s.length < width; ++i) {
                if (origin === 'left') {
                    s.splice(0, 0, sym);
                } else {
                    s.push(sym);
                }
            }
            return s.join('');
        }
    }]);

    return Utils;
}();

var utils = new Utils();

exports.Utils = utils;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Afrikaans [af]
//! author : Werner Mollentze : https://github.com/wernerm

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var af = moment.defineLocale('af', {
    months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
    monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
    weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
    weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
    weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
    meridiemParse: /vm|nm/i,
    isPM : function (input) {
        return /^nm$/i.test(input);
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 12) {
            return isLower ? 'vm' : 'VM';
        } else {
            return isLower ? 'nm' : 'NM';
        }
    },
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Vandag om] LT',
        nextDay : '[Môre om] LT',
        nextWeek : 'dddd [om] LT',
        lastDay : '[Gister om] LT',
        lastWeek : '[Laas] dddd [om] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'oor %s',
        past : '%s gelede',
        s : '\'n paar sekondes',
        ss : '%d sekondes',
        m : '\'n minuut',
        mm : '%d minute',
        h : '\'n uur',
        hh : '%d ure',
        d : '\'n dag',
        dd : '%d dae',
        M : '\'n maand',
        MM : '%d maande',
        y : '\'n jaar',
        yy : '%d jaar'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
    },
    week : {
        dow : 1, // Maandag is die eerste dag van die week.
        doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
    }
});

return af;

})));


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Algeria) [ar-dz]
//! author : Noureddine LOUAHEDJ : https://github.com/noureddineme

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var arDz = moment.defineLocale('ar-dz', {
    months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        ss : '%d ثانية',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 4  // The week that contains Jan 1st is the first week of the year.
    }
});

return arDz;

})));


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Kuwait) [ar-kw]
//! author : Nusret Parlak: https://github.com/nusretparlak

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var arKw = moment.defineLocale('ar-kw', {
    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        ss : '%d ثانية',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return arKw;

})));


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Lybia) [ar-ly]
//! author : Ali Hmer: https://github.com/kikoanis

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '1',
    '2': '2',
    '3': '3',
    '4': '4',
    '5': '5',
    '6': '6',
    '7': '7',
    '8': '8',
    '9': '9',
    '0': '0'
};
var pluralForm = function (n) {
    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
};
var plurals = {
    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
};
var pluralize = function (u) {
    return function (number, withoutSuffix, string, isFuture) {
        var f = pluralForm(number),
            str = plurals[u][pluralForm(number)];
        if (f === 2) {
            str = str[withoutSuffix ? 0 : 1];
        }
        return str.replace(/%d/i, number);
    };
};
var months = [
    'يناير',
    'فبراير',
    'مارس',
    'أبريل',
    'مايو',
    'يونيو',
    'يوليو',
    'أغسطس',
    'سبتمبر',
    'أكتوبر',
    'نوفمبر',
    'ديسمبر'
];

var arLy = moment.defineLocale('ar-ly', {
    months : months,
    monthsShort : months,
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'D/\u200FM/\u200FYYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ص|م/,
    isPM : function (input) {
        return 'م' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ص';
        } else {
            return 'م';
        }
    },
    calendar : {
        sameDay: '[اليوم عند الساعة] LT',
        nextDay: '[غدًا عند الساعة] LT',
        nextWeek: 'dddd [عند الساعة] LT',
        lastDay: '[أمس عند الساعة] LT',
        lastWeek: 'dddd [عند الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'بعد %s',
        past : 'منذ %s',
        s : pluralize('s'),
        ss : pluralize('s'),
        m : pluralize('m'),
        mm : pluralize('m'),
        h : pluralize('h'),
        hh : pluralize('h'),
        d : pluralize('d'),
        dd : pluralize('d'),
        M : pluralize('M'),
        MM : pluralize('M'),
        y : pluralize('y'),
        yy : pluralize('y')
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return arLy;

})));


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Morocco) [ar-ma]
//! author : ElFadili Yassine : https://github.com/ElFadiliY
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var arMa = moment.defineLocale('ar-ma', {
    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        ss : '%d ثانية',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return arMa;

})));


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Saudi Arabia) [ar-sa]
//! author : Suhail Alkowaileet : https://github.com/xsoh

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '١',
    '2': '٢',
    '3': '٣',
    '4': '٤',
    '5': '٥',
    '6': '٦',
    '7': '٧',
    '8': '٨',
    '9': '٩',
    '0': '٠'
};
var numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0'
};

var arSa = moment.defineLocale('ar-sa', {
    months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ص|م/,
    isPM : function (input) {
        return 'م' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ص';
        } else {
            return 'م';
        }
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        ss : '%d ثانية',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    preparse: function (string) {
        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
            return numberMap[match];
        }).replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return arSa;

})));


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale  :  Arabic (Tunisia) [ar-tn]
//! author : Nader Toukabri : https://github.com/naderio

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var arTn = moment.defineLocale('ar-tn', {
    months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'في %s',
        past: 'منذ %s',
        s: 'ثوان',
        ss : '%d ثانية',
        m: 'دقيقة',
        mm: '%d دقائق',
        h: 'ساعة',
        hh: '%d ساعات',
        d: 'يوم',
        dd: '%d أيام',
        M: 'شهر',
        MM: '%d أشهر',
        y: 'سنة',
        yy: '%d سنوات'
    },
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4 // The week that contains Jan 4th is the first week of the year.
    }
});

return arTn;

})));


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic [ar]
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '١',
    '2': '٢',
    '3': '٣',
    '4': '٤',
    '5': '٥',
    '6': '٦',
    '7': '٧',
    '8': '٨',
    '9': '٩',
    '0': '٠'
};
var numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0'
};
var pluralForm = function (n) {
    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
};
var plurals = {
    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
};
var pluralize = function (u) {
    return function (number, withoutSuffix, string, isFuture) {
        var f = pluralForm(number),
            str = plurals[u][pluralForm(number)];
        if (f === 2) {
            str = str[withoutSuffix ? 0 : 1];
        }
        return str.replace(/%d/i, number);
    };
};
var months = [
    'يناير',
    'فبراير',
    'مارس',
    'أبريل',
    'مايو',
    'يونيو',
    'يوليو',
    'أغسطس',
    'سبتمبر',
    'أكتوبر',
    'نوفمبر',
    'ديسمبر'
];

var ar = moment.defineLocale('ar', {
    months : months,
    monthsShort : months,
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'D/\u200FM/\u200FYYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ص|م/,
    isPM : function (input) {
        return 'م' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ص';
        } else {
            return 'م';
        }
    },
    calendar : {
        sameDay: '[اليوم عند الساعة] LT',
        nextDay: '[غدًا عند الساعة] LT',
        nextWeek: 'dddd [عند الساعة] LT',
        lastDay: '[أمس عند الساعة] LT',
        lastWeek: 'dddd [عند الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'بعد %s',
        past : 'منذ %s',
        s : pluralize('s'),
        ss : pluralize('s'),
        m : pluralize('m'),
        mm : pluralize('m'),
        h : pluralize('h'),
        hh : pluralize('h'),
        d : pluralize('d'),
        dd : pluralize('d'),
        M : pluralize('M'),
        MM : pluralize('M'),
        y : pluralize('y'),
        yy : pluralize('y')
    },
    preparse: function (string) {
        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
            return numberMap[match];
        }).replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return ar;

})));


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Azerbaijani [az]
//! author : topchiyev : https://github.com/topchiyev

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var suffixes = {
    1: '-inci',
    5: '-inci',
    8: '-inci',
    70: '-inci',
    80: '-inci',
    2: '-nci',
    7: '-nci',
    20: '-nci',
    50: '-nci',
    3: '-üncü',
    4: '-üncü',
    100: '-üncü',
    6: '-ncı',
    9: '-uncu',
    10: '-uncu',
    30: '-uncu',
    60: '-ıncı',
    90: '-ıncı'
};

var az = moment.defineLocale('az', {
    months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
    monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
    weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
    weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
    weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[bugün saat] LT',
        nextDay : '[sabah saat] LT',
        nextWeek : '[gələn həftə] dddd [saat] LT',
        lastDay : '[dünən] LT',
        lastWeek : '[keçən həftə] dddd [saat] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s sonra',
        past : '%s əvvəl',
        s : 'birneçə saniyyə',
        ss : '%d saniyə',
        m : 'bir dəqiqə',
        mm : '%d dəqiqə',
        h : 'bir saat',
        hh : '%d saat',
        d : 'bir gün',
        dd : '%d gün',
        M : 'bir ay',
        MM : '%d ay',
        y : 'bir il',
        yy : '%d il'
    },
    meridiemParse: /gecə|səhər|gündüz|axşam/,
    isPM : function (input) {
        return /^(gündüz|axşam)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'gecə';
        } else if (hour < 12) {
            return 'səhər';
        } else if (hour < 17) {
            return 'gündüz';
        } else {
            return 'axşam';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
    ordinal : function (number) {
        if (number === 0) {  // special case for zero
            return number + '-ıncı';
        }
        var a = number % 10,
            b = number % 100 - a,
            c = number >= 100 ? 100 : null;
        return number + (suffixes[a] || suffixes[b] || suffixes[c]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return az;

})));


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Belarusian [be]
//! author : Dmitry Demidov : https://github.com/demidov91
//! author: Praleska: http://praleska.pro/
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
        'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
        'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
        'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
        'dd': 'дзень_дні_дзён',
        'MM': 'месяц_месяцы_месяцаў',
        'yy': 'год_гады_гадоў'
    };
    if (key === 'm') {
        return withoutSuffix ? 'хвіліна' : 'хвіліну';
    }
    else if (key === 'h') {
        return withoutSuffix ? 'гадзіна' : 'гадзіну';
    }
    else {
        return number + ' ' + plural(format[key], +number);
    }
}

var be = moment.defineLocale('be', {
    months : {
        format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
        standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
    },
    monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
    weekdays : {
        format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
        standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
        isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
    },
    weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
    weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY г.',
        LLL : 'D MMMM YYYY г., HH:mm',
        LLLL : 'dddd, D MMMM YYYY г., HH:mm'
    },
    calendar : {
        sameDay: '[Сёння ў] LT',
        nextDay: '[Заўтра ў] LT',
        lastDay: '[Учора ў] LT',
        nextWeek: function () {
            return '[У] dddd [ў] LT';
        },
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                    return '[У мінулую] dddd [ў] LT';
                case 1:
                case 2:
                case 4:
                    return '[У мінулы] dddd [ў] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'праз %s',
        past : '%s таму',
        s : 'некалькі секунд',
        m : relativeTimeWithPlural,
        mm : relativeTimeWithPlural,
        h : relativeTimeWithPlural,
        hh : relativeTimeWithPlural,
        d : 'дзень',
        dd : relativeTimeWithPlural,
        M : 'месяц',
        MM : relativeTimeWithPlural,
        y : 'год',
        yy : relativeTimeWithPlural
    },
    meridiemParse: /ночы|раніцы|дня|вечара/,
    isPM : function (input) {
        return /^(дня|вечара)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ночы';
        } else if (hour < 12) {
            return 'раніцы';
        } else if (hour < 17) {
            return 'дня';
        } else {
            return 'вечара';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'M':
            case 'd':
            case 'DDD':
            case 'w':
            case 'W':
                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
            case 'D':
                return number + '-га';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return be;

})));


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bulgarian [bg]
//! author : Krasen Borisov : https://github.com/kraz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var bg = moment.defineLocale('bg', {
    months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
    monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
    weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
    weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'D.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY H:mm',
        LLLL : 'dddd, D MMMM YYYY H:mm'
    },
    calendar : {
        sameDay : '[Днес в] LT',
        nextDay : '[Утре в] LT',
        nextWeek : 'dddd [в] LT',
        lastDay : '[Вчера в] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 6:
                    return '[В изминалата] dddd [в] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[В изминалия] dddd [в] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'след %s',
        past : 'преди %s',
        s : 'няколко секунди',
        ss : '%d секунди',
        m : 'минута',
        mm : '%d минути',
        h : 'час',
        hh : '%d часа',
        d : 'ден',
        dd : '%d дни',
        M : 'месец',
        MM : '%d месеца',
        y : 'година',
        yy : '%d години'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
    ordinal : function (number) {
        var lastDigit = number % 10,
            last2Digits = number % 100;
        if (number === 0) {
            return number + '-ев';
        } else if (last2Digits === 0) {
            return number + '-ен';
        } else if (last2Digits > 10 && last2Digits < 20) {
            return number + '-ти';
        } else if (lastDigit === 1) {
            return number + '-ви';
        } else if (lastDigit === 2) {
            return number + '-ри';
        } else if (lastDigit === 7 || lastDigit === 8) {
            return number + '-ми';
        } else {
            return number + '-ти';
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return bg;

})));


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bambara [bm]
//! author : Estelle Comment : https://github.com/estellecomment

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

// Language contact person : Abdoufata Kane : https://github.com/abdoufata

var bm = moment.defineLocale('bm', {
    months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
    monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
    weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
    weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
    weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'MMMM [tile] D [san] YYYY',
        LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
        LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
    },
    calendar : {
        sameDay : '[Bi lɛrɛ] LT',
        nextDay : '[Sini lɛrɛ] LT',
        nextWeek : 'dddd [don lɛrɛ] LT',
        lastDay : '[Kunu lɛrɛ] LT',
        lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s kɔnɔ',
        past : 'a bɛ %s bɔ',
        s : 'sanga dama dama',
        ss : 'sekondi %d',
        m : 'miniti kelen',
        mm : 'miniti %d',
        h : 'lɛrɛ kelen',
        hh : 'lɛrɛ %d',
        d : 'tile kelen',
        dd : 'tile %d',
        M : 'kalo kelen',
        MM : 'kalo %d',
        y : 'san kelen',
        yy : 'san %d'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return bm;

})));


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bengali [bn]
//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '১',
    '2': '২',
    '3': '৩',
    '4': '৪',
    '5': '৫',
    '6': '৬',
    '7': '৭',
    '8': '৮',
    '9': '৯',
    '0': '০'
};
var numberMap = {
    '১': '1',
    '২': '2',
    '৩': '3',
    '৪': '4',
    '৫': '5',
    '৬': '6',
    '৭': '7',
    '৮': '8',
    '৯': '9',
    '০': '0'
};

var bn = moment.defineLocale('bn', {
    months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
    monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
    weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
    weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
    weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
    longDateFormat : {
        LT : 'A h:mm সময়',
        LTS : 'A h:mm:ss সময়',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm সময়',
        LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
    },
    calendar : {
        sameDay : '[আজ] LT',
        nextDay : '[আগামীকাল] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[গতকাল] LT',
        lastWeek : '[গত] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s পরে',
        past : '%s আগে',
        s : 'কয়েক সেকেন্ড',
        ss : '%d সেকেন্ড',
        m : 'এক মিনিট',
        mm : '%d মিনিট',
        h : 'এক ঘন্টা',
        hh : '%d ঘন্টা',
        d : 'এক দিন',
        dd : '%d দিন',
        M : 'এক মাস',
        MM : '%d মাস',
        y : 'এক বছর',
        yy : '%d বছর'
    },
    preparse: function (string) {
        return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if ((meridiem === 'রাত' && hour >= 4) ||
                (meridiem === 'দুপুর' && hour < 5) ||
                meridiem === 'বিকাল') {
            return hour + 12;
        } else {
            return hour;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'রাত';
        } else if (hour < 10) {
            return 'সকাল';
        } else if (hour < 17) {
            return 'দুপুর';
        } else if (hour < 20) {
            return 'বিকাল';
        } else {
            return 'রাত';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return bn;

})));


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tibetan [bo]
//! author : Thupten N. Chakrishar : https://github.com/vajradog

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '༡',
    '2': '༢',
    '3': '༣',
    '4': '༤',
    '5': '༥',
    '6': '༦',
    '7': '༧',
    '8': '༨',
    '9': '༩',
    '0': '༠'
};
var numberMap = {
    '༡': '1',
    '༢': '2',
    '༣': '3',
    '༤': '4',
    '༥': '5',
    '༦': '6',
    '༧': '7',
    '༨': '8',
    '༩': '9',
    '༠': '0'
};

var bo = moment.defineLocale('bo', {
    months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
    monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
    weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
    weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
    weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm',
        LLLL : 'dddd, D MMMM YYYY, A h:mm'
    },
    calendar : {
        sameDay : '[དི་རིང] LT',
        nextDay : '[སང་ཉིན] LT',
        nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
        lastDay : '[ཁ་སང] LT',
        lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ལ་',
        past : '%s སྔན་ལ',
        s : 'ལམ་སང',
        ss : '%d སྐར་ཆ།',
        m : 'སྐར་མ་གཅིག',
        mm : '%d སྐར་མ',
        h : 'ཆུ་ཚོད་གཅིག',
        hh : '%d ཆུ་ཚོད',
        d : 'ཉིན་གཅིག',
        dd : '%d ཉིན་',
        M : 'ཟླ་བ་གཅིག',
        MM : '%d ཟླ་བ',
        y : 'ལོ་གཅིག',
        yy : '%d ལོ'
    },
    preparse: function (string) {
        return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                (meridiem === 'ཉིན་གུང' && hour < 5) ||
                meridiem === 'དགོང་དག') {
            return hour + 12;
        } else {
            return hour;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'མཚན་མོ';
        } else if (hour < 10) {
            return 'ཞོགས་ཀས';
        } else if (hour < 17) {
            return 'ཉིན་གུང';
        } else if (hour < 20) {
            return 'དགོང་དག';
        } else {
            return 'མཚན་མོ';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return bo;

})));


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Breton [br]
//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function relativeTimeWithMutation(number, withoutSuffix, key) {
    var format = {
        'mm': 'munutenn',
        'MM': 'miz',
        'dd': 'devezh'
    };
    return number + ' ' + mutation(format[key], number);
}
function specialMutationForYears(number) {
    switch (lastNumber(number)) {
        case 1:
        case 3:
        case 4:
        case 5:
        case 9:
            return number + ' bloaz';
        default:
            return number + ' vloaz';
    }
}
function lastNumber(number) {
    if (number > 9) {
        return lastNumber(number % 10);
    }
    return number;
}
function mutation(text, number) {
    if (number === 2) {
        return softMutation(text);
    }
    return text;
}
function softMutation(text) {
    var mutationTable = {
        'm': 'v',
        'b': 'v',
        'd': 'z'
    };
    if (mutationTable[text.charAt(0)] === undefined) {
        return text;
    }
    return mutationTable[text.charAt(0)] + text.substring(1);
}

var br = moment.defineLocale('br', {
    months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
    monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
    weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
    weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
    weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'h[e]mm A',
        LTS : 'h[e]mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D [a viz] MMMM YYYY',
        LLL : 'D [a viz] MMMM YYYY h[e]mm A',
        LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
    },
    calendar : {
        sameDay : '[Hiziv da] LT',
        nextDay : '[Warc\'hoazh da] LT',
        nextWeek : 'dddd [da] LT',
        lastDay : '[Dec\'h da] LT',
        lastWeek : 'dddd [paset da] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'a-benn %s',
        past : '%s \'zo',
        s : 'un nebeud segondennoù',
        ss : '%d eilenn',
        m : 'ur vunutenn',
        mm : relativeTimeWithMutation,
        h : 'un eur',
        hh : '%d eur',
        d : 'un devezh',
        dd : relativeTimeWithMutation,
        M : 'ur miz',
        MM : relativeTimeWithMutation,
        y : 'ur bloaz',
        yy : specialMutationForYears
    },
    dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
    ordinal : function (number) {
        var output = (number === 1) ? 'añ' : 'vet';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return br;

})));


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bosnian [bs]
//! author : Nedim Cholich : https://github.com/frontyard
//! based on (hr) translation by Bojan Marković

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
        case 'ss':
            if (number === 1) {
                result += 'sekunda';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'sekunde';
            } else {
                result += 'sekundi';
            }
            return result;
        case 'm':
            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
        case 'mm':
            if (number === 1) {
                result += 'minuta';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'minute';
            } else {
                result += 'minuta';
            }
            return result;
        case 'h':
            return withoutSuffix ? 'jedan sat' : 'jednog sata';
        case 'hh':
            if (number === 1) {
                result += 'sat';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'sata';
            } else {
                result += 'sati';
            }
            return result;
        case 'dd':
            if (number === 1) {
                result += 'dan';
            } else {
                result += 'dana';
            }
            return result;
        case 'MM':
            if (number === 1) {
                result += 'mjesec';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'mjeseca';
            } else {
                result += 'mjeseci';
            }
            return result;
        case 'yy':
            if (number === 1) {
                result += 'godina';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'godine';
            } else {
                result += 'godina';
            }
            return result;
    }
}

var bs = moment.defineLocale('bs', {
    months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[danas u] LT',
        nextDay  : '[sutra u] LT',
        nextWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedjelju] [u] LT';
                case 3:
                    return '[u] [srijedu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[jučer u] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                    return '[prošlu] dddd [u] LT';
                case 6:
                    return '[prošle] [subote] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[prošli] dddd [u] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'prije %s',
        s      : 'par sekundi',
        ss     : translate,
        m      : translate,
        mm     : translate,
        h      : translate,
        hh     : translate,
        d      : 'dan',
        dd     : translate,
        M      : 'mjesec',
        MM     : translate,
        y      : 'godinu',
        yy     : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return bs;

})));


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Catalan [ca]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ca = moment.defineLocale('ca', {
    months : {
        standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
        format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
        isFormat: /D[oD]?(\s)+MMMM/
    },
    monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
    monthsParseExact : true,
    weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
    weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
    weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM [de] YYYY',
        ll : 'D MMM YYYY',
        LLL : 'D MMMM [de] YYYY [a les] H:mm',
        lll : 'D MMM YYYY, H:mm',
        LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
        llll : 'ddd D MMM YYYY, H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        nextDay : function () {
            return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        lastDay : function () {
            return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'd\'aquí %s',
        past : 'fa %s',
        s : 'uns segons',
        ss : '%d segons',
        m : 'un minut',
        mm : '%d minuts',
        h : 'una hora',
        hh : '%d hores',
        d : 'un dia',
        dd : '%d dies',
        M : 'un mes',
        MM : '%d mesos',
        y : 'un any',
        yy : '%d anys'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
    ordinal : function (number, period) {
        var output = (number === 1) ? 'r' :
            (number === 2) ? 'n' :
            (number === 3) ? 'r' :
            (number === 4) ? 't' : 'è';
        if (period === 'w' || period === 'W') {
            output = 'a';
        }
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ca;

})));


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Czech [cs]
//! author : petrbela : https://github.com/petrbela

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');
var monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
function plural(n) {
    return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':  // a few seconds / in a few seconds / a few seconds ago
            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'sekundy' : 'sekund');
            } else {
                return result + 'sekundami';
            }
            break;
        case 'm':  // a minute / in a minute / a minute ago
            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'minuty' : 'minut');
            } else {
                return result + 'minutami';
            }
            break;
        case 'h':  // an hour / in an hour / an hour ago
            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
        case 'hh': // 9 hours / in 9 hours / 9 hours ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'hodiny' : 'hodin');
            } else {
                return result + 'hodinami';
            }
            break;
        case 'd':  // a day / in a day / a day ago
            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
        case 'dd': // 9 days / in 9 days / 9 days ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'dny' : 'dní');
            } else {
                return result + 'dny';
            }
            break;
        case 'M':  // a month / in a month / a month ago
            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
        case 'MM': // 9 months / in 9 months / 9 months ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'měsíce' : 'měsíců');
            } else {
                return result + 'měsíci';
            }
            break;
        case 'y':  // a year / in a year / a year ago
            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
        case 'yy': // 9 years / in 9 years / 9 years ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'roky' : 'let');
            } else {
                return result + 'lety';
            }
            break;
    }
}

var cs = moment.defineLocale('cs', {
    months : months,
    monthsShort : monthsShort,
    monthsParse : (function (months, monthsShort) {
        var i, _monthsParse = [];
        for (i = 0; i < 12; i++) {
            // use custom parser to solve problem with July (červenec)
            _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
        }
        return _monthsParse;
    }(months, monthsShort)),
    shortMonthsParse : (function (monthsShort) {
        var i, _shortMonthsParse = [];
        for (i = 0; i < 12; i++) {
            _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
        }
        return _shortMonthsParse;
    }(monthsShort)),
    longMonthsParse : (function (months) {
        var i, _longMonthsParse = [];
        for (i = 0; i < 12; i++) {
            _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
        }
        return _longMonthsParse;
    }(months)),
    weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
    weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
    weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
    longDateFormat : {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd D. MMMM YYYY H:mm',
        l : 'D. M. YYYY'
    },
    calendar : {
        sameDay: '[dnes v] LT',
        nextDay: '[zítra v] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[v neděli v] LT';
                case 1:
                case 2:
                    return '[v] dddd [v] LT';
                case 3:
                    return '[ve středu v] LT';
                case 4:
                    return '[ve čtvrtek v] LT';
                case 5:
                    return '[v pátek v] LT';
                case 6:
                    return '[v sobotu v] LT';
            }
        },
        lastDay: '[včera v] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[minulou neděli v] LT';
                case 1:
                case 2:
                    return '[minulé] dddd [v] LT';
                case 3:
                    return '[minulou středu v] LT';
                case 4:
                case 5:
                    return '[minulý] dddd [v] LT';
                case 6:
                    return '[minulou sobotu v] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'za %s',
        past : 'před %s',
        s : translate,
        ss : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse : /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return cs;

})));


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chuvash [cv]
//! author : Anatoly Mironov : https://github.com/mirontoli

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var cv = moment.defineLocale('cv', {
    months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
    monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
    weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
    weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
    weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
        LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
        LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
    },
    calendar : {
        sameDay: '[Паян] LT [сехетре]',
        nextDay: '[Ыран] LT [сехетре]',
        lastDay: '[Ӗнер] LT [сехетре]',
        nextWeek: '[Ҫитес] dddd LT [сехетре]',
        lastWeek: '[Иртнӗ] dddd LT [сехетре]',
        sameElse: 'L'
    },
    relativeTime : {
        future : function (output) {
            var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
            return output + affix;
        },
        past : '%s каялла',
        s : 'пӗр-ик ҫеккунт',
        ss : '%d ҫеккунт',
        m : 'пӗр минут',
        mm : '%d минут',
        h : 'пӗр сехет',
        hh : '%d сехет',
        d : 'пӗр кун',
        dd : '%d кун',
        M : 'пӗр уйӑх',
        MM : '%d уйӑх',
        y : 'пӗр ҫул',
        yy : '%d ҫул'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
    ordinal : '%d-мӗш',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return cv;

})));


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Welsh [cy]
//! author : Robert Allen : https://github.com/robgallen
//! author : https://github.com/ryangreaves

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var cy = moment.defineLocale('cy', {
    months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
    monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
    weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
    weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
    weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
    weekdaysParseExact : true,
    // time formats are the same as en-gb
    longDateFormat: {
        LT: 'HH:mm',
        LTS : 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd, D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[Heddiw am] LT',
        nextDay: '[Yfory am] LT',
        nextWeek: 'dddd [am] LT',
        lastDay: '[Ddoe am] LT',
        lastWeek: 'dddd [diwethaf am] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'mewn %s',
        past: '%s yn ôl',
        s: 'ychydig eiliadau',
        ss: '%d eiliad',
        m: 'munud',
        mm: '%d munud',
        h: 'awr',
        hh: '%d awr',
        d: 'diwrnod',
        dd: '%d diwrnod',
        M: 'mis',
        MM: '%d mis',
        y: 'blwyddyn',
        yy: '%d flynedd'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
    // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
    ordinal: function (number) {
        var b = number,
            output = '',
            lookup = [
                '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
            ];
        if (b > 20) {
            if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                output = 'fed'; // not 30ain, 70ain or 90ain
            } else {
                output = 'ain';
            }
        } else if (b > 0) {
            output = lookup[b];
        }
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return cy;

})));


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Danish [da]
//! author : Ulrik Nielsen : https://github.com/mrbase

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var da = moment.defineLocale('da', {
    months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
    weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH:mm',
        LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
    },
    calendar : {
        sameDay : '[i dag kl.] LT',
        nextDay : '[i morgen kl.] LT',
        nextWeek : 'på dddd [kl.] LT',
        lastDay : '[i går kl.] LT',
        lastWeek : '[i] dddd[s kl.] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : '%s siden',
        s : 'få sekunder',
        ss : '%d sekunder',
        m : 'et minut',
        mm : '%d minutter',
        h : 'en time',
        hh : '%d timer',
        d : 'en dag',
        dd : '%d dage',
        M : 'en måned',
        MM : '%d måneder',
        y : 'et år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return da;

})));


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Austria) [de-at]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Martin Groller : https://github.com/MadMG
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eine Minute', 'einer Minute'],
        'h': ['eine Stunde', 'einer Stunde'],
        'd': ['ein Tag', 'einem Tag'],
        'dd': [number + ' Tage', number + ' Tagen'],
        'M': ['ein Monat', 'einem Monat'],
        'MM': [number + ' Monate', number + ' Monaten'],
        'y': ['ein Jahr', 'einem Jahr'],
        'yy': [number + ' Jahre', number + ' Jahren']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var deAt = moment.defineLocale('de-at', {
    months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH:mm',
        LLLL : 'dddd, D. MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[heute um] LT [Uhr]',
        sameElse: 'L',
        nextDay: '[morgen um] LT [Uhr]',
        nextWeek: 'dddd [um] LT [Uhr]',
        lastDay: '[gestern um] LT [Uhr]',
        lastWeek: '[letzten] dddd [um] LT [Uhr]'
    },
    relativeTime : {
        future : 'in %s',
        past : 'vor %s',
        s : 'ein paar Sekunden',
        ss : '%d Sekunden',
        m : processRelativeTime,
        mm : '%d Minuten',
        h : processRelativeTime,
        hh : '%d Stunden',
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return deAt;

})));


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Switzerland) [de-ch]
//! author : sschueller : https://github.com/sschueller

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


// based on: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#

function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eine Minute', 'einer Minute'],
        'h': ['eine Stunde', 'einer Stunde'],
        'd': ['ein Tag', 'einem Tag'],
        'dd': [number + ' Tage', number + ' Tagen'],
        'M': ['ein Monat', 'einem Monat'],
        'MM': [number + ' Monate', number + ' Monaten'],
        'y': ['ein Jahr', 'einem Jahr'],
        'yy': [number + ' Jahre', number + ' Jahren']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var deCh = moment.defineLocale('de-ch', {
    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
    weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH:mm',
        LLLL : 'dddd, D. MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[heute um] LT [Uhr]',
        sameElse: 'L',
        nextDay: '[morgen um] LT [Uhr]',
        nextWeek: 'dddd [um] LT [Uhr]',
        lastDay: '[gestern um] LT [Uhr]',
        lastWeek: '[letzten] dddd [um] LT [Uhr]'
    },
    relativeTime : {
        future : 'in %s',
        past : 'vor %s',
        s : 'ein paar Sekunden',
        ss : '%d Sekunden',
        m : processRelativeTime,
        mm : '%d Minuten',
        h : processRelativeTime,
        hh : '%d Stunden',
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return deCh;

})));


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German [de]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eine Minute', 'einer Minute'],
        'h': ['eine Stunde', 'einer Stunde'],
        'd': ['ein Tag', 'einem Tag'],
        'dd': [number + ' Tage', number + ' Tagen'],
        'M': ['ein Monat', 'einem Monat'],
        'MM': [number + ' Monate', number + ' Monaten'],
        'y': ['ein Jahr', 'einem Jahr'],
        'yy': [number + ' Jahre', number + ' Jahren']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var de = moment.defineLocale('de', {
    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH:mm',
        LLLL : 'dddd, D. MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[heute um] LT [Uhr]',
        sameElse: 'L',
        nextDay: '[morgen um] LT [Uhr]',
        nextWeek: 'dddd [um] LT [Uhr]',
        lastDay: '[gestern um] LT [Uhr]',
        lastWeek: '[letzten] dddd [um] LT [Uhr]'
    },
    relativeTime : {
        future : 'in %s',
        past : 'vor %s',
        s : 'ein paar Sekunden',
        ss : '%d Sekunden',
        m : processRelativeTime,
        mm : '%d Minuten',
        h : processRelativeTime,
        hh : '%d Stunden',
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return de;

})));


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maldivian [dv]
//! author : Jawish Hameed : https://github.com/jawish

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = [
    'ޖެނުއަރީ',
    'ފެބްރުއަރީ',
    'މާރިޗު',
    'އޭޕްރީލު',
    'މޭ',
    'ޖޫން',
    'ޖުލައި',
    'އޯގަސްޓު',
    'ސެޕްޓެމްބަރު',
    'އޮކްޓޯބަރު',
    'ނޮވެމްބަރު',
    'ޑިސެމްބަރު'
];
var weekdays = [
    'އާދިއްތަ',
    'ހޯމަ',
    'އަންގާރަ',
    'ބުދަ',
    'ބުރާސްފަތި',
    'ހުކުރު',
    'ހޮނިހިރު'
];

var dv = moment.defineLocale('dv', {
    months : months,
    monthsShort : months,
    weekdays : weekdays,
    weekdaysShort : weekdays,
    weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
    longDateFormat : {

        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'D/M/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /މކ|މފ/,
    isPM : function (input) {
        return 'މފ' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'މކ';
        } else {
            return 'މފ';
        }
    },
    calendar : {
        sameDay : '[މިއަދު] LT',
        nextDay : '[މާދަމާ] LT',
        nextWeek : 'dddd LT',
        lastDay : '[އިއްޔެ] LT',
        lastWeek : '[ފާއިތުވި] dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ތެރޭގައި %s',
        past : 'ކުރިން %s',
        s : 'ސިކުންތުކޮޅެއް',
        ss : 'd% ސިކުންތު',
        m : 'މިނިޓެއް',
        mm : 'މިނިޓު %d',
        h : 'ގަޑިއިރެއް',
        hh : 'ގަޑިއިރު %d',
        d : 'ދުވަހެއް',
        dd : 'ދުވަސް %d',
        M : 'މަހެއް',
        MM : 'މަސް %d',
        y : 'އަހަރެއް',
        yy : 'އަހަރު %d'
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/,/g, '،');
    },
    week : {
        dow : 7,  // Sunday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return dv;

})));


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Greek [el]
//! author : Aggelos Karalias : https://github.com/mehiel

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

function isFunction(input) {
    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
}


var el = moment.defineLocale('el', {
    monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
    monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
    months : function (momentToFormat, format) {
        if (!momentToFormat) {
            return this._monthsNominativeEl;
        } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
            return this._monthsGenitiveEl[momentToFormat.month()];
        } else {
            return this._monthsNominativeEl[momentToFormat.month()];
        }
    },
    monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
    weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
    weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
    weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'μμ' : 'ΜΜ';
        } else {
            return isLower ? 'πμ' : 'ΠΜ';
        }
    },
    isPM : function (input) {
        return ((input + '').toLowerCase()[0] === 'μ');
    },
    meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendarEl : {
        sameDay : '[Σήμερα {}] LT',
        nextDay : '[Αύριο {}] LT',
        nextWeek : 'dddd [{}] LT',
        lastDay : '[Χθες {}] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 6:
                    return '[το προηγούμενο] dddd [{}] LT';
                default:
                    return '[την προηγούμενη] dddd [{}] LT';
            }
        },
        sameElse : 'L'
    },
    calendar : function (key, mom) {
        var output = this._calendarEl[key],
            hours = mom && mom.hours();
        if (isFunction(output)) {
            output = output.apply(mom);
        }
        return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
    },
    relativeTime : {
        future : 'σε %s',
        past : '%s πριν',
        s : 'λίγα δευτερόλεπτα',
        ss : '%d δευτερόλεπτα',
        m : 'ένα λεπτό',
        mm : '%d λεπτά',
        h : 'μία ώρα',
        hh : '%d ώρες',
        d : 'μία μέρα',
        dd : '%d μέρες',
        M : 'ένας μήνας',
        MM : '%d μήνες',
        y : 'ένας χρόνος',
        yy : '%d χρόνια'
    },
    dayOfMonthOrdinalParse: /\d{1,2}η/,
    ordinal: '%dη',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4st is the first week of the year.
    }
});

return el;

})));


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Australia) [en-au]
//! author : Jared Morse : https://github.com/jarcoal

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var enAu = moment.defineLocale('en-au', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        ss : '%d seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enAu;

})));


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Canada) [en-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var enCa = moment.defineLocale('en-ca', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'YYYY-MM-DD',
        LL : 'MMMM D, YYYY',
        LLL : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        ss : '%d seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    }
});

return enCa;

})));


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (United Kingdom) [en-gb]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var enGb = moment.defineLocale('en-gb', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        ss : '%d seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enGb;

})));


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Ireland) [en-ie]
//! author : Chris Cartlidge : https://github.com/chriscartlidge

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var enIe = moment.defineLocale('en-ie', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        ss : '%d seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enIe;

})));


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (New Zealand) [en-nz]
//! author : Luke McGregor : https://github.com/lukemcgregor

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var enNz = moment.defineLocale('en-nz', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        ss : '%d seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enNz;

})));


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Esperanto [eo]
//! author : Colin Dean : https://github.com/colindean
//! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
//! comment : miestasmia corrected the translation by colindean

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var eo = moment.defineLocale('eo', {
    months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
    weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
    weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
    weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'D[-a de] MMMM, YYYY',
        LLL : 'D[-a de] MMMM, YYYY HH:mm',
        LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
    },
    meridiemParse: /[ap]\.t\.m/i,
    isPM: function (input) {
        return input.charAt(0).toLowerCase() === 'p';
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'p.t.m.' : 'P.T.M.';
        } else {
            return isLower ? 'a.t.m.' : 'A.T.M.';
        }
    },
    calendar : {
        sameDay : '[Hodiaŭ je] LT',
        nextDay : '[Morgaŭ je] LT',
        nextWeek : 'dddd [je] LT',
        lastDay : '[Hieraŭ je] LT',
        lastWeek : '[pasinta] dddd [je] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'post %s',
        past : 'antaŭ %s',
        s : 'sekundoj',
        ss : '%d sekundoj',
        m : 'minuto',
        mm : '%d minutoj',
        h : 'horo',
        hh : '%d horoj',
        d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
        dd : '%d tagoj',
        M : 'monato',
        MM : '%d monatoj',
        y : 'jaro',
        yy : '%d jaroj'
    },
    dayOfMonthOrdinalParse: /\d{1,2}a/,
    ordinal : '%da',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return eo;

})));


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (Dominican Republic) [es-do]

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

var esDo = moment.defineLocale('es-do', {
    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortDot;
        } else if (/-MMM-/.test(format)) {
            return monthsShort[m.month()];
        } else {
            return monthsShortDot[m.month()];
        }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY h:mm A',
        LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
    },
    calendar : {
        sameDay : function () {
            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextDay : function () {
            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastDay : function () {
            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'en %s',
        past : 'hace %s',
        s : 'unos segundos',
        ss : '%d segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'una hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un año',
        yy : '%d años'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return esDo;

})));


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (United States) [es-us]
//! author : bustta : https://github.com/bustta

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

var esUs = moment.defineLocale('es-us', {
    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortDot;
        } else if (/-MMM-/.test(format)) {
            return monthsShort[m.month()];
        } else {
            return monthsShortDot[m.month()];
        }
    },
    monthsParseExact : true,
    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'MM/DD/YYYY',
        LL : 'MMMM [de] D [de] YYYY',
        LLL : 'MMMM [de] D [de] YYYY h:mm A',
        LLLL : 'dddd, MMMM [de] D [de] YYYY h:mm A'
    },
    calendar : {
        sameDay : function () {
            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextDay : function () {
            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastDay : function () {
            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'en %s',
        past : 'hace %s',
        s : 'unos segundos',
        ss : '%d segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'una hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un año',
        yy : '%d años'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return esUs;

})));


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish [es]
//! author : Julio Napurí : https://github.com/julionc

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

var es = moment.defineLocale('es', {
    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortDot;
        } else if (/-MMM-/.test(format)) {
            return monthsShort[m.month()];
        } else {
            return monthsShortDot[m.month()];
        }
    },
    monthsRegex : monthsRegex,
    monthsShortRegex : monthsRegex,
    monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,
    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY H:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextDay : function () {
            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastDay : function () {
            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'en %s',
        past : 'hace %s',
        s : 'unos segundos',
        ss : '%d segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'una hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un año',
        yy : '%d años'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return es;

})));


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Estonian [et]
//! author : Henry Kehlmann : https://github.com/madhenry
//! improvements : Illimar Tambek : https://github.com/ragulka

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
        'ss': [number + 'sekundi', number + 'sekundit'],
        'm' : ['ühe minuti', 'üks minut'],
        'mm': [number + ' minuti', number + ' minutit'],
        'h' : ['ühe tunni', 'tund aega', 'üks tund'],
        'hh': [number + ' tunni', number + ' tundi'],
        'd' : ['ühe päeva', 'üks päev'],
        'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
        'MM': [number + ' kuu', number + ' kuud'],
        'y' : ['ühe aasta', 'aasta', 'üks aasta'],
        'yy': [number + ' aasta', number + ' aastat']
    };
    if (withoutSuffix) {
        return format[key][2] ? format[key][2] : format[key][1];
    }
    return isFuture ? format[key][0] : format[key][1];
}

var et = moment.defineLocale('et', {
    months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
    monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
    weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
    weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
    weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
    longDateFormat : {
        LT   : 'H:mm',
        LTS : 'H:mm:ss',
        L    : 'DD.MM.YYYY',
        LL   : 'D. MMMM YYYY',
        LLL  : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[Täna,] LT',
        nextDay  : '[Homme,] LT',
        nextWeek : '[Järgmine] dddd LT',
        lastDay  : '[Eile,] LT',
        lastWeek : '[Eelmine] dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s pärast',
        past   : '%s tagasi',
        s      : processRelativeTime,
        ss     : processRelativeTime,
        m      : processRelativeTime,
        mm     : processRelativeTime,
        h      : processRelativeTime,
        hh     : processRelativeTime,
        d      : processRelativeTime,
        dd     : '%d päeva',
        M      : processRelativeTime,
        MM     : processRelativeTime,
        y      : processRelativeTime,
        yy     : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return et;

})));


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Basque [eu]
//! author : Eneko Illarramendi : https://github.com/eillarra

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var eu = moment.defineLocale('eu', {
    months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
    monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
    monthsParseExact : true,
    weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
    weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
    weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'YYYY[ko] MMMM[ren] D[a]',
        LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
        LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
        l : 'YYYY-M-D',
        ll : 'YYYY[ko] MMM D[a]',
        lll : 'YYYY[ko] MMM D[a] HH:mm',
        llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
    },
    calendar : {
        sameDay : '[gaur] LT[etan]',
        nextDay : '[bihar] LT[etan]',
        nextWeek : 'dddd LT[etan]',
        lastDay : '[atzo] LT[etan]',
        lastWeek : '[aurreko] dddd LT[etan]',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s barru',
        past : 'duela %s',
        s : 'segundo batzuk',
        ss : '%d segundo',
        m : 'minutu bat',
        mm : '%d minutu',
        h : 'ordu bat',
        hh : '%d ordu',
        d : 'egun bat',
        dd : '%d egun',
        M : 'hilabete bat',
        MM : '%d hilabete',
        y : 'urte bat',
        yy : '%d urte'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return eu;

})));


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Persian [fa]
//! author : Ebrahim Byagowi : https://github.com/ebraminio

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '۱',
    '2': '۲',
    '3': '۳',
    '4': '۴',
    '5': '۵',
    '6': '۶',
    '7': '۷',
    '8': '۸',
    '9': '۹',
    '0': '۰'
};
var numberMap = {
    '۱': '1',
    '۲': '2',
    '۳': '3',
    '۴': '4',
    '۵': '5',
    '۶': '6',
    '۷': '7',
    '۸': '8',
    '۹': '9',
    '۰': '0'
};

var fa = moment.defineLocale('fa', {
    months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
    monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
    weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
    weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
    weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    meridiemParse: /قبل از ظهر|بعد از ظهر/,
    isPM: function (input) {
        return /بعد از ظهر/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'قبل از ظهر';
        } else {
            return 'بعد از ظهر';
        }
    },
    calendar : {
        sameDay : '[امروز ساعت] LT',
        nextDay : '[فردا ساعت] LT',
        nextWeek : 'dddd [ساعت] LT',
        lastDay : '[دیروز ساعت] LT',
        lastWeek : 'dddd [پیش] [ساعت] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'در %s',
        past : '%s پیش',
        s : 'چند ثانیه',
        ss : 'ثانیه d%',
        m : 'یک دقیقه',
        mm : '%d دقیقه',
        h : 'یک ساعت',
        hh : '%d ساعت',
        d : 'یک روز',
        dd : '%d روز',
        M : 'یک ماه',
        MM : '%d ماه',
        y : 'یک سال',
        yy : '%d سال'
    },
    preparse: function (string) {
        return string.replace(/[۰-۹]/g, function (match) {
            return numberMap[match];
        }).replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    dayOfMonthOrdinalParse: /\d{1,2}م/,
    ordinal : '%dم',
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12 // The week that contains Jan 1st is the first week of the year.
    }
});

return fa;

})));


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Finnish [fi]
//! author : Tarmo Aidantausta : https://github.com/bleadof

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');
var numbersFuture = [
        'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
        numbersPast[7], numbersPast[8], numbersPast[9]
    ];
function translate(number, withoutSuffix, key, isFuture) {
    var result = '';
    switch (key) {
        case 's':
            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
        case 'ss':
            return isFuture ? 'sekunnin' : 'sekuntia';
        case 'm':
            return isFuture ? 'minuutin' : 'minuutti';
        case 'mm':
            result = isFuture ? 'minuutin' : 'minuuttia';
            break;
        case 'h':
            return isFuture ? 'tunnin' : 'tunti';
        case 'hh':
            result = isFuture ? 'tunnin' : 'tuntia';
            break;
        case 'd':
            return isFuture ? 'päivän' : 'päivä';
        case 'dd':
            result = isFuture ? 'päivän' : 'päivää';
            break;
        case 'M':
            return isFuture ? 'kuukauden' : 'kuukausi';
        case 'MM':
            result = isFuture ? 'kuukauden' : 'kuukautta';
            break;
        case 'y':
            return isFuture ? 'vuoden' : 'vuosi';
        case 'yy':
            result = isFuture ? 'vuoden' : 'vuotta';
            break;
    }
    result = verbalNumber(number, isFuture) + ' ' + result;
    return result;
}
function verbalNumber(number, isFuture) {
    return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
}

var fi = moment.defineLocale('fi', {
    months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
    monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
    weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
    weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
    weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD.MM.YYYY',
        LL : 'Do MMMM[ta] YYYY',
        LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
        LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
        l : 'D.M.YYYY',
        ll : 'Do MMM YYYY',
        lll : 'Do MMM YYYY, [klo] HH.mm',
        llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
    },
    calendar : {
        sameDay : '[tänään] [klo] LT',
        nextDay : '[huomenna] [klo] LT',
        nextWeek : 'dddd [klo] LT',
        lastDay : '[eilen] [klo] LT',
        lastWeek : '[viime] dddd[na] [klo] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s päästä',
        past : '%s sitten',
        s : translate,
        ss : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fi;

})));


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Faroese [fo]
//! author : Ragnar Johannesen : https://github.com/ragnar123

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var fo = moment.defineLocale('fo', {
    months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
    weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
    weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
    weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D. MMMM, YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Í dag kl.] LT',
        nextDay : '[Í morgin kl.] LT',
        nextWeek : 'dddd [kl.] LT',
        lastDay : '[Í gjár kl.] LT',
        lastWeek : '[síðstu] dddd [kl] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'um %s',
        past : '%s síðani',
        s : 'fá sekund',
        ss : '%d sekundir',
        m : 'ein minutt',
        mm : '%d minuttir',
        h : 'ein tími',
        hh : '%d tímar',
        d : 'ein dagur',
        dd : '%d dagar',
        M : 'ein mánaði',
        MM : '%d mánaðir',
        y : 'eitt ár',
        yy : '%d ár'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fo;

})));


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Canada) [fr-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var frCa = moment.defineLocale('fr-ca', {
    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
    monthsParseExact : true,
    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Aujourd’hui à] LT',
        nextDay : '[Demain à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[Hier à] LT',
        lastWeek : 'dddd [dernier à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dans %s',
        past : 'il y a %s',
        s : 'quelques secondes',
        ss : '%d secondes',
        m : 'une minute',
        mm : '%d minutes',
        h : 'une heure',
        hh : '%d heures',
        d : 'un jour',
        dd : '%d jours',
        M : 'un mois',
        MM : '%d mois',
        y : 'un an',
        yy : '%d ans'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
    ordinal : function (number, period) {
        switch (period) {
            // Words with masculine grammatical gender: mois, trimestre, jour
            default:
            case 'M':
            case 'Q':
            case 'D':
            case 'DDD':
            case 'd':
                return number + (number === 1 ? 'er' : 'e');

            // Words with feminine grammatical gender: semaine
            case 'w':
            case 'W':
                return number + (number === 1 ? 're' : 'e');
        }
    }
});

return frCa;

})));


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Switzerland) [fr-ch]
//! author : Gaspard Bucher : https://github.com/gaspard

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var frCh = moment.defineLocale('fr-ch', {
    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
    monthsParseExact : true,
    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Aujourd’hui à] LT',
        nextDay : '[Demain à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[Hier à] LT',
        lastWeek : 'dddd [dernier à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dans %s',
        past : 'il y a %s',
        s : 'quelques secondes',
        ss : '%d secondes',
        m : 'une minute',
        mm : '%d minutes',
        h : 'une heure',
        hh : '%d heures',
        d : 'un jour',
        dd : '%d jours',
        M : 'un mois',
        MM : '%d mois',
        y : 'un an',
        yy : '%d ans'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
    ordinal : function (number, period) {
        switch (period) {
            // Words with masculine grammatical gender: mois, trimestre, jour
            default:
            case 'M':
            case 'Q':
            case 'D':
            case 'DDD':
            case 'd':
                return number + (number === 1 ? 'er' : 'e');

            // Words with feminine grammatical gender: semaine
            case 'w':
            case 'W':
                return number + (number === 1 ? 're' : 'e');
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return frCh;

})));


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French [fr]
//! author : John Fischer : https://github.com/jfroffice

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var fr = moment.defineLocale('fr', {
    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
    monthsParseExact : true,
    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Aujourd’hui à] LT',
        nextDay : '[Demain à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[Hier à] LT',
        lastWeek : 'dddd [dernier à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dans %s',
        past : 'il y a %s',
        s : 'quelques secondes',
        ss : '%d secondes',
        m : 'une minute',
        mm : '%d minutes',
        h : 'une heure',
        hh : '%d heures',
        d : 'un jour',
        dd : '%d jours',
        M : 'un mois',
        MM : '%d mois',
        y : 'un an',
        yy : '%d ans'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
    ordinal : function (number, period) {
        switch (period) {
            // TODO: Return 'e' when day of month > 1. Move this case inside
            // block for masculine words below.
            // See https://github.com/moment/moment/issues/3375
            case 'D':
                return number + (number === 1 ? 'er' : '');

            // Words with masculine grammatical gender: mois, trimestre, jour
            default:
            case 'M':
            case 'Q':
            case 'DDD':
            case 'd':
                return number + (number === 1 ? 'er' : 'e');

            // Words with feminine grammatical gender: semaine
            case 'w':
            case 'W':
                return number + (number === 1 ? 're' : 'e');
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fr;

})));


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Frisian [fy]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_');
var monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

var fy = moment.defineLocale('fy', {
    months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortWithDots;
        } else if (/-MMM-/.test(format)) {
            return monthsShortWithoutDots[m.month()];
        } else {
            return monthsShortWithDots[m.month()];
        }
    },
    monthsParseExact : true,
    weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
    weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
    weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[hjoed om] LT',
        nextDay: '[moarn om] LT',
        nextWeek: 'dddd [om] LT',
        lastDay: '[juster om] LT',
        lastWeek: '[ôfrûne] dddd [om] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'oer %s',
        past : '%s lyn',
        s : 'in pear sekonden',
        ss : '%d sekonden',
        m : 'ien minút',
        mm : '%d minuten',
        h : 'ien oere',
        hh : '%d oeren',
        d : 'ien dei',
        dd : '%d dagen',
        M : 'ien moanne',
        MM : '%d moannen',
        y : 'ien jier',
        yy : '%d jierren'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fy;

})));


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Scottish Gaelic [gd]
//! author : Jon Ashdown : https://github.com/jonashdown

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = [
    'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
];

var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

var gd = moment.defineLocale('gd', {
    months : months,
    monthsShort : monthsShort,
    monthsParseExact : true,
    weekdays : weekdays,
    weekdaysShort : weekdaysShort,
    weekdaysMin : weekdaysMin,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[An-diugh aig] LT',
        nextDay : '[A-màireach aig] LT',
        nextWeek : 'dddd [aig] LT',
        lastDay : '[An-dè aig] LT',
        lastWeek : 'dddd [seo chaidh] [aig] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ann an %s',
        past : 'bho chionn %s',
        s : 'beagan diogan',
        ss : '%d diogan',
        m : 'mionaid',
        mm : '%d mionaidean',
        h : 'uair',
        hh : '%d uairean',
        d : 'latha',
        dd : '%d latha',
        M : 'mìos',
        MM : '%d mìosan',
        y : 'bliadhna',
        yy : '%d bliadhna'
    },
    dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
    ordinal : function (number) {
        var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return gd;

})));


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Galician [gl]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var gl = moment.defineLocale('gl', {
    months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
    monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY H:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
        },
        nextDay : function () {
            return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
        },
        lastDay : function () {
            return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
        },
        lastWeek : function () {
            return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : function (str) {
            if (str.indexOf('un') === 0) {
                return 'n' + str;
            }
            return 'en ' + str;
        },
        past : 'hai %s',
        s : 'uns segundos',
        ss : '%d segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'unha hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un ano',
        yy : '%d anos'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return gl;

})));


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Latin script [gom-latn]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        's': ['thodde secondanim', 'thodde second'],
        'ss': [number + ' secondanim', number + ' second'],
        'm': ['eka mintan', 'ek minute'],
        'mm': [number + ' mintanim', number + ' mintam'],
        'h': ['eka horan', 'ek hor'],
        'hh': [number + ' horanim', number + ' hor'],
        'd': ['eka disan', 'ek dis'],
        'dd': [number + ' disanim', number + ' dis'],
        'M': ['eka mhoinean', 'ek mhoino'],
        'MM': [number + ' mhoineanim', number + ' mhoine'],
        'y': ['eka vorsan', 'ek voros'],
        'yy': [number + ' vorsanim', number + ' vorsam']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var gomLatn = moment.defineLocale('gom-latn', {
    months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
    monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
    weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
    weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'A h:mm [vazta]',
        LTS : 'A h:mm:ss [vazta]',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY A h:mm [vazta]',
        LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
        llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
    },
    calendar : {
        sameDay: '[Aiz] LT',
        nextDay: '[Faleam] LT',
        nextWeek: '[Ieta to] dddd[,] LT',
        lastDay: '[Kal] LT',
        lastWeek: '[Fatlo] dddd[,] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s',
        past : '%s adim',
        s : processRelativeTime,
        ss : processRelativeTime,
        m : processRelativeTime,
        mm : processRelativeTime,
        h : processRelativeTime,
        hh : processRelativeTime,
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse : /\d{1,2}(er)/,
    ordinal : function (number, period) {
        switch (period) {
            // the ordinal 'er' only applies to day of the month
            case 'D':
                return number + 'er';
            default:
            case 'M':
            case 'Q':
            case 'DDD':
            case 'd':
            case 'w':
            case 'W':
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    },
    meridiemParse: /rati|sokalli|donparam|sanje/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'rati') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'sokalli') {
            return hour;
        } else if (meridiem === 'donparam') {
            return hour > 12 ? hour : hour + 12;
        } else if (meridiem === 'sanje') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'rati';
        } else if (hour < 12) {
            return 'sokalli';
        } else if (hour < 16) {
            return 'donparam';
        } else if (hour < 20) {
            return 'sanje';
        } else {
            return 'rati';
        }
    }
});

return gomLatn;

})));


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Gujarati [gu]
//! author : Kaushik Thanki : https://github.com/Kaushik1987

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
        '1': '૧',
        '2': '૨',
        '3': '૩',
        '4': '૪',
        '5': '૫',
        '6': '૬',
        '7': '૭',
        '8': '૮',
        '9': '૯',
        '0': '૦'
    };
var numberMap = {
        '૧': '1',
        '૨': '2',
        '૩': '3',
        '૪': '4',
        '૫': '5',
        '૬': '6',
        '૭': '7',
        '૮': '8',
        '૯': '9',
        '૦': '0'
    };

var gu = moment.defineLocale('gu', {
    months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
    monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
    monthsParseExact: true,
    weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
    weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
    weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
    longDateFormat: {
        LT: 'A h:mm વાગ્યે',
        LTS: 'A h:mm:ss વાગ્યે',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
        LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
    },
    calendar: {
        sameDay: '[આજ] LT',
        nextDay: '[કાલે] LT',
        nextWeek: 'dddd, LT',
        lastDay: '[ગઇકાલે] LT',
        lastWeek: '[પાછલા] dddd, LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: '%s મા',
        past: '%s પેહલા',
        s: 'અમુક પળો',
        ss: '%d સેકંડ',
        m: 'એક મિનિટ',
        mm: '%d મિનિટ',
        h: 'એક કલાક',
        hh: '%d કલાક',
        d: 'એક દિવસ',
        dd: '%d દિવસ',
        M: 'એક મહિનો',
        MM: '%d મહિનો',
        y: 'એક વર્ષ',
        yy: '%d વર્ષ'
    },
    preparse: function (string) {
        return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
    meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'રાત') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'સવાર') {
            return hour;
        } else if (meridiem === 'બપોર') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'સાંજ') {
            return hour + 12;
        }
    },
    meridiem: function (hour, minute, isLower) {
        if (hour < 4) {
            return 'રાત';
        } else if (hour < 10) {
            return 'સવાર';
        } else if (hour < 17) {
            return 'બપોર';
        } else if (hour < 20) {
            return 'સાંજ';
        } else {
            return 'રાત';
        }
    },
    week: {
        dow: 0, // Sunday is the first day of the week.
        doy: 6 // The week that contains Jan 1st is the first week of the year.
    }
});

return gu;

})));


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hebrew [he]
//! author : Tomer Cohen : https://github.com/tomer
//! author : Moshe Simantov : https://github.com/DevelopmentIL
//! author : Tal Ater : https://github.com/TalAter

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var he = moment.defineLocale('he', {
    months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
    monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
    weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
    weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
    weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [ב]MMMM YYYY',
        LLL : 'D [ב]MMMM YYYY HH:mm',
        LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
        l : 'D/M/YYYY',
        ll : 'D MMM YYYY',
        lll : 'D MMM YYYY HH:mm',
        llll : 'ddd, D MMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[היום ב־]LT',
        nextDay : '[מחר ב־]LT',
        nextWeek : 'dddd [בשעה] LT',
        lastDay : '[אתמול ב־]LT',
        lastWeek : '[ביום] dddd [האחרון בשעה] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'בעוד %s',
        past : 'לפני %s',
        s : 'מספר שניות',
        ss : '%d שניות',
        m : 'דקה',
        mm : '%d דקות',
        h : 'שעה',
        hh : function (number) {
            if (number === 2) {
                return 'שעתיים';
            }
            return number + ' שעות';
        },
        d : 'יום',
        dd : function (number) {
            if (number === 2) {
                return 'יומיים';
            }
            return number + ' ימים';
        },
        M : 'חודש',
        MM : function (number) {
            if (number === 2) {
                return 'חודשיים';
            }
            return number + ' חודשים';
        },
        y : 'שנה',
        yy : function (number) {
            if (number === 2) {
                return 'שנתיים';
            } else if (number % 10 === 0 && number !== 10) {
                return number + ' שנה';
            }
            return number + ' שנים';
        }
    },
    meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
    isPM : function (input) {
        return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 5) {
            return 'לפנות בוקר';
        } else if (hour < 10) {
            return 'בבוקר';
        } else if (hour < 12) {
            return isLower ? 'לפנה"צ' : 'לפני הצהריים';
        } else if (hour < 18) {
            return isLower ? 'אחה"צ' : 'אחרי הצהריים';
        } else {
            return 'בערב';
        }
    }
});

return he;

})));


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hindi [hi]
//! author : Mayank Singhal : https://github.com/mayanksinghal

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '१',
    '2': '२',
    '3': '३',
    '4': '४',
    '5': '५',
    '6': '६',
    '7': '७',
    '8': '८',
    '9': '९',
    '0': '०'
};
var numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0'
};

var hi = moment.defineLocale('hi', {
    months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
    monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
    monthsParseExact: true,
    weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
    weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
    longDateFormat : {
        LT : 'A h:mm बजे',
        LTS : 'A h:mm:ss बजे',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm बजे',
        LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
    },
    calendar : {
        sameDay : '[आज] LT',
        nextDay : '[कल] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[कल] LT',
        lastWeek : '[पिछले] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s में',
        past : '%s पहले',
        s : 'कुछ ही क्षण',
        ss : '%d सेकंड',
        m : 'एक मिनट',
        mm : '%d मिनट',
        h : 'एक घंटा',
        hh : '%d घंटे',
        d : 'एक दिन',
        dd : '%d दिन',
        M : 'एक महीने',
        MM : '%d महीने',
        y : 'एक वर्ष',
        yy : '%d वर्ष'
    },
    preparse: function (string) {
        return string.replace(/[१२३४५६७८९०]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // Hindi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
    meridiemParse: /रात|सुबह|दोपहर|शाम/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'रात') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'सुबह') {
            return hour;
        } else if (meridiem === 'दोपहर') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'शाम') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'रात';
        } else if (hour < 10) {
            return 'सुबह';
        } else if (hour < 17) {
            return 'दोपहर';
        } else if (hour < 20) {
            return 'शाम';
        } else {
            return 'रात';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return hi;

})));


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Croatian [hr]
//! author : Bojan Marković : https://github.com/bmarkovic

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
        case 'ss':
            if (number === 1) {
                result += 'sekunda';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'sekunde';
            } else {
                result += 'sekundi';
            }
            return result;
        case 'm':
            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
        case 'mm':
            if (number === 1) {
                result += 'minuta';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'minute';
            } else {
                result += 'minuta';
            }
            return result;
        case 'h':
            return withoutSuffix ? 'jedan sat' : 'jednog sata';
        case 'hh':
            if (number === 1) {
                result += 'sat';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'sata';
            } else {
                result += 'sati';
            }
            return result;
        case 'dd':
            if (number === 1) {
                result += 'dan';
            } else {
                result += 'dana';
            }
            return result;
        case 'MM':
            if (number === 1) {
                result += 'mjesec';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'mjeseca';
            } else {
                result += 'mjeseci';
            }
            return result;
        case 'yy':
            if (number === 1) {
                result += 'godina';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'godine';
            } else {
                result += 'godina';
            }
            return result;
    }
}

var hr = moment.defineLocale('hr', {
    months : {
        format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
        standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
    },
    monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
    monthsParseExact: true,
    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[danas u] LT',
        nextDay  : '[sutra u] LT',
        nextWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedjelju] [u] LT';
                case 3:
                    return '[u] [srijedu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[jučer u] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                    return '[prošlu] dddd [u] LT';
                case 6:
                    return '[prošle] [subote] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[prošli] dddd [u] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'prije %s',
        s      : 'par sekundi',
        ss     : translate,
        m      : translate,
        mm     : translate,
        h      : translate,
        hh     : translate,
        d      : 'dan',
        dd     : translate,
        M      : 'mjesec',
        MM     : translate,
        y      : 'godinu',
        yy     : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return hr;

})));


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hungarian [hu]
//! author : Adam Brunner : https://github.com/adambrunner

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
function translate(number, withoutSuffix, key, isFuture) {
    var num = number;
    switch (key) {
        case 's':
            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
        case 'ss':
            return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';
        case 'm':
            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
        case 'mm':
            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
        case 'h':
            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
        case 'hh':
            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
        case 'd':
            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
        case 'dd':
            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
        case 'M':
            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
        case 'MM':
            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
        case 'y':
            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
        case 'yy':
            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
    }
    return '';
}
function week(isFuture) {
    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
}

var hu = moment.defineLocale('hu', {
    months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
    monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
    weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
    weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
    weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'YYYY.MM.DD.',
        LL : 'YYYY. MMMM D.',
        LLL : 'YYYY. MMMM D. H:mm',
        LLLL : 'YYYY. MMMM D., dddd H:mm'
    },
    meridiemParse: /de|du/i,
    isPM: function (input) {
        return input.charAt(1).toLowerCase() === 'u';
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 12) {
            return isLower === true ? 'de' : 'DE';
        } else {
            return isLower === true ? 'du' : 'DU';
        }
    },
    calendar : {
        sameDay : '[ma] LT[-kor]',
        nextDay : '[holnap] LT[-kor]',
        nextWeek : function () {
            return week.call(this, true);
        },
        lastDay : '[tegnap] LT[-kor]',
        lastWeek : function () {
            return week.call(this, false);
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s múlva',
        past : '%s',
        s : translate,
        ss : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return hu;

})));


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Armenian [hy-am]
//! author : Armendarabyan : https://github.com/armendarabyan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var hyAm = moment.defineLocale('hy-am', {
    months : {
        format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
        standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
    },
    monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
    weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
    weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
    weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY թ.',
        LLL : 'D MMMM YYYY թ., HH:mm',
        LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
    },
    calendar : {
        sameDay: '[այսօր] LT',
        nextDay: '[վաղը] LT',
        lastDay: '[երեկ] LT',
        nextWeek: function () {
            return 'dddd [օրը ժամը] LT';
        },
        lastWeek: function () {
            return '[անցած] dddd [օրը ժամը] LT';
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s հետո',
        past : '%s առաջ',
        s : 'մի քանի վայրկյան',
        ss : '%d վայրկյան',
        m : 'րոպե',
        mm : '%d րոպե',
        h : 'ժամ',
        hh : '%d ժամ',
        d : 'օր',
        dd : '%d օր',
        M : 'ամիս',
        MM : '%d ամիս',
        y : 'տարի',
        yy : '%d տարի'
    },
    meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
    isPM: function (input) {
        return /^(ցերեկվա|երեկոյան)$/.test(input);
    },
    meridiem : function (hour) {
        if (hour < 4) {
            return 'գիշերվա';
        } else if (hour < 12) {
            return 'առավոտվա';
        } else if (hour < 17) {
            return 'ցերեկվա';
        } else {
            return 'երեկոյան';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'DDD':
            case 'w':
            case 'W':
            case 'DDDo':
                if (number === 1) {
                    return number + '-ին';
                }
                return number + '-րդ';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return hyAm;

})));


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Indonesian [id]
//! author : Mohammad Satrio Utomo : https://github.com/tyok
//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var id = moment.defineLocale('id', {
    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
    weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
    weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /pagi|siang|sore|malam/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'pagi') {
            return hour;
        } else if (meridiem === 'siang') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'sore' || meridiem === 'malam') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'pagi';
        } else if (hours < 15) {
            return 'siang';
        } else if (hours < 19) {
            return 'sore';
        } else {
            return 'malam';
        }
    },
    calendar : {
        sameDay : '[Hari ini pukul] LT',
        nextDay : '[Besok pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kemarin pukul] LT',
        lastWeek : 'dddd [lalu pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dalam %s',
        past : '%s yang lalu',
        s : 'beberapa detik',
        ss : '%d detik',
        m : 'semenit',
        mm : '%d menit',
        h : 'sejam',
        hh : '%d jam',
        d : 'sehari',
        dd : '%d hari',
        M : 'sebulan',
        MM : '%d bulan',
        y : 'setahun',
        yy : '%d tahun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return id;

})));


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Icelandic [is]
//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function plural(n) {
    if (n % 100 === 11) {
        return true;
    } else if (n % 10 === 1) {
        return false;
    }
    return true;
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':
            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
        case 'ss':
            if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
            }
            return result + 'sekúnda';
        case 'm':
            return withoutSuffix ? 'mínúta' : 'mínútu';
        case 'mm':
            if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
            } else if (withoutSuffix) {
                return result + 'mínúta';
            }
            return result + 'mínútu';
        case 'hh':
            if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
            }
            return result + 'klukkustund';
        case 'd':
            if (withoutSuffix) {
                return 'dagur';
            }
            return isFuture ? 'dag' : 'degi';
        case 'dd':
            if (plural(number)) {
                if (withoutSuffix) {
                    return result + 'dagar';
                }
                return result + (isFuture ? 'daga' : 'dögum');
            } else if (withoutSuffix) {
                return result + 'dagur';
            }
            return result + (isFuture ? 'dag' : 'degi');
        case 'M':
            if (withoutSuffix) {
                return 'mánuður';
            }
            return isFuture ? 'mánuð' : 'mánuði';
        case 'MM':
            if (plural(number)) {
                if (withoutSuffix) {
                    return result + 'mánuðir';
                }
                return result + (isFuture ? 'mánuði' : 'mánuðum');
            } else if (withoutSuffix) {
                return result + 'mánuður';
            }
            return result + (isFuture ? 'mánuð' : 'mánuði');
        case 'y':
            return withoutSuffix || isFuture ? 'ár' : 'ári';
        case 'yy':
            if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
            }
            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
    }
}

var is = moment.defineLocale('is', {
    months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
    weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
    weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
    weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY [kl.] H:mm',
        LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
    },
    calendar : {
        sameDay : '[í dag kl.] LT',
        nextDay : '[á morgun kl.] LT',
        nextWeek : 'dddd [kl.] LT',
        lastDay : '[í gær kl.] LT',
        lastWeek : '[síðasta] dddd [kl.] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'eftir %s',
        past : 'fyrir %s síðan',
        s : translate,
        ss : translate,
        m : translate,
        mm : translate,
        h : 'klukkustund',
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return is;

})));


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian [it]
//! author : Lorenzo : https://github.com/aliem
//! author: Mattia Larentis: https://github.com/nostalgiaz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var it = moment.defineLocale('it', {
    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Oggi alle] LT',
        nextDay: '[Domani alle] LT',
        nextWeek: 'dddd [alle] LT',
        lastDay: '[Ieri alle] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[la scorsa] dddd [alle] LT';
                default:
                    return '[lo scorso] dddd [alle] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : function (s) {
            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
        },
        past : '%s fa',
        s : 'alcuni secondi',
        ss : '%d secondi',
        m : 'un minuto',
        mm : '%d minuti',
        h : 'un\'ora',
        hh : '%d ore',
        d : 'un giorno',
        dd : '%d giorni',
        M : 'un mese',
        MM : '%d mesi',
        y : 'un anno',
        yy : '%d anni'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal: '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return it;

})));


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Japanese [ja]
//! author : LI Long : https://github.com/baryon

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ja = moment.defineLocale('ja', {
    months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
    weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
    weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY/MM/DD',
        LL : 'YYYY年M月D日',
        LLL : 'YYYY年M月D日 HH:mm',
        LLLL : 'YYYY年M月D日 HH:mm dddd',
        l : 'YYYY/MM/DD',
        ll : 'YYYY年M月D日',
        lll : 'YYYY年M月D日 HH:mm',
        llll : 'YYYY年M月D日 HH:mm dddd'
    },
    meridiemParse: /午前|午後/i,
    isPM : function (input) {
        return input === '午後';
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return '午前';
        } else {
            return '午後';
        }
    },
    calendar : {
        sameDay : '[今日] LT',
        nextDay : '[明日] LT',
        nextWeek : '[来週]dddd LT',
        lastDay : '[昨日] LT',
        lastWeek : '[前週]dddd LT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse : /\d{1,2}日/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd':
            case 'D':
            case 'DDD':
                return number + '日';
            default:
                return number;
        }
    },
    relativeTime : {
        future : '%s後',
        past : '%s前',
        s : '数秒',
        ss : '%d秒',
        m : '1分',
        mm : '%d分',
        h : '1時間',
        hh : '%d時間',
        d : '1日',
        dd : '%d日',
        M : '1ヶ月',
        MM : '%dヶ月',
        y : '1年',
        yy : '%d年'
    }
});

return ja;

})));


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Javanese [jv]
//! author : Rony Lantip : https://github.com/lantip
//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var jv = moment.defineLocale('jv', {
    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
    weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
    weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /enjing|siyang|sonten|ndalu/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'enjing') {
            return hour;
        } else if (meridiem === 'siyang') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'enjing';
        } else if (hours < 15) {
            return 'siyang';
        } else if (hours < 19) {
            return 'sonten';
        } else {
            return 'ndalu';
        }
    },
    calendar : {
        sameDay : '[Dinten puniko pukul] LT',
        nextDay : '[Mbenjang pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kala wingi pukul] LT',
        lastWeek : 'dddd [kepengker pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'wonten ing %s',
        past : '%s ingkang kepengker',
        s : 'sawetawis detik',
        ss : '%d detik',
        m : 'setunggal menit',
        mm : '%d menit',
        h : 'setunggal jam',
        hh : '%d jam',
        d : 'sedinten',
        dd : '%d dinten',
        M : 'sewulan',
        MM : '%d wulan',
        y : 'setaun',
        yy : '%d taun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return jv;

})));


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Georgian [ka]
//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ka = moment.defineLocale('ka', {
    months : {
        standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
        format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
    },
    monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
    weekdays : {
        standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
        format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
        isFormat: /(წინა|შემდეგ)/
    },
    weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
    weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[დღეს] LT[-ზე]',
        nextDay : '[ხვალ] LT[-ზე]',
        lastDay : '[გუშინ] LT[-ზე]',
        nextWeek : '[შემდეგ] dddd LT[-ზე]',
        lastWeek : '[წინა] dddd LT-ზე',
        sameElse : 'L'
    },
    relativeTime : {
        future : function (s) {
            return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                s.replace(/ი$/, 'ში') :
                s + 'ში';
        },
        past : function (s) {
            if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                return s.replace(/(ი|ე)$/, 'ის უკან');
            }
            if ((/წელი/).test(s)) {
                return s.replace(/წელი$/, 'წლის უკან');
            }
        },
        s : 'რამდენიმე წამი',
        ss : '%d წამი',
        m : 'წუთი',
        mm : '%d წუთი',
        h : 'საათი',
        hh : '%d საათი',
        d : 'დღე',
        dd : '%d დღე',
        M : 'თვე',
        MM : '%d თვე',
        y : 'წელი',
        yy : '%d წელი'
    },
    dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
    ordinal : function (number) {
        if (number === 0) {
            return number;
        }
        if (number === 1) {
            return number + '-ლი';
        }
        if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
            return 'მე-' + number;
        }
        return number + '-ე';
    },
    week : {
        dow : 1,
        doy : 7
    }
});

return ka;

})));


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kazakh [kk]
//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var suffixes = {
    0: '-ші',
    1: '-ші',
    2: '-ші',
    3: '-ші',
    4: '-ші',
    5: '-ші',
    6: '-шы',
    7: '-ші',
    8: '-ші',
    9: '-шы',
    10: '-шы',
    20: '-шы',
    30: '-шы',
    40: '-шы',
    50: '-ші',
    60: '-шы',
    70: '-ші',
    80: '-ші',
    90: '-шы',
    100: '-ші'
};

var kk = moment.defineLocale('kk', {
    months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
    monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
    weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
    weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
    weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Бүгін сағат] LT',
        nextDay : '[Ертең сағат] LT',
        nextWeek : 'dddd [сағат] LT',
        lastDay : '[Кеше сағат] LT',
        lastWeek : '[Өткен аптаның] dddd [сағат] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ішінде',
        past : '%s бұрын',
        s : 'бірнеше секунд',
        ss : '%d секунд',
        m : 'бір минут',
        mm : '%d минут',
        h : 'бір сағат',
        hh : '%d сағат',
        d : 'бір күн',
        dd : '%d күн',
        M : 'бір ай',
        MM : '%d ай',
        y : 'бір жыл',
        yy : '%d жыл'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
    ordinal : function (number) {
        var a = number % 10,
            b = number >= 100 ? 100 : null;
        return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return kk;

})));


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Cambodian [km]
//! author : Kruy Vanna : https://github.com/kruyvanna

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var km = moment.defineLocale('km', {
    months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
    monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
    weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    longDateFormat: {
        LT: 'HH:mm',
        LTS : 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd, D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
        nextDay: '[ស្អែក ម៉ោង] LT',
        nextWeek: 'dddd [ម៉ោង] LT',
        lastDay: '[ម្សិលមិញ ម៉ោង] LT',
        lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: '%sទៀត',
        past: '%sមុន',
        s: 'ប៉ុន្មានវិនាទី',
        ss: '%d វិនាទី',
        m: 'មួយនាទី',
        mm: '%d នាទី',
        h: 'មួយម៉ោង',
        hh: '%d ម៉ោង',
        d: 'មួយថ្ងៃ',
        dd: '%d ថ្ងៃ',
        M: 'មួយខែ',
        MM: '%d ខែ',
        y: 'មួយឆ្នាំ',
        yy: '%d ឆ្នាំ'
    },
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4 // The week that contains Jan 4th is the first week of the year.
    }
});

return km;

})));


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kannada [kn]
//! author : Rajeev Naik : https://github.com/rajeevnaikte

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '೧',
    '2': '೨',
    '3': '೩',
    '4': '೪',
    '5': '೫',
    '6': '೬',
    '7': '೭',
    '8': '೮',
    '9': '೯',
    '0': '೦'
};
var numberMap = {
    '೧': '1',
    '೨': '2',
    '೩': '3',
    '೪': '4',
    '೫': '5',
    '೬': '6',
    '೭': '7',
    '೮': '8',
    '೯': '9',
    '೦': '0'
};

var kn = moment.defineLocale('kn', {
    months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
    monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬ_ಅಕ್ಟೋಬ_ನವೆಂಬ_ಡಿಸೆಂಬ'.split('_'),
    monthsParseExact: true,
    weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
    weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
    weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm',
        LLLL : 'dddd, D MMMM YYYY, A h:mm'
    },
    calendar : {
        sameDay : '[ಇಂದು] LT',
        nextDay : '[ನಾಳೆ] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[ನಿನ್ನೆ] LT',
        lastWeek : '[ಕೊನೆಯ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ನಂತರ',
        past : '%s ಹಿಂದೆ',
        s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
        ss : '%d ಸೆಕೆಂಡುಗಳು',
        m : 'ಒಂದು ನಿಮಿಷ',
        mm : '%d ನಿಮಿಷ',
        h : 'ಒಂದು ಗಂಟೆ',
        hh : '%d ಗಂಟೆ',
        d : 'ಒಂದು ದಿನ',
        dd : '%d ದಿನ',
        M : 'ಒಂದು ತಿಂಗಳು',
        MM : '%d ತಿಂಗಳು',
        y : 'ಒಂದು ವರ್ಷ',
        yy : '%d ವರ್ಷ'
    },
    preparse: function (string) {
        return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'ರಾತ್ರಿ') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
            return hour;
        } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'ಸಂಜೆ') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ರಾತ್ರಿ';
        } else if (hour < 10) {
            return 'ಬೆಳಿಗ್ಗೆ';
        } else if (hour < 17) {
            return 'ಮಧ್ಯಾಹ್ನ';
        } else if (hour < 20) {
            return 'ಸಂಜೆ';
        } else {
            return 'ರಾತ್ರಿ';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
    ordinal : function (number) {
        return number + 'ನೇ';
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return kn;

})));


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Korean [ko]
//! author : Kyungwook, Park : https://github.com/kyungw00k
//! author : Jeeeyul Lee <jeeeyul@gmail.com>

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ko = moment.defineLocale('ko', {
    months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
    monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
    weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
    weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
    weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'YYYY.MM.DD',
        LL : 'YYYY년 MMMM D일',
        LLL : 'YYYY년 MMMM D일 A h:mm',
        LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
        l : 'YYYY.MM.DD',
        ll : 'YYYY년 MMMM D일',
        lll : 'YYYY년 MMMM D일 A h:mm',
        llll : 'YYYY년 MMMM D일 dddd A h:mm'
    },
    calendar : {
        sameDay : '오늘 LT',
        nextDay : '내일 LT',
        nextWeek : 'dddd LT',
        lastDay : '어제 LT',
        lastWeek : '지난주 dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s 후',
        past : '%s 전',
        s : '몇 초',
        ss : '%d초',
        m : '1분',
        mm : '%d분',
        h : '한 시간',
        hh : '%d시간',
        d : '하루',
        dd : '%d일',
        M : '한 달',
        MM : '%d달',
        y : '일 년',
        yy : '%d년'
    },
    dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd':
            case 'D':
            case 'DDD':
                return number + '일';
            case 'M':
                return number + '월';
            case 'w':
            case 'W':
                return number + '주';
            default:
                return number;
        }
    },
    meridiemParse : /오전|오후/,
    isPM : function (token) {
        return token === '오후';
    },
    meridiem : function (hour, minute, isUpper) {
        return hour < 12 ? '오전' : '오후';
    }
});

return ko;

})));


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kyrgyz [ky]
//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';



var suffixes = {
    0: '-чү',
    1: '-чи',
    2: '-чи',
    3: '-чү',
    4: '-чү',
    5: '-чи',
    6: '-чы',
    7: '-чи',
    8: '-чи',
    9: '-чу',
    10: '-чу',
    20: '-чы',
    30: '-чу',
    40: '-чы',
    50: '-чү',
    60: '-чы',
    70: '-чи',
    80: '-чи',
    90: '-чу',
    100: '-чү'
};

var ky = moment.defineLocale('ky', {
    months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
    monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
    weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
    weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
    weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Бүгүн саат] LT',
        nextDay : '[Эртең саат] LT',
        nextWeek : 'dddd [саат] LT',
        lastDay : '[Кече саат] LT',
        lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ичинде',
        past : '%s мурун',
        s : 'бирнече секунд',
        ss : '%d секунд',
        m : 'бир мүнөт',
        mm : '%d мүнөт',
        h : 'бир саат',
        hh : '%d саат',
        d : 'бир күн',
        dd : '%d күн',
        M : 'бир ай',
        MM : '%d ай',
        y : 'бир жыл',
        yy : '%d жыл'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
    ordinal : function (number) {
        var a = number % 10,
            b = number >= 100 ? 100 : null;
        return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return ky;

})));


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Luxembourgish [lb]
//! author : mweimerskirch : https://github.com/mweimerskirch
//! author : David Raison : https://github.com/kwisatz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eng Minutt', 'enger Minutt'],
        'h': ['eng Stonn', 'enger Stonn'],
        'd': ['een Dag', 'engem Dag'],
        'M': ['ee Mount', 'engem Mount'],
        'y': ['ee Joer', 'engem Joer']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}
function processFutureTime(string) {
    var number = string.substr(0, string.indexOf(' '));
    if (eifelerRegelAppliesToNumber(number)) {
        return 'a ' + string;
    }
    return 'an ' + string;
}
function processPastTime(string) {
    var number = string.substr(0, string.indexOf(' '));
    if (eifelerRegelAppliesToNumber(number)) {
        return 'viru ' + string;
    }
    return 'virun ' + string;
}
/**
 * Returns true if the word before the given number loses the '-n' ending.
 * e.g. 'an 10 Deeg' but 'a 5 Deeg'
 *
 * @param number {integer}
 * @returns {boolean}
 */
function eifelerRegelAppliesToNumber(number) {
    number = parseInt(number, 10);
    if (isNaN(number)) {
        return false;
    }
    if (number < 0) {
        // Negative Number --> always true
        return true;
    } else if (number < 10) {
        // Only 1 digit
        if (4 <= number && number <= 7) {
            return true;
        }
        return false;
    } else if (number < 100) {
        // 2 digits
        var lastDigit = number % 10, firstDigit = number / 10;
        if (lastDigit === 0) {
            return eifelerRegelAppliesToNumber(firstDigit);
        }
        return eifelerRegelAppliesToNumber(lastDigit);
    } else if (number < 10000) {
        // 3 or 4 digits --> recursively check first digit
        while (number >= 10) {
            number = number / 10;
        }
        return eifelerRegelAppliesToNumber(number);
    } else {
        // Anything larger than 4 digits: recursively check first n-3 digits
        number = number / 1000;
        return eifelerRegelAppliesToNumber(number);
    }
}

var lb = moment.defineLocale('lb', {
    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm [Auer]',
        LTS: 'H:mm:ss [Auer]',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm [Auer]',
        LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
    },
    calendar: {
        sameDay: '[Haut um] LT',
        sameElse: 'L',
        nextDay: '[Muer um] LT',
        nextWeek: 'dddd [um] LT',
        lastDay: '[Gëschter um] LT',
        lastWeek: function () {
            // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
            switch (this.day()) {
                case 2:
                case 4:
                    return '[Leschten] dddd [um] LT';
                default:
                    return '[Leschte] dddd [um] LT';
            }
        }
    },
    relativeTime : {
        future : processFutureTime,
        past : processPastTime,
        s : 'e puer Sekonnen',
        ss : '%d Sekonnen',
        m : processRelativeTime,
        mm : '%d Minutten',
        h : processRelativeTime,
        hh : '%d Stonnen',
        d : processRelativeTime,
        dd : '%d Deeg',
        M : processRelativeTime,
        MM : '%d Méint',
        y : processRelativeTime,
        yy : '%d Joer'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return lb;

})));


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lao [lo]
//! author : Ryan Hart : https://github.com/ryanhart2

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var lo = moment.defineLocale('lo', {
    months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
    monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
    weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
    weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
    weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
    isPM: function (input) {
        return input === 'ຕອນແລງ';
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ຕອນເຊົ້າ';
        } else {
            return 'ຕອນແລງ';
        }
    },
    calendar : {
        sameDay : '[ມື້ນີ້ເວລາ] LT',
        nextDay : '[ມື້ອື່ນເວລາ] LT',
        nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
        lastDay : '[ມື້ວານນີ້ເວລາ] LT',
        lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ອີກ %s',
        past : '%sຜ່ານມາ',
        s : 'ບໍ່ເທົ່າໃດວິນາທີ',
        ss : '%d ວິນາທີ' ,
        m : '1 ນາທີ',
        mm : '%d ນາທີ',
        h : '1 ຊົ່ວໂມງ',
        hh : '%d ຊົ່ວໂມງ',
        d : '1 ມື້',
        dd : '%d ມື້',
        M : '1 ເດືອນ',
        MM : '%d ເດືອນ',
        y : '1 ປີ',
        yy : '%d ປີ'
    },
    dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
    ordinal : function (number) {
        return 'ທີ່' + number;
    }
});

return lo;

})));


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lithuanian [lt]
//! author : Mindaugas Mozūras : https://github.com/mmozuras

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var units = {
    'ss' : 'sekundė_sekundžių_sekundes',
    'm' : 'minutė_minutės_minutę',
    'mm': 'minutės_minučių_minutes',
    'h' : 'valanda_valandos_valandą',
    'hh': 'valandos_valandų_valandas',
    'd' : 'diena_dienos_dieną',
    'dd': 'dienos_dienų_dienas',
    'M' : 'mėnuo_mėnesio_mėnesį',
    'MM': 'mėnesiai_mėnesių_mėnesius',
    'y' : 'metai_metų_metus',
    'yy': 'metai_metų_metus'
};
function translateSeconds(number, withoutSuffix, key, isFuture) {
    if (withoutSuffix) {
        return 'kelios sekundės';
    } else {
        return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
    }
}
function translateSingular(number, withoutSuffix, key, isFuture) {
    return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
}
function special(number) {
    return number % 10 === 0 || (number > 10 && number < 20);
}
function forms(key) {
    return units[key].split('_');
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    if (number === 1) {
        return result + translateSingular(number, withoutSuffix, key[0], isFuture);
    } else if (withoutSuffix) {
        return result + (special(number) ? forms(key)[1] : forms(key)[0]);
    } else {
        if (isFuture) {
            return result + forms(key)[1];
        } else {
            return result + (special(number) ? forms(key)[1] : forms(key)[2]);
        }
    }
}
var lt = moment.defineLocale('lt', {
    months : {
        format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
        standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
        isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
    },
    monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
    weekdays : {
        format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
        standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
        isFormat: /dddd HH:mm/
    },
    weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
    weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'YYYY [m.] MMMM D [d.]',
        LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
        LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
        l : 'YYYY-MM-DD',
        ll : 'YYYY [m.] MMMM D [d.]',
        lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
        llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
    },
    calendar : {
        sameDay : '[Šiandien] LT',
        nextDay : '[Rytoj] LT',
        nextWeek : 'dddd LT',
        lastDay : '[Vakar] LT',
        lastWeek : '[Praėjusį] dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'po %s',
        past : 'prieš %s',
        s : translateSeconds,
        ss : translate,
        m : translateSingular,
        mm : translate,
        h : translateSingular,
        hh : translate,
        d : translateSingular,
        dd : translate,
        M : translateSingular,
        MM : translate,
        y : translateSingular,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}-oji/,
    ordinal : function (number) {
        return number + '-oji';
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return lt;

})));


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Latvian [lv]
//! author : Kristaps Karlsons : https://github.com/skakri
//! author : Jānis Elmeris : https://github.com/JanisE

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var units = {
    'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
    'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
    'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
    'h': 'stundas_stundām_stunda_stundas'.split('_'),
    'hh': 'stundas_stundām_stunda_stundas'.split('_'),
    'd': 'dienas_dienām_diena_dienas'.split('_'),
    'dd': 'dienas_dienām_diena_dienas'.split('_'),
    'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
    'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
    'y': 'gada_gadiem_gads_gadi'.split('_'),
    'yy': 'gada_gadiem_gads_gadi'.split('_')
};
/**
 * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
 */
function format(forms, number, withoutSuffix) {
    if (withoutSuffix) {
        // E.g. "21 minūte", "3 minūtes".
        return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
    } else {
        // E.g. "21 minūtes" as in "pēc 21 minūtes".
        // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
        return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
    }
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    return number + ' ' + format(units[key], number, withoutSuffix);
}
function relativeTimeWithSingular(number, withoutSuffix, key) {
    return format(units[key], number, withoutSuffix);
}
function relativeSeconds(number, withoutSuffix) {
    return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
}

var lv = moment.defineLocale('lv', {
    months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
    monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
    weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
    weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
    weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY.',
        LL : 'YYYY. [gada] D. MMMM',
        LLL : 'YYYY. [gada] D. MMMM, HH:mm',
        LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
    },
    calendar : {
        sameDay : '[Šodien pulksten] LT',
        nextDay : '[Rīt pulksten] LT',
        nextWeek : 'dddd [pulksten] LT',
        lastDay : '[Vakar pulksten] LT',
        lastWeek : '[Pagājušā] dddd [pulksten] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'pēc %s',
        past : 'pirms %s',
        s : relativeSeconds,
        ss : relativeTimeWithPlural,
        m : relativeTimeWithSingular,
        mm : relativeTimeWithPlural,
        h : relativeTimeWithSingular,
        hh : relativeTimeWithPlural,
        d : relativeTimeWithSingular,
        dd : relativeTimeWithPlural,
        M : relativeTimeWithSingular,
        MM : relativeTimeWithPlural,
        y : relativeTimeWithSingular,
        yy : relativeTimeWithPlural
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return lv;

})));


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Montenegrin [me]
//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var translator = {
    words: { //Different grammatical cases
        ss: ['sekund', 'sekunda', 'sekundi'],
        m: ['jedan minut', 'jednog minuta'],
        mm: ['minut', 'minuta', 'minuta'],
        h: ['jedan sat', 'jednog sata'],
        hh: ['sat', 'sata', 'sati'],
        dd: ['dan', 'dana', 'dana'],
        MM: ['mjesec', 'mjeseca', 'mjeseci'],
        yy: ['godina', 'godine', 'godina']
    },
    correctGrammaticalCase: function (number, wordKey) {
        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
    },
    translate: function (number, withoutSuffix, key) {
        var wordKey = translator.words[key];
        if (key.length === 1) {
            return withoutSuffix ? wordKey[0] : wordKey[1];
        } else {
            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
        }
    }
};

var me = moment.defineLocale('me', {
    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact : true,
    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm',
        LLLL: 'dddd, D. MMMM YYYY H:mm'
    },
    calendar: {
        sameDay: '[danas u] LT',
        nextDay: '[sjutra u] LT',

        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedjelju] [u] LT';
                case 3:
                    return '[u] [srijedu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[juče u] LT',
        lastWeek : function () {
            var lastWeekDays = [
                '[prošle] [nedjelje] [u] LT',
                '[prošlog] [ponedjeljka] [u] LT',
                '[prošlog] [utorka] [u] LT',
                '[prošle] [srijede] [u] LT',
                '[prošlog] [četvrtka] [u] LT',
                '[prošlog] [petka] [u] LT',
                '[prošle] [subote] [u] LT'
            ];
            return lastWeekDays[this.day()];
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'prije %s',
        s      : 'nekoliko sekundi',
        ss     : translator.translate,
        m      : translator.translate,
        mm     : translator.translate,
        h      : translator.translate,
        hh     : translator.translate,
        d      : 'dan',
        dd     : translator.translate,
        M      : 'mjesec',
        MM     : translator.translate,
        y      : 'godinu',
        yy     : translator.translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return me;

})));


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maori [mi]
//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var mi = moment.defineLocale('mi', {
    months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
    monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
    monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
    weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
    weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
    weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
    longDateFormat: {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY [i] HH:mm',
        LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
    },
    calendar: {
        sameDay: '[i teie mahana, i] LT',
        nextDay: '[apopo i] LT',
        nextWeek: 'dddd [i] LT',
        lastDay: '[inanahi i] LT',
        lastWeek: 'dddd [whakamutunga i] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'i roto i %s',
        past: '%s i mua',
        s: 'te hēkona ruarua',
        ss: '%d hēkona',
        m: 'he meneti',
        mm: '%d meneti',
        h: 'te haora',
        hh: '%d haora',
        d: 'he ra',
        dd: '%d ra',
        M: 'he marama',
        MM: '%d marama',
        y: 'he tau',
        yy: '%d tau'
    },
    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return mi;

})));


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Macedonian [mk]
//! author : Borislav Mickov : https://github.com/B0k0

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var mk = moment.defineLocale('mk', {
    months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
    monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
    weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
    weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
    weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'D.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY H:mm',
        LLLL : 'dddd, D MMMM YYYY H:mm'
    },
    calendar : {
        sameDay : '[Денес во] LT',
        nextDay : '[Утре во] LT',
        nextWeek : '[Во] dddd [во] LT',
        lastDay : '[Вчера во] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 6:
                    return '[Изминатата] dddd [во] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[Изминатиот] dddd [во] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'после %s',
        past : 'пред %s',
        s : 'неколку секунди',
        ss : '%d секунди',
        m : 'минута',
        mm : '%d минути',
        h : 'час',
        hh : '%d часа',
        d : 'ден',
        dd : '%d дена',
        M : 'месец',
        MM : '%d месеци',
        y : 'година',
        yy : '%d години'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
    ordinal : function (number) {
        var lastDigit = number % 10,
            last2Digits = number % 100;
        if (number === 0) {
            return number + '-ев';
        } else if (last2Digits === 0) {
            return number + '-ен';
        } else if (last2Digits > 10 && last2Digits < 20) {
            return number + '-ти';
        } else if (lastDigit === 1) {
            return number + '-ви';
        } else if (lastDigit === 2) {
            return number + '-ри';
        } else if (lastDigit === 7 || lastDigit === 8) {
            return number + '-ми';
        } else {
            return number + '-ти';
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return mk;

})));


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malayalam [ml]
//! author : Floyd Pink : https://github.com/floydpink

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ml = moment.defineLocale('ml', {
    months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
    monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
    monthsParseExact : true,
    weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
    weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
    weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm -നു',
        LTS : 'A h:mm:ss -നു',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm -നു',
        LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
    },
    calendar : {
        sameDay : '[ഇന്ന്] LT',
        nextDay : '[നാളെ] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[ഇന്നലെ] LT',
        lastWeek : '[കഴിഞ്ഞ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s കഴിഞ്ഞ്',
        past : '%s മുൻപ്',
        s : 'അൽപ നിമിഷങ്ങൾ',
        ss : '%d സെക്കൻഡ്',
        m : 'ഒരു മിനിറ്റ്',
        mm : '%d മിനിറ്റ്',
        h : 'ഒരു മണിക്കൂർ',
        hh : '%d മണിക്കൂർ',
        d : 'ഒരു ദിവസം',
        dd : '%d ദിവസം',
        M : 'ഒരു മാസം',
        MM : '%d മാസം',
        y : 'ഒരു വർഷം',
        yy : '%d വർഷം'
    },
    meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if ((meridiem === 'രാത്രി' && hour >= 4) ||
                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                meridiem === 'വൈകുന്നേരം') {
            return hour + 12;
        } else {
            return hour;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'രാത്രി';
        } else if (hour < 12) {
            return 'രാവിലെ';
        } else if (hour < 17) {
            return 'ഉച്ച കഴിഞ്ഞ്';
        } else if (hour < 20) {
            return 'വൈകുന്നേരം';
        } else {
            return 'രാത്രി';
        }
    }
});

return ml;

})));


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Marathi [mr]
//! author : Harshad Kale : https://github.com/kalehv
//! author : Vivek Athalye : https://github.com/vnathalye

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '१',
    '2': '२',
    '3': '३',
    '4': '४',
    '5': '५',
    '6': '६',
    '7': '७',
    '8': '८',
    '9': '९',
    '0': '०'
};
var numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0'
};

function relativeTimeMr(number, withoutSuffix, string, isFuture)
{
    var output = '';
    if (withoutSuffix) {
        switch (string) {
            case 's': output = 'काही सेकंद'; break;
            case 'ss': output = '%d सेकंद'; break;
            case 'm': output = 'एक मिनिट'; break;
            case 'mm': output = '%d मिनिटे'; break;
            case 'h': output = 'एक तास'; break;
            case 'hh': output = '%d तास'; break;
            case 'd': output = 'एक दिवस'; break;
            case 'dd': output = '%d दिवस'; break;
            case 'M': output = 'एक महिना'; break;
            case 'MM': output = '%d महिने'; break;
            case 'y': output = 'एक वर्ष'; break;
            case 'yy': output = '%d वर्षे'; break;
        }
    }
    else {
        switch (string) {
            case 's': output = 'काही सेकंदां'; break;
            case 'ss': output = '%d सेकंदां'; break;
            case 'm': output = 'एका मिनिटा'; break;
            case 'mm': output = '%d मिनिटां'; break;
            case 'h': output = 'एका तासा'; break;
            case 'hh': output = '%d तासां'; break;
            case 'd': output = 'एका दिवसा'; break;
            case 'dd': output = '%d दिवसां'; break;
            case 'M': output = 'एका महिन्या'; break;
            case 'MM': output = '%d महिन्यां'; break;
            case 'y': output = 'एका वर्षा'; break;
            case 'yy': output = '%d वर्षां'; break;
        }
    }
    return output.replace(/%d/i, number);
}

var mr = moment.defineLocale('mr', {
    months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
    monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
    monthsParseExact : true,
    weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
    weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
    longDateFormat : {
        LT : 'A h:mm वाजता',
        LTS : 'A h:mm:ss वाजता',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm वाजता',
        LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
    },
    calendar : {
        sameDay : '[आज] LT',
        nextDay : '[उद्या] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[काल] LT',
        lastWeek: '[मागील] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future: '%sमध्ये',
        past: '%sपूर्वी',
        s: relativeTimeMr,
        ss: relativeTimeMr,
        m: relativeTimeMr,
        mm: relativeTimeMr,
        h: relativeTimeMr,
        hh: relativeTimeMr,
        d: relativeTimeMr,
        dd: relativeTimeMr,
        M: relativeTimeMr,
        MM: relativeTimeMr,
        y: relativeTimeMr,
        yy: relativeTimeMr
    },
    preparse: function (string) {
        return string.replace(/[१२३४५६७८९०]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'रात्री') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'सकाळी') {
            return hour;
        } else if (meridiem === 'दुपारी') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'सायंकाळी') {
            return hour + 12;
        }
    },
    meridiem: function (hour, minute, isLower) {
        if (hour < 4) {
            return 'रात्री';
        } else if (hour < 10) {
            return 'सकाळी';
        } else if (hour < 17) {
            return 'दुपारी';
        } else if (hour < 20) {
            return 'सायंकाळी';
        } else {
            return 'रात्री';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return mr;

})));


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms-my]
//! note : DEPRECATED, the correct one is [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var msMy = moment.defineLocale('ms-my', {
    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /pagi|tengahari|petang|malam/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'pagi') {
            return hour;
        } else if (meridiem === 'tengahari') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'petang' || meridiem === 'malam') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'pagi';
        } else if (hours < 15) {
            return 'tengahari';
        } else if (hours < 19) {
            return 'petang';
        } else {
            return 'malam';
        }
    },
    calendar : {
        sameDay : '[Hari ini pukul] LT',
        nextDay : '[Esok pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kelmarin pukul] LT',
        lastWeek : 'dddd [lepas pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dalam %s',
        past : '%s yang lepas',
        s : 'beberapa saat',
        ss : '%d saat',
        m : 'seminit',
        mm : '%d minit',
        h : 'sejam',
        hh : '%d jam',
        d : 'sehari',
        dd : '%d hari',
        M : 'sebulan',
        MM : '%d bulan',
        y : 'setahun',
        yy : '%d tahun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return msMy;

})));


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ms = moment.defineLocale('ms', {
    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /pagi|tengahari|petang|malam/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'pagi') {
            return hour;
        } else if (meridiem === 'tengahari') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'petang' || meridiem === 'malam') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'pagi';
        } else if (hours < 15) {
            return 'tengahari';
        } else if (hours < 19) {
            return 'petang';
        } else {
            return 'malam';
        }
    },
    calendar : {
        sameDay : '[Hari ini pukul] LT',
        nextDay : '[Esok pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kelmarin pukul] LT',
        lastWeek : 'dddd [lepas pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dalam %s',
        past : '%s yang lepas',
        s : 'beberapa saat',
        ss : '%d saat',
        m : 'seminit',
        mm : '%d minit',
        h : 'sejam',
        hh : '%d jam',
        d : 'sehari',
        dd : '%d hari',
        M : 'sebulan',
        MM : '%d bulan',
        y : 'setahun',
        yy : '%d tahun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return ms;

})));


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maltese (Malta) [mt]
//! author : Alessandro Maruccia : https://github.com/alesma

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var mt = moment.defineLocale('mt', {
    months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
    monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
    weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
    weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
    weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Illum fil-]LT',
        nextDay : '[Għada fil-]LT',
        nextWeek : 'dddd [fil-]LT',
        lastDay : '[Il-bieraħ fil-]LT',
        lastWeek : 'dddd [li għadda] [fil-]LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'f’ %s',
        past : '%s ilu',
        s : 'ftit sekondi',
        ss : '%d sekondi',
        m : 'minuta',
        mm : '%d minuti',
        h : 'siegħa',
        hh : '%d siegħat',
        d : 'ġurnata',
        dd : '%d ġranet',
        M : 'xahar',
        MM : '%d xhur',
        y : 'sena',
        yy : '%d sni'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal: '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return mt;

})));


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Burmese [my]
//! author : Squar team, mysquar.com
//! author : David Rossellat : https://github.com/gholadr
//! author : Tin Aung Lin : https://github.com/thanyawzinmin

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '၁',
    '2': '၂',
    '3': '၃',
    '4': '၄',
    '5': '၅',
    '6': '၆',
    '7': '၇',
    '8': '၈',
    '9': '၉',
    '0': '၀'
};
var numberMap = {
    '၁': '1',
    '၂': '2',
    '၃': '3',
    '၄': '4',
    '၅': '5',
    '၆': '6',
    '၇': '7',
    '၈': '8',
    '၉': '9',
    '၀': '0'
};

var my = moment.defineLocale('my', {
    months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
    monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
    weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
    weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
    weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

    longDateFormat: {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[ယနေ.] LT [မှာ]',
        nextDay: '[မနက်ဖြန်] LT [မှာ]',
        nextWeek: 'dddd LT [မှာ]',
        lastDay: '[မနေ.က] LT [မှာ]',
        lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'လာမည့် %s မှာ',
        past: 'လွန်ခဲ့သော %s က',
        s: 'စက္ကန်.အနည်းငယ်',
        ss : '%d စက္ကန့်',
        m: 'တစ်မိနစ်',
        mm: '%d မိနစ်',
        h: 'တစ်နာရီ',
        hh: '%d နာရီ',
        d: 'တစ်ရက်',
        dd: '%d ရက်',
        M: 'တစ်လ',
        MM: '%d လ',
        y: 'တစ်နှစ်',
        yy: '%d နှစ်'
    },
    preparse: function (string) {
        return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4 // The week that contains Jan 1st is the first week of the year.
    }
});

return my;

})));


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Norwegian Bokmål [nb]
//! authors : Espen Hovlandsdal : https://github.com/rexxars
//!           Sigurd Gartmann : https://github.com/sigurdga

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var nb = moment.defineLocale('nb', {
    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
    monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
    monthsParseExact : true,
    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
    weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY [kl.] HH:mm',
        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
    },
    calendar : {
        sameDay: '[i dag kl.] LT',
        nextDay: '[i morgen kl.] LT',
        nextWeek: 'dddd [kl.] LT',
        lastDay: '[i går kl.] LT',
        lastWeek: '[forrige] dddd [kl.] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : '%s siden',
        s : 'noen sekunder',
        ss : '%d sekunder',
        m : 'ett minutt',
        mm : '%d minutter',
        h : 'en time',
        hh : '%d timer',
        d : 'en dag',
        dd : '%d dager',
        M : 'en måned',
        MM : '%d måneder',
        y : 'ett år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nb;

})));


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nepalese [ne]
//! author : suvash : https://github.com/suvash

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '१',
    '2': '२',
    '3': '३',
    '4': '४',
    '5': '५',
    '6': '६',
    '7': '७',
    '8': '८',
    '9': '९',
    '0': '०'
};
var numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0'
};

var ne = moment.defineLocale('ne', {
    months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
    monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
    monthsParseExact : true,
    weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
    weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
    weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'Aको h:mm बजे',
        LTS : 'Aको h:mm:ss बजे',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, Aको h:mm बजे',
        LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
    },
    preparse: function (string) {
        return string.replace(/[१२३४५६७८९०]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'राति') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'बिहान') {
            return hour;
        } else if (meridiem === 'दिउँसो') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'साँझ') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 3) {
            return 'राति';
        } else if (hour < 12) {
            return 'बिहान';
        } else if (hour < 16) {
            return 'दिउँसो';
        } else if (hour < 20) {
            return 'साँझ';
        } else {
            return 'राति';
        }
    },
    calendar : {
        sameDay : '[आज] LT',
        nextDay : '[भोलि] LT',
        nextWeek : '[आउँदो] dddd[,] LT',
        lastDay : '[हिजो] LT',
        lastWeek : '[गएको] dddd[,] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%sमा',
        past : '%s अगाडि',
        s : 'केही क्षण',
        ss : '%d सेकेण्ड',
        m : 'एक मिनेट',
        mm : '%d मिनेट',
        h : 'एक घण्टा',
        hh : '%d घण्टा',
        d : 'एक दिन',
        dd : '%d दिन',
        M : 'एक महिना',
        MM : '%d महिना',
        y : 'एक बर्ष',
        yy : '%d बर्ष'
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return ne;

})));


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch (Belgium) [nl-be]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

var nlBe = moment.defineLocale('nl-be', {
    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortWithDots;
        } else if (/-MMM-/.test(format)) {
            return monthsShortWithoutDots[m.month()];
        } else {
            return monthsShortWithDots[m.month()];
        }
    },

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,

    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
    weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[vandaag om] LT',
        nextDay: '[morgen om] LT',
        nextWeek: 'dddd [om] LT',
        lastDay: '[gisteren om] LT',
        lastWeek: '[afgelopen] dddd [om] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'over %s',
        past : '%s geleden',
        s : 'een paar seconden',
        ss : '%d seconden',
        m : 'één minuut',
        mm : '%d minuten',
        h : 'één uur',
        hh : '%d uur',
        d : 'één dag',
        dd : '%d dagen',
        M : 'één maand',
        MM : '%d maanden',
        y : 'één jaar',
        yy : '%d jaar'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nlBe;

})));


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch [nl]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

var nl = moment.defineLocale('nl', {
    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortWithDots;
        } else if (/-MMM-/.test(format)) {
            return monthsShortWithoutDots[m.month()];
        } else {
            return monthsShortWithDots[m.month()];
        }
    },

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,

    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
    weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[vandaag om] LT',
        nextDay: '[morgen om] LT',
        nextWeek: 'dddd [om] LT',
        lastDay: '[gisteren om] LT',
        lastWeek: '[afgelopen] dddd [om] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'over %s',
        past : '%s geleden',
        s : 'een paar seconden',
        ss : '%d seconden',
        m : 'één minuut',
        mm : '%d minuten',
        h : 'één uur',
        hh : '%d uur',
        d : 'één dag',
        dd : '%d dagen',
        M : 'één maand',
        MM : '%d maanden',
        y : 'één jaar',
        yy : '%d jaar'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nl;

})));


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nynorsk [nn]
//! author : https://github.com/mechuwind

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var nn = moment.defineLocale('nn', {
    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
    weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
    weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
    weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY [kl.] H:mm',
        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
    },
    calendar : {
        sameDay: '[I dag klokka] LT',
        nextDay: '[I morgon klokka] LT',
        nextWeek: 'dddd [klokka] LT',
        lastDay: '[I går klokka] LT',
        lastWeek: '[Føregåande] dddd [klokka] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : '%s sidan',
        s : 'nokre sekund',
        ss : '%d sekund',
        m : 'eit minutt',
        mm : '%d minutt',
        h : 'ein time',
        hh : '%d timar',
        d : 'ein dag',
        dd : '%d dagar',
        M : 'ein månad',
        MM : '%d månader',
        y : 'eit år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nn;

})));


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Punjabi (India) [pa-in]
//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '੧',
    '2': '੨',
    '3': '੩',
    '4': '੪',
    '5': '੫',
    '6': '੬',
    '7': '੭',
    '8': '੮',
    '9': '੯',
    '0': '੦'
};
var numberMap = {
    '੧': '1',
    '੨': '2',
    '੩': '3',
    '੪': '4',
    '੫': '5',
    '੬': '6',
    '੭': '7',
    '੮': '8',
    '੯': '9',
    '੦': '0'
};

var paIn = moment.defineLocale('pa-in', {
    // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
    months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
    monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
    weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
    weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
    weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm ਵਜੇ',
        LTS : 'A h:mm:ss ਵਜੇ',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
        LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
    },
    calendar : {
        sameDay : '[ਅਜ] LT',
        nextDay : '[ਕਲ] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[ਕਲ] LT',
        lastWeek : '[ਪਿਛਲੇ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ਵਿੱਚ',
        past : '%s ਪਿਛਲੇ',
        s : 'ਕੁਝ ਸਕਿੰਟ',
        ss : '%d ਸਕਿੰਟ',
        m : 'ਇਕ ਮਿੰਟ',
        mm : '%d ਮਿੰਟ',
        h : 'ਇੱਕ ਘੰਟਾ',
        hh : '%d ਘੰਟੇ',
        d : 'ਇੱਕ ਦਿਨ',
        dd : '%d ਦਿਨ',
        M : 'ਇੱਕ ਮਹੀਨਾ',
        MM : '%d ਮਹੀਨੇ',
        y : 'ਇੱਕ ਸਾਲ',
        yy : '%d ਸਾਲ'
    },
    preparse: function (string) {
        return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'ਰਾਤ') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'ਸਵੇਰ') {
            return hour;
        } else if (meridiem === 'ਦੁਪਹਿਰ') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'ਸ਼ਾਮ') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ਰਾਤ';
        } else if (hour < 10) {
            return 'ਸਵੇਰ';
        } else if (hour < 17) {
            return 'ਦੁਪਹਿਰ';
        } else if (hour < 20) {
            return 'ਸ਼ਾਮ';
        } else {
            return 'ਰਾਤ';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return paIn;

})));


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Polish [pl]
//! author : Rafal Hirsz : https://github.com/evoL

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');
var monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
function plural(n) {
    return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
}
function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
        case 'ss':
            return result + (plural(number) ? 'sekundy' : 'sekund');
        case 'm':
            return withoutSuffix ? 'minuta' : 'minutę';
        case 'mm':
            return result + (plural(number) ? 'minuty' : 'minut');
        case 'h':
            return withoutSuffix  ? 'godzina'  : 'godzinę';
        case 'hh':
            return result + (plural(number) ? 'godziny' : 'godzin');
        case 'MM':
            return result + (plural(number) ? 'miesiące' : 'miesięcy');
        case 'yy':
            return result + (plural(number) ? 'lata' : 'lat');
    }
}

var pl = moment.defineLocale('pl', {
    months : function (momentToFormat, format) {
        if (!momentToFormat) {
            return monthsNominative;
        } else if (format === '') {
            // Hack: if format empty we know this is used to generate
            // RegExp by moment. Give then back both valid forms of months
            // in RegExp ready format.
            return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
        } else if (/D MMMM/.test(format)) {
            return monthsSubjective[momentToFormat.month()];
        } else {
            return monthsNominative[momentToFormat.month()];
        }
    },
    monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
    weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
    weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
    weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Dziś o] LT',
        nextDay: '[Jutro o] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[W niedzielę o] LT';

                case 2:
                    return '[We wtorek o] LT';

                case 3:
                    return '[W środę o] LT';

                case 6:
                    return '[W sobotę o] LT';

                default:
                    return '[W] dddd [o] LT';
            }
        },
        lastDay: '[Wczoraj o] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[W zeszłą niedzielę o] LT';
                case 3:
                    return '[W zeszłą środę o] LT';
                case 6:
                    return '[W zeszłą sobotę o] LT';
                default:
                    return '[W zeszły] dddd [o] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'za %s',
        past : '%s temu',
        s : 'kilka sekund',
        ss : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : '1 dzień',
        dd : '%d dni',
        M : 'miesiąc',
        MM : translate,
        y : 'rok',
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return pl;

})));


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese (Brazil) [pt-br]
//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ptBr = moment.defineLocale('pt-br', {
    months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
    monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
    weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
    weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
    },
    calendar : {
        sameDay: '[Hoje às] LT',
        nextDay: '[Amanhã às] LT',
        nextWeek: 'dddd [às] LT',
        lastDay: '[Ontem às] LT',
        lastWeek: function () {
            return (this.day() === 0 || this.day() === 6) ?
                '[Último] dddd [às] LT' : // Saturday + Sunday
                '[Última] dddd [às] LT'; // Monday - Friday
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'em %s',
        past : '%s atrás',
        s : 'poucos segundos',
        ss : '%d segundos',
        m : 'um minuto',
        mm : '%d minutos',
        h : 'uma hora',
        hh : '%d horas',
        d : 'um dia',
        dd : '%d dias',
        M : 'um mês',
        MM : '%d meses',
        y : 'um ano',
        yy : '%d anos'
    },
    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal : '%dº'
});

return ptBr;

})));


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese [pt]
//! author : Jefferson : https://github.com/jalex79

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var pt = moment.defineLocale('pt', {
    months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
    monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
    weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
    weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY HH:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Hoje às] LT',
        nextDay: '[Amanhã às] LT',
        nextWeek: 'dddd [às] LT',
        lastDay: '[Ontem às] LT',
        lastWeek: function () {
            return (this.day() === 0 || this.day() === 6) ?
                '[Último] dddd [às] LT' : // Saturday + Sunday
                '[Última] dddd [às] LT'; // Monday - Friday
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'em %s',
        past : 'há %s',
        s : 'segundos',
        ss : '%d segundos',
        m : 'um minuto',
        mm : '%d minutos',
        h : 'uma hora',
        hh : '%d horas',
        d : 'um dia',
        dd : '%d dias',
        M : 'um mês',
        MM : '%d meses',
        y : 'um ano',
        yy : '%d anos'
    },
    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return pt;

})));


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Romanian [ro]
//! author : Vlad Gurdiga : https://github.com/gurdiga
//! author : Valentin Agachi : https://github.com/avaly

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
            'ss': 'secunde',
            'mm': 'minute',
            'hh': 'ore',
            'dd': 'zile',
            'MM': 'luni',
            'yy': 'ani'
        },
        separator = ' ';
    if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
        separator = ' de ';
    }
    return number + separator + format[key];
}

var ro = moment.defineLocale('ro', {
    months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
    monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
    weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
    weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY H:mm',
        LLLL : 'dddd, D MMMM YYYY H:mm'
    },
    calendar : {
        sameDay: '[azi la] LT',
        nextDay: '[mâine la] LT',
        nextWeek: 'dddd [la] LT',
        lastDay: '[ieri la] LT',
        lastWeek: '[fosta] dddd [la] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'peste %s',
        past : '%s în urmă',
        s : 'câteva secunde',
        ss : relativeTimeWithPlural,
        m : 'un minut',
        mm : relativeTimeWithPlural,
        h : 'o oră',
        hh : relativeTimeWithPlural,
        d : 'o zi',
        dd : relativeTimeWithPlural,
        M : 'o lună',
        MM : relativeTimeWithPlural,
        y : 'un an',
        yy : relativeTimeWithPlural
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return ro;

})));


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Russian [ru]
//! author : Viktorminator : https://github.com/Viktorminator
//! Author : Menelion Elensúle : https://github.com/Oire
//! author : Коренберг Марк : https://github.com/socketpair

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
        'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
        'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
        'hh': 'час_часа_часов',
        'dd': 'день_дня_дней',
        'MM': 'месяц_месяца_месяцев',
        'yy': 'год_года_лет'
    };
    if (key === 'm') {
        return withoutSuffix ? 'минута' : 'минуту';
    }
    else {
        return number + ' ' + plural(format[key], +number);
    }
}
var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

// http://new.gramota.ru/spravka/rules/139-prop : § 103
// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
var ru = moment.defineLocale('ru', {
    months : {
        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
    },
    monthsShort : {
        // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
    },
    weekdays : {
        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
        isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
    },
    weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,

    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
    monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    // копия предыдущего
    monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    // полные названия с падежами
    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

    // Выражение, которое соотвествует только сокращённым формам
    monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY г.',
        LLL : 'D MMMM YYYY г., H:mm',
        LLLL : 'dddd, D MMMM YYYY г., H:mm'
    },
    calendar : {
        sameDay: '[Сегодня в] LT',
        nextDay: '[Завтра в] LT',
        lastDay: '[Вчера в] LT',
        nextWeek: function (now) {
            if (now.week() !== this.week()) {
                switch (this.day()) {
                    case 0:
                        return '[В следующее] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[В следующий] dddd [в] LT';
                    case 3:
                    case 5:
                    case 6:
                        return '[В следующую] dddd [в] LT';
                }
            } else {
                if (this.day() === 2) {
                    return '[Во] dddd [в] LT';
                } else {
                    return '[В] dddd [в] LT';
                }
            }
        },
        lastWeek: function (now) {
            if (now.week() !== this.week()) {
                switch (this.day()) {
                    case 0:
                        return '[В прошлое] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[В прошлый] dddd [в] LT';
                    case 3:
                    case 5:
                    case 6:
                        return '[В прошлую] dddd [в] LT';
                }
            } else {
                if (this.day() === 2) {
                    return '[Во] dddd [в] LT';
                } else {
                    return '[В] dddd [в] LT';
                }
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'через %s',
        past : '%s назад',
        s : 'несколько секунд',
        ss : relativeTimeWithPlural,
        m : relativeTimeWithPlural,
        mm : relativeTimeWithPlural,
        h : 'час',
        hh : relativeTimeWithPlural,
        d : 'день',
        dd : relativeTimeWithPlural,
        M : 'месяц',
        MM : relativeTimeWithPlural,
        y : 'год',
        yy : relativeTimeWithPlural
    },
    meridiemParse: /ночи|утра|дня|вечера/i,
    isPM : function (input) {
        return /^(дня|вечера)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ночи';
        } else if (hour < 12) {
            return 'утра';
        } else if (hour < 17) {
            return 'дня';
        } else {
            return 'вечера';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'M':
            case 'd':
            case 'DDD':
                return number + '-й';
            case 'D':
                return number + '-го';
            case 'w':
            case 'W':
                return number + '-я';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ru;

})));


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sindhi [sd]
//! author : Narain Sagar : https://github.com/narainsagar

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = [
    'جنوري',
    'فيبروري',
    'مارچ',
    'اپريل',
    'مئي',
    'جون',
    'جولاءِ',
    'آگسٽ',
    'سيپٽمبر',
    'آڪٽوبر',
    'نومبر',
    'ڊسمبر'
];
var days = [
    'آچر',
    'سومر',
    'اڱارو',
    'اربع',
    'خميس',
    'جمع',
    'ڇنڇر'
];

var sd = moment.defineLocale('sd', {
    months : months,
    monthsShort : months,
    weekdays : days,
    weekdaysShort : days,
    weekdaysMin : days,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd، D MMMM YYYY HH:mm'
    },
    meridiemParse: /صبح|شام/,
    isPM : function (input) {
        return 'شام' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'صبح';
        }
        return 'شام';
    },
    calendar : {
        sameDay : '[اڄ] LT',
        nextDay : '[سڀاڻي] LT',
        nextWeek : 'dddd [اڳين هفتي تي] LT',
        lastDay : '[ڪالهه] LT',
        lastWeek : '[گزريل هفتي] dddd [تي] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s پوء',
        past : '%s اڳ',
        s : 'چند سيڪنڊ',
        ss : '%d سيڪنڊ',
        m : 'هڪ منٽ',
        mm : '%d منٽ',
        h : 'هڪ ڪلاڪ',
        hh : '%d ڪلاڪ',
        d : 'هڪ ڏينهن',
        dd : '%d ڏينهن',
        M : 'هڪ مهينو',
        MM : '%d مهينا',
        y : 'هڪ سال',
        yy : '%d سال'
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/,/g, '،');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sd;

})));


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Northern Sami [se]
//! authors : Bård Rolstad Henriksen : https://github.com/karamell

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';



var se = moment.defineLocale('se', {
    months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
    monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
    weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
    weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
    weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'MMMM D. [b.] YYYY',
        LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
        LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
    },
    calendar : {
        sameDay: '[otne ti] LT',
        nextDay: '[ihttin ti] LT',
        nextWeek: 'dddd [ti] LT',
        lastDay: '[ikte ti] LT',
        lastWeek: '[ovddit] dddd [ti] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s geažes',
        past : 'maŋit %s',
        s : 'moadde sekunddat',
        ss: '%d sekunddat',
        m : 'okta minuhta',
        mm : '%d minuhtat',
        h : 'okta diimmu',
        hh : '%d diimmut',
        d : 'okta beaivi',
        dd : '%d beaivvit',
        M : 'okta mánnu',
        MM : '%d mánut',
        y : 'okta jahki',
        yy : '%d jagit'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return se;

})));


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sinhalese [si]
//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


/*jshint -W100*/
var si = moment.defineLocale('si', {
    months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
    monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
    weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
    weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
    weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'a h:mm',
        LTS : 'a h:mm:ss',
        L : 'YYYY/MM/DD',
        LL : 'YYYY MMMM D',
        LLL : 'YYYY MMMM D, a h:mm',
        LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
    },
    calendar : {
        sameDay : '[අද] LT[ට]',
        nextDay : '[හෙට] LT[ට]',
        nextWeek : 'dddd LT[ට]',
        lastDay : '[ඊයේ] LT[ට]',
        lastWeek : '[පසුගිය] dddd LT[ට]',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%sකින්',
        past : '%sකට පෙර',
        s : 'තත්පර කිහිපය',
        ss : 'තත්පර %d',
        m : 'මිනිත්තුව',
        mm : 'මිනිත්තු %d',
        h : 'පැය',
        hh : 'පැය %d',
        d : 'දිනය',
        dd : 'දින %d',
        M : 'මාසය',
        MM : 'මාස %d',
        y : 'වසර',
        yy : 'වසර %d'
    },
    dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
    ordinal : function (number) {
        return number + ' වැනි';
    },
    meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
    isPM : function (input) {
        return input === 'ප.ව.' || input === 'පස් වරු';
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'ප.ව.' : 'පස් වරු';
        } else {
            return isLower ? 'පෙ.ව.' : 'පෙර වරු';
        }
    }
});

return si;

})));


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovak [sk]
//! author : Martin Minka : https://github.com/k2s
//! based on work of petrbela : https://github.com/petrbela

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');
var monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
function plural(n) {
    return (n > 1) && (n < 5);
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':  // a few seconds / in a few seconds / a few seconds ago
            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'sekundy' : 'sekúnd');
            } else {
                return result + 'sekundami';
            }
            break;
        case 'm':  // a minute / in a minute / a minute ago
            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'minúty' : 'minút');
            } else {
                return result + 'minútami';
            }
            break;
        case 'h':  // an hour / in an hour / an hour ago
            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
        case 'hh': // 9 hours / in 9 hours / 9 hours ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'hodiny' : 'hodín');
            } else {
                return result + 'hodinami';
            }
            break;
        case 'd':  // a day / in a day / a day ago
            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
        case 'dd': // 9 days / in 9 days / 9 days ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'dni' : 'dní');
            } else {
                return result + 'dňami';
            }
            break;
        case 'M':  // a month / in a month / a month ago
            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
        case 'MM': // 9 months / in 9 months / 9 months ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'mesiace' : 'mesiacov');
            } else {
                return result + 'mesiacmi';
            }
            break;
        case 'y':  // a year / in a year / a year ago
            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
        case 'yy': // 9 years / in 9 years / 9 years ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'roky' : 'rokov');
            } else {
                return result + 'rokmi';
            }
            break;
    }
}

var sk = moment.defineLocale('sk', {
    months : months,
    monthsShort : monthsShort,
    weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
    weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
    weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
    longDateFormat : {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay: '[dnes o] LT',
        nextDay: '[zajtra o] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[v nedeľu o] LT';
                case 1:
                case 2:
                    return '[v] dddd [o] LT';
                case 3:
                    return '[v stredu o] LT';
                case 4:
                    return '[vo štvrtok o] LT';
                case 5:
                    return '[v piatok o] LT';
                case 6:
                    return '[v sobotu o] LT';
            }
        },
        lastDay: '[včera o] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[minulú nedeľu o] LT';
                case 1:
                case 2:
                    return '[minulý] dddd [o] LT';
                case 3:
                    return '[minulú stredu o] LT';
                case 4:
                case 5:
                    return '[minulý] dddd [o] LT';
                case 6:
                    return '[minulú sobotu o] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'za %s',
        past : 'pred %s',
        s : translate,
        ss : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sk;

})));


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovenian [sl]
//! author : Robert Sedovšek : https://github.com/sedovsek

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':
            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
        case 'ss':
            if (number === 1) {
                result += withoutSuffix ? 'sekundo' : 'sekundi';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
            } else {
                result += withoutSuffix || isFuture ? 'sekund' : 'sekund';
            }
            return result;
        case 'm':
            return withoutSuffix ? 'ena minuta' : 'eno minuto';
        case 'mm':
            if (number === 1) {
                result += withoutSuffix ? 'minuta' : 'minuto';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
            } else {
                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
            }
            return result;
        case 'h':
            return withoutSuffix ? 'ena ura' : 'eno uro';
        case 'hh':
            if (number === 1) {
                result += withoutSuffix ? 'ura' : 'uro';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'uri' : 'urama';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'ure' : 'urami';
            } else {
                result += withoutSuffix || isFuture ? 'ur' : 'urami';
            }
            return result;
        case 'd':
            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
        case 'dd':
            if (number === 1) {
                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
            } else {
                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
            }
            return result;
        case 'M':
            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
        case 'MM':
            if (number === 1) {
                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
            } else {
                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
            }
            return result;
        case 'y':
            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
        case 'yy':
            if (number === 1) {
                result += withoutSuffix || isFuture ? 'leto' : 'letom';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'leta' : 'leti';
            } else {
                result += withoutSuffix || isFuture ? 'let' : 'leti';
            }
            return result;
    }
}

var sl = moment.defineLocale('sl', {
    months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
    weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
    weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[danes ob] LT',
        nextDay  : '[jutri ob] LT',

        nextWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[v] [nedeljo] [ob] LT';
                case 3:
                    return '[v] [sredo] [ob] LT';
                case 6:
                    return '[v] [soboto] [ob] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[v] dddd [ob] LT';
            }
        },
        lastDay  : '[včeraj ob] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[prejšnjo] [nedeljo] [ob] LT';
                case 3:
                    return '[prejšnjo] [sredo] [ob] LT';
                case 6:
                    return '[prejšnjo] [soboto] [ob] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[prejšnji] dddd [ob] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'čez %s',
        past   : 'pred %s',
        s      : processRelativeTime,
        ss     : processRelativeTime,
        m      : processRelativeTime,
        mm     : processRelativeTime,
        h      : processRelativeTime,
        hh     : processRelativeTime,
        d      : processRelativeTime,
        dd     : processRelativeTime,
        M      : processRelativeTime,
        MM     : processRelativeTime,
        y      : processRelativeTime,
        yy     : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return sl;

})));


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Albanian [sq]
//! author : Flakërim Ismani : https://github.com/flakerimi
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Oerd Cukalla : https://github.com/oerd

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var sq = moment.defineLocale('sq', {
    months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
    monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
    weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
    weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
    weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
    weekdaysParseExact : true,
    meridiemParse: /PD|MD/,
    isPM: function (input) {
        return input.charAt(0) === 'M';
    },
    meridiem : function (hours, minutes, isLower) {
        return hours < 12 ? 'PD' : 'MD';
    },
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Sot në] LT',
        nextDay : '[Nesër në] LT',
        nextWeek : 'dddd [në] LT',
        lastDay : '[Dje në] LT',
        lastWeek : 'dddd [e kaluar në] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'në %s',
        past : '%s më parë',
        s : 'disa sekonda',
        ss : '%d sekonda',
        m : 'një minutë',
        mm : '%d minuta',
        h : 'një orë',
        hh : '%d orë',
        d : 'një ditë',
        dd : '%d ditë',
        M : 'një muaj',
        MM : '%d muaj',
        y : 'një vit',
        yy : '%d vite'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sq;

})));


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian Cyrillic [sr-cyrl]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var translator = {
    words: { //Different grammatical cases
        ss: ['секунда', 'секунде', 'секунди'],
        m: ['један минут', 'једне минуте'],
        mm: ['минут', 'минуте', 'минута'],
        h: ['један сат', 'једног сата'],
        hh: ['сат', 'сата', 'сати'],
        dd: ['дан', 'дана', 'дана'],
        MM: ['месец', 'месеца', 'месеци'],
        yy: ['година', 'године', 'година']
    },
    correctGrammaticalCase: function (number, wordKey) {
        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
    },
    translate: function (number, withoutSuffix, key) {
        var wordKey = translator.words[key];
        if (key.length === 1) {
            return withoutSuffix ? wordKey[0] : wordKey[1];
        } else {
            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
        }
    }
};

var srCyrl = moment.defineLocale('sr-cyrl', {
    months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
    monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
    monthsParseExact: true,
    weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
    weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
    weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm',
        LLLL: 'dddd, D. MMMM YYYY H:mm'
    },
    calendar: {
        sameDay: '[данас у] LT',
        nextDay: '[сутра у] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[у] [недељу] [у] LT';
                case 3:
                    return '[у] [среду] [у] LT';
                case 6:
                    return '[у] [суботу] [у] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[у] dddd [у] LT';
            }
        },
        lastDay  : '[јуче у] LT',
        lastWeek : function () {
            var lastWeekDays = [
                '[прошле] [недеље] [у] LT',
                '[прошлог] [понедељка] [у] LT',
                '[прошлог] [уторка] [у] LT',
                '[прошле] [среде] [у] LT',
                '[прошлог] [четвртка] [у] LT',
                '[прошлог] [петка] [у] LT',
                '[прошле] [суботе] [у] LT'
            ];
            return lastWeekDays[this.day()];
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'за %s',
        past   : 'пре %s',
        s      : 'неколико секунди',
        ss     : translator.translate,
        m      : translator.translate,
        mm     : translator.translate,
        h      : translator.translate,
        hh     : translator.translate,
        d      : 'дан',
        dd     : translator.translate,
        M      : 'месец',
        MM     : translator.translate,
        y      : 'годину',
        yy     : translator.translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return srCyrl;

})));


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian [sr]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var translator = {
    words: { //Different grammatical cases
        ss: ['sekunda', 'sekunde', 'sekundi'],
        m: ['jedan minut', 'jedne minute'],
        mm: ['minut', 'minute', 'minuta'],
        h: ['jedan sat', 'jednog sata'],
        hh: ['sat', 'sata', 'sati'],
        dd: ['dan', 'dana', 'dana'],
        MM: ['mesec', 'meseca', 'meseci'],
        yy: ['godina', 'godine', 'godina']
    },
    correctGrammaticalCase: function (number, wordKey) {
        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
    },
    translate: function (number, withoutSuffix, key) {
        var wordKey = translator.words[key];
        if (key.length === 1) {
            return withoutSuffix ? wordKey[0] : wordKey[1];
        } else {
            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
        }
    }
};

var sr = moment.defineLocale('sr', {
    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
    weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm',
        LLLL: 'dddd, D. MMMM YYYY H:mm'
    },
    calendar: {
        sameDay: '[danas u] LT',
        nextDay: '[sutra u] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedelju] [u] LT';
                case 3:
                    return '[u] [sredu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[juče u] LT',
        lastWeek : function () {
            var lastWeekDays = [
                '[prošle] [nedelje] [u] LT',
                '[prošlog] [ponedeljka] [u] LT',
                '[prošlog] [utorka] [u] LT',
                '[prošle] [srede] [u] LT',
                '[prošlog] [četvrtka] [u] LT',
                '[prošlog] [petka] [u] LT',
                '[prošle] [subote] [u] LT'
            ];
            return lastWeekDays[this.day()];
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'pre %s',
        s      : 'nekoliko sekundi',
        ss     : translator.translate,
        m      : translator.translate,
        mm     : translator.translate,
        h      : translator.translate,
        hh     : translator.translate,
        d      : 'dan',
        dd     : translator.translate,
        M      : 'mesec',
        MM     : translator.translate,
        y      : 'godinu',
        yy     : translator.translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return sr;

})));


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : siSwati [ss]
//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';



var ss = moment.defineLocale('ss', {
    months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
    monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
    weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
    weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
    weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Namuhla nga] LT',
        nextDay : '[Kusasa nga] LT',
        nextWeek : 'dddd [nga] LT',
        lastDay : '[Itolo nga] LT',
        lastWeek : 'dddd [leliphelile] [nga] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'nga %s',
        past : 'wenteka nga %s',
        s : 'emizuzwana lomcane',
        ss : '%d mzuzwana',
        m : 'umzuzu',
        mm : '%d emizuzu',
        h : 'lihora',
        hh : '%d emahora',
        d : 'lilanga',
        dd : '%d emalanga',
        M : 'inyanga',
        MM : '%d tinyanga',
        y : 'umnyaka',
        yy : '%d iminyaka'
    },
    meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'ekuseni';
        } else if (hours < 15) {
            return 'emini';
        } else if (hours < 19) {
            return 'entsambama';
        } else {
            return 'ebusuku';
        }
    },
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'ekuseni') {
            return hour;
        } else if (meridiem === 'emini') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
            if (hour === 0) {
                return 0;
            }
            return hour + 12;
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal : '%d',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ss;

})));


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swedish [sv]
//! author : Jens Alm : https://github.com/ulmus

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var sv = moment.defineLocale('sv', {
    months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
    weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
    weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
    weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [kl.] HH:mm',
        LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
        lll : 'D MMM YYYY HH:mm',
        llll : 'ddd D MMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Idag] LT',
        nextDay: '[Imorgon] LT',
        lastDay: '[Igår] LT',
        nextWeek: '[På] dddd LT',
        lastWeek: '[I] dddd[s] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : 'för %s sedan',
        s : 'några sekunder',
        ss : '%d sekunder',
        m : 'en minut',
        mm : '%d minuter',
        h : 'en timme',
        hh : '%d timmar',
        d : 'en dag',
        dd : '%d dagar',
        M : 'en månad',
        MM : '%d månader',
        y : 'ett år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'e' :
            (b === 1) ? 'a' :
            (b === 2) ? 'a' :
            (b === 3) ? 'e' : 'e';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sv;

})));


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swahili [sw]
//! author : Fahad Kassim : https://github.com/fadsel

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var sw = moment.defineLocale('sw', {
    months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
    weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
    weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
    weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[leo saa] LT',
        nextDay : '[kesho saa] LT',
        nextWeek : '[wiki ijayo] dddd [saat] LT',
        lastDay : '[jana] LT',
        lastWeek : '[wiki iliyopita] dddd [saat] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s baadaye',
        past : 'tokea %s',
        s : 'hivi punde',
        ss : 'sekunde %d',
        m : 'dakika moja',
        mm : 'dakika %d',
        h : 'saa limoja',
        hh : 'masaa %d',
        d : 'siku moja',
        dd : 'masiku %d',
        M : 'mwezi mmoja',
        MM : 'miezi %d',
        y : 'mwaka mmoja',
        yy : 'miaka %d'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return sw;

})));


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tamil [ta]
//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '௧',
    '2': '௨',
    '3': '௩',
    '4': '௪',
    '5': '௫',
    '6': '௬',
    '7': '௭',
    '8': '௮',
    '9': '௯',
    '0': '௦'
};
var numberMap = {
    '௧': '1',
    '௨': '2',
    '௩': '3',
    '௪': '4',
    '௫': '5',
    '௬': '6',
    '௭': '7',
    '௮': '8',
    '௯': '9',
    '௦': '0'
};

var ta = moment.defineLocale('ta', {
    months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
    monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
    weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
    weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
    weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, HH:mm',
        LLLL : 'dddd, D MMMM YYYY, HH:mm'
    },
    calendar : {
        sameDay : '[இன்று] LT',
        nextDay : '[நாளை] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[நேற்று] LT',
        lastWeek : '[கடந்த வாரம்] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s இல்',
        past : '%s முன்',
        s : 'ஒரு சில விநாடிகள்',
        ss : '%d விநாடிகள்',
        m : 'ஒரு நிமிடம்',
        mm : '%d நிமிடங்கள்',
        h : 'ஒரு மணி நேரம்',
        hh : '%d மணி நேரம்',
        d : 'ஒரு நாள்',
        dd : '%d நாட்கள்',
        M : 'ஒரு மாதம்',
        MM : '%d மாதங்கள்',
        y : 'ஒரு வருடம்',
        yy : '%d ஆண்டுகள்'
    },
    dayOfMonthOrdinalParse: /\d{1,2}வது/,
    ordinal : function (number) {
        return number + 'வது';
    },
    preparse: function (string) {
        return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // refer http://ta.wikipedia.org/s/1er1
    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
    meridiem : function (hour, minute, isLower) {
        if (hour < 2) {
            return ' யாமம்';
        } else if (hour < 6) {
            return ' வைகறை';  // வைகறை
        } else if (hour < 10) {
            return ' காலை'; // காலை
        } else if (hour < 14) {
            return ' நண்பகல்'; // நண்பகல்
        } else if (hour < 18) {
            return ' எற்பாடு'; // எற்பாடு
        } else if (hour < 22) {
            return ' மாலை'; // மாலை
        } else {
            return ' யாமம்';
        }
    },
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'யாமம்') {
            return hour < 2 ? hour : hour + 12;
        } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
            return hour;
        } else if (meridiem === 'நண்பகல்') {
            return hour >= 10 ? hour : hour + 12;
        } else {
            return hour + 12;
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return ta;

})));


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Telugu [te]
//! author : Krishna Chaitanya Thota : https://github.com/kcthota

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var te = moment.defineLocale('te', {
    months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
    monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
    monthsParseExact : true,
    weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
    weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
    weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm',
        LLLL : 'dddd, D MMMM YYYY, A h:mm'
    },
    calendar : {
        sameDay : '[నేడు] LT',
        nextDay : '[రేపు] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[నిన్న] LT',
        lastWeek : '[గత] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s లో',
        past : '%s క్రితం',
        s : 'కొన్ని క్షణాలు',
        ss : '%d సెకన్లు',
        m : 'ఒక నిమిషం',
        mm : '%d నిమిషాలు',
        h : 'ఒక గంట',
        hh : '%d గంటలు',
        d : 'ఒక రోజు',
        dd : '%d రోజులు',
        M : 'ఒక నెల',
        MM : '%d నెలలు',
        y : 'ఒక సంవత్సరం',
        yy : '%d సంవత్సరాలు'
    },
    dayOfMonthOrdinalParse : /\d{1,2}వ/,
    ordinal : '%dవ',
    meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'రాత్రి') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'ఉదయం') {
            return hour;
        } else if (meridiem === 'మధ్యాహ్నం') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'సాయంత్రం') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'రాత్రి';
        } else if (hour < 10) {
            return 'ఉదయం';
        } else if (hour < 17) {
            return 'మధ్యాహ్నం';
        } else if (hour < 20) {
            return 'సాయంత్రం';
        } else {
            return 'రాత్రి';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return te;

})));


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tetun Dili (East Timor) [tet]
//! author : Joshua Brooks : https://github.com/joshbrooks
//! author : Onorio De J. Afonso : https://github.com/marobo

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var tet = moment.defineLocale('tet', {
    months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
    monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez'.split('_'),
    weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu'.split('_'),
    weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sext_Sab'.split('_'),
    weekdaysMin : 'Do_Seg_Te_Ku_Ki_Sex_Sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Ohin iha] LT',
        nextDay: '[Aban iha] LT',
        nextWeek: 'dddd [iha] LT',
        lastDay: '[Horiseik iha] LT',
        lastWeek: 'dddd [semana kotuk] [iha] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'iha %s',
        past : '%s liuba',
        s : 'minutu balun',
        ss : 'minutu %d',
        m : 'minutu ida',
        mm : 'minutus %d',
        h : 'horas ida',
        hh : 'horas %d',
        d : 'loron ida',
        dd : 'loron %d',
        M : 'fulan ida',
        MM : 'fulan %d',
        y : 'tinan ida',
        yy : 'tinan %d'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return tet;

})));


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Thai [th]
//! author : Kridsada Thanabulpong : https://github.com/sirn

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var th = moment.defineLocale('th', {
    months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
    monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
    monthsParseExact: true,
    weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
    weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
    weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY เวลา H:mm',
        LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
    },
    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
    isPM: function (input) {
        return input === 'หลังเที่ยง';
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ก่อนเที่ยง';
        } else {
            return 'หลังเที่ยง';
        }
    },
    calendar : {
        sameDay : '[วันนี้ เวลา] LT',
        nextDay : '[พรุ่งนี้ เวลา] LT',
        nextWeek : 'dddd[หน้า เวลา] LT',
        lastDay : '[เมื่อวานนี้ เวลา] LT',
        lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'อีก %s',
        past : '%sที่แล้ว',
        s : 'ไม่กี่วินาที',
        ss : '%d วินาที',
        m : '1 นาที',
        mm : '%d นาที',
        h : '1 ชั่วโมง',
        hh : '%d ชั่วโมง',
        d : '1 วัน',
        dd : '%d วัน',
        M : '1 เดือน',
        MM : '%d เดือน',
        y : '1 ปี',
        yy : '%d ปี'
    }
});

return th;

})));


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tagalog (Philippines) [tl-ph]
//! author : Dan Hagman : https://github.com/hagmandan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var tlPh = moment.defineLocale('tl-ph', {
    months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
    monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
    weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
    weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
    weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'MM/D/YYYY',
        LL : 'MMMM D, YYYY',
        LLL : 'MMMM D, YYYY HH:mm',
        LLLL : 'dddd, MMMM DD, YYYY HH:mm'
    },
    calendar : {
        sameDay: 'LT [ngayong araw]',
        nextDay: '[Bukas ng] LT',
        nextWeek: 'LT [sa susunod na] dddd',
        lastDay: 'LT [kahapon]',
        lastWeek: 'LT [noong nakaraang] dddd',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'sa loob ng %s',
        past : '%s ang nakalipas',
        s : 'ilang segundo',
        ss : '%d segundo',
        m : 'isang minuto',
        mm : '%d minuto',
        h : 'isang oras',
        hh : '%d oras',
        d : 'isang araw',
        dd : '%d araw',
        M : 'isang buwan',
        MM : '%d buwan',
        y : 'isang taon',
        yy : '%d taon'
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal : function (number) {
        return number;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return tlPh;

})));


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Klingon [tlh]
//! author : Dominika Kruk : https://github.com/amaranthrose

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

function translateFuture(output) {
    var time = output;
    time = (output.indexOf('jaj') !== -1) ?
    time.slice(0, -3) + 'leS' :
    (output.indexOf('jar') !== -1) ?
    time.slice(0, -3) + 'waQ' :
    (output.indexOf('DIS') !== -1) ?
    time.slice(0, -3) + 'nem' :
    time + ' pIq';
    return time;
}

function translatePast(output) {
    var time = output;
    time = (output.indexOf('jaj') !== -1) ?
    time.slice(0, -3) + 'Hu’' :
    (output.indexOf('jar') !== -1) ?
    time.slice(0, -3) + 'wen' :
    (output.indexOf('DIS') !== -1) ?
    time.slice(0, -3) + 'ben' :
    time + ' ret';
    return time;
}

function translate(number, withoutSuffix, string, isFuture) {
    var numberNoun = numberAsNoun(number);
    switch (string) {
        case 'ss':
            return numberNoun + ' lup';
        case 'mm':
            return numberNoun + ' tup';
        case 'hh':
            return numberNoun + ' rep';
        case 'dd':
            return numberNoun + ' jaj';
        case 'MM':
            return numberNoun + ' jar';
        case 'yy':
            return numberNoun + ' DIS';
    }
}

function numberAsNoun(number) {
    var hundred = Math.floor((number % 1000) / 100),
    ten = Math.floor((number % 100) / 10),
    one = number % 10,
    word = '';
    if (hundred > 0) {
        word += numbersNouns[hundred] + 'vatlh';
    }
    if (ten > 0) {
        word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
    }
    if (one > 0) {
        word += ((word !== '') ? ' ' : '') + numbersNouns[one];
    }
    return (word === '') ? 'pagh' : word;
}

var tlh = moment.defineLocale('tlh', {
    months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
    monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
    monthsParseExact : true,
    weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[DaHjaj] LT',
        nextDay: '[wa’leS] LT',
        nextWeek: 'LLL',
        lastDay: '[wa’Hu’] LT',
        lastWeek: 'LLL',
        sameElse: 'L'
    },
    relativeTime : {
        future : translateFuture,
        past : translatePast,
        s : 'puS lup',
        ss : translate,
        m : 'wa’ tup',
        mm : translate,
        h : 'wa’ rep',
        hh : translate,
        d : 'wa’ jaj',
        dd : translate,
        M : 'wa’ jar',
        MM : translate,
        y : 'wa’ DIS',
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return tlh;

})));


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkish [tr]
//! authors : Erhan Gundogan : https://github.com/erhangundogan,
//!           Burak Yiğit Kaya: https://github.com/BYK

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var suffixes = {
    1: '\'inci',
    5: '\'inci',
    8: '\'inci',
    70: '\'inci',
    80: '\'inci',
    2: '\'nci',
    7: '\'nci',
    20: '\'nci',
    50: '\'nci',
    3: '\'üncü',
    4: '\'üncü',
    100: '\'üncü',
    6: '\'ncı',
    9: '\'uncu',
    10: '\'uncu',
    30: '\'uncu',
    60: '\'ıncı',
    90: '\'ıncı'
};

var tr = moment.defineLocale('tr', {
    months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
    monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
    weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
    weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
    weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[bugün saat] LT',
        nextDay : '[yarın saat] LT',
        nextWeek : '[gelecek] dddd [saat] LT',
        lastDay : '[dün] LT',
        lastWeek : '[geçen] dddd [saat] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s sonra',
        past : '%s önce',
        s : 'birkaç saniye',
        ss : '%d saniye',
        m : 'bir dakika',
        mm : '%d dakika',
        h : 'bir saat',
        hh : '%d saat',
        d : 'bir gün',
        dd : '%d gün',
        M : 'bir ay',
        MM : '%d ay',
        y : 'bir yıl',
        yy : '%d yıl'
    },
    dayOfMonthOrdinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
    ordinal : function (number) {
        if (number === 0) {  // special case for zero
            return number + '\'ıncı';
        }
        var a = number % 10,
            b = number % 100 - a,
            c = number >= 100 ? 100 : null;
        return number + (suffixes[a] || suffixes[b] || suffixes[c]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return tr;

})));


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Talossan [tzl]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v
//! author : Iustì Canun

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


// After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
// This is currently too difficult (maybe even impossible) to add.
var tzl = moment.defineLocale('tzl', {
    months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
    monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
    weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
    weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
    weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM [dallas] YYYY',
        LLL : 'D. MMMM [dallas] YYYY HH.mm',
        LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
    },
    meridiemParse: /d\'o|d\'a/i,
    isPM : function (input) {
        return 'd\'o' === input.toLowerCase();
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'd\'o' : 'D\'O';
        } else {
            return isLower ? 'd\'a' : 'D\'A';
        }
    },
    calendar : {
        sameDay : '[oxhi à] LT',
        nextDay : '[demà à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[ieiri à] LT',
        lastWeek : '[sür el] dddd [lasteu à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'osprei %s',
        past : 'ja%s',
        s : processRelativeTime,
        ss : processRelativeTime,
        m : processRelativeTime,
        mm : processRelativeTime,
        h : processRelativeTime,
        hh : processRelativeTime,
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        's': ['viensas secunds', '\'iensas secunds'],
        'ss': [number + ' secunds', '' + number + ' secunds'],
        'm': ['\'n míut', '\'iens míut'],
        'mm': [number + ' míuts', '' + number + ' míuts'],
        'h': ['\'n þora', '\'iensa þora'],
        'hh': [number + ' þoras', '' + number + ' þoras'],
        'd': ['\'n ziua', '\'iensa ziua'],
        'dd': [number + ' ziuas', '' + number + ' ziuas'],
        'M': ['\'n mes', '\'iens mes'],
        'MM': [number + ' mesen', '' + number + ' mesen'],
        'y': ['\'n ar', '\'iens ar'],
        'yy': [number + ' ars', '' + number + ' ars']
    };
    return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
}

return tzl;

})));


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight Latin [tzm-latn]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var tzmLatn = moment.defineLocale('tzm-latn', {
    months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
    monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
    weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[asdkh g] LT',
        nextDay: '[aska g] LT',
        nextWeek: 'dddd [g] LT',
        lastDay: '[assant g] LT',
        lastWeek: 'dddd [g] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'dadkh s yan %s',
        past : 'yan %s',
        s : 'imik',
        ss : '%d imik',
        m : 'minuḍ',
        mm : '%d minuḍ',
        h : 'saɛa',
        hh : '%d tassaɛin',
        d : 'ass',
        dd : '%d ossan',
        M : 'ayowr',
        MM : '%d iyyirn',
        y : 'asgas',
        yy : '%d isgasn'
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return tzmLatn;

})));


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight [tzm]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var tzm = moment.defineLocale('tzm', {
    months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
    monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
    weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS: 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
        nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
        nextWeek: 'dddd [ⴴ] LT',
        lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
        lastWeek: 'dddd [ⴴ] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
        past : 'ⵢⴰⵏ %s',
        s : 'ⵉⵎⵉⴽ',
        ss : '%d ⵉⵎⵉⴽ',
        m : 'ⵎⵉⵏⵓⴺ',
        mm : '%d ⵎⵉⵏⵓⴺ',
        h : 'ⵙⴰⵄⴰ',
        hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
        d : 'ⴰⵙⵙ',
        dd : '%d oⵙⵙⴰⵏ',
        M : 'ⴰⵢoⵓⵔ',
        MM : '%d ⵉⵢⵢⵉⵔⵏ',
        y : 'ⴰⵙⴳⴰⵙ',
        yy : '%d ⵉⵙⴳⴰⵙⵏ'
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return tzm;

})));


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Ukrainian [uk]
//! author : zemlanin : https://github.com/zemlanin
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
        'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
        'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
        'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
        'dd': 'день_дні_днів',
        'MM': 'місяць_місяці_місяців',
        'yy': 'рік_роки_років'
    };
    if (key === 'm') {
        return withoutSuffix ? 'хвилина' : 'хвилину';
    }
    else if (key === 'h') {
        return withoutSuffix ? 'година' : 'годину';
    }
    else {
        return number + ' ' + plural(format[key], +number);
    }
}
function weekdaysCaseReplace(m, format) {
    var weekdays = {
        'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
        'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
        'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
    };

    if (!m) {
        return weekdays['nominative'];
    }

    var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
        'accusative' :
        ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
            'genitive' :
            'nominative');
    return weekdays[nounCase][m.day()];
}
function processHoursFunction(str) {
    return function () {
        return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
    };
}

var uk = moment.defineLocale('uk', {
    months : {
        'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
        'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
    },
    monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
    weekdays : weekdaysCaseReplace,
    weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY р.',
        LLL : 'D MMMM YYYY р., HH:mm',
        LLLL : 'dddd, D MMMM YYYY р., HH:mm'
    },
    calendar : {
        sameDay: processHoursFunction('[Сьогодні '),
        nextDay: processHoursFunction('[Завтра '),
        lastDay: processHoursFunction('[Вчора '),
        nextWeek: processHoursFunction('[У] dddd ['),
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                    return processHoursFunction('[Минулої] dddd [').call(this);
                case 1:
                case 2:
                case 4:
                    return processHoursFunction('[Минулого] dddd [').call(this);
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'за %s',
        past : '%s тому',
        s : 'декілька секунд',
        ss : relativeTimeWithPlural,
        m : relativeTimeWithPlural,
        mm : relativeTimeWithPlural,
        h : 'годину',
        hh : relativeTimeWithPlural,
        d : 'день',
        dd : relativeTimeWithPlural,
        M : 'місяць',
        MM : relativeTimeWithPlural,
        y : 'рік',
        yy : relativeTimeWithPlural
    },
    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
    meridiemParse: /ночі|ранку|дня|вечора/,
    isPM: function (input) {
        return /^(дня|вечора)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ночі';
        } else if (hour < 12) {
            return 'ранку';
        } else if (hour < 17) {
            return 'дня';
        } else {
            return 'вечора';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'M':
            case 'd':
            case 'DDD':
            case 'w':
            case 'W':
                return number + '-й';
            case 'D':
                return number + '-го';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return uk;

})));


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Urdu [ur]
//! author : Sawood Alam : https://github.com/ibnesayeed
//! author : Zack : https://github.com/ZackVision

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = [
    'جنوری',
    'فروری',
    'مارچ',
    'اپریل',
    'مئی',
    'جون',
    'جولائی',
    'اگست',
    'ستمبر',
    'اکتوبر',
    'نومبر',
    'دسمبر'
];
var days = [
    'اتوار',
    'پیر',
    'منگل',
    'بدھ',
    'جمعرات',
    'جمعہ',
    'ہفتہ'
];

var ur = moment.defineLocale('ur', {
    months : months,
    monthsShort : months,
    weekdays : days,
    weekdaysShort : days,
    weekdaysMin : days,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd، D MMMM YYYY HH:mm'
    },
    meridiemParse: /صبح|شام/,
    isPM : function (input) {
        return 'شام' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'صبح';
        }
        return 'شام';
    },
    calendar : {
        sameDay : '[آج بوقت] LT',
        nextDay : '[کل بوقت] LT',
        nextWeek : 'dddd [بوقت] LT',
        lastDay : '[گذشتہ روز بوقت] LT',
        lastWeek : '[گذشتہ] dddd [بوقت] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s بعد',
        past : '%s قبل',
        s : 'چند سیکنڈ',
        ss : '%d سیکنڈ',
        m : 'ایک منٹ',
        mm : '%d منٹ',
        h : 'ایک گھنٹہ',
        hh : '%d گھنٹے',
        d : 'ایک دن',
        dd : '%d دن',
        M : 'ایک ماہ',
        MM : '%d ماہ',
        y : 'ایک سال',
        yy : '%d سال'
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/,/g, '،');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ur;

})));


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek Latin [uz-latn]
//! author : Rasulbek Mirzayev : github.com/Rasulbeeek

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var uzLatn = moment.defineLocale('uz-latn', {
    months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
    monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
    weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
    weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
    weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'D MMMM YYYY, dddd HH:mm'
    },
    calendar : {
        sameDay : '[Bugun soat] LT [da]',
        nextDay : '[Ertaga] LT [da]',
        nextWeek : 'dddd [kuni soat] LT [da]',
        lastDay : '[Kecha soat] LT [da]',
        lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'Yaqin %s ichida',
        past : 'Bir necha %s oldin',
        s : 'soniya',
        ss : '%d soniya',
        m : 'bir daqiqa',
        mm : '%d daqiqa',
        h : 'bir soat',
        hh : '%d soat',
        d : 'bir kun',
        dd : '%d kun',
        M : 'bir oy',
        MM : '%d oy',
        y : 'bir yil',
        yy : '%d yil'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return uzLatn;

})));


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek [uz]
//! author : Sardor Muminov : https://github.com/muminoff

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var uz = moment.defineLocale('uz', {
    months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
    monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
    weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
    weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
    weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'D MMMM YYYY, dddd HH:mm'
    },
    calendar : {
        sameDay : '[Бугун соат] LT [да]',
        nextDay : '[Эртага] LT [да]',
        nextWeek : 'dddd [куни соат] LT [да]',
        lastDay : '[Кеча соат] LT [да]',
        lastWeek : '[Утган] dddd [куни соат] LT [да]',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'Якин %s ичида',
        past : 'Бир неча %s олдин',
        s : 'фурсат',
        ss : '%d фурсат',
        m : 'бир дакика',
        mm : '%d дакика',
        h : 'бир соат',
        hh : '%d соат',
        d : 'бир кун',
        dd : '%d кун',
        M : 'бир ой',
        MM : '%d ой',
        y : 'бир йил',
        yy : '%d йил'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 4th is the first week of the year.
    }
});

return uz;

})));


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Vietnamese [vi]
//! author : Bang Nguyen : https://github.com/bangnk

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var vi = moment.defineLocale('vi', {
    months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
    monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
    monthsParseExact : true,
    weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
    weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
    weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
    weekdaysParseExact : true,
    meridiemParse: /sa|ch/i,
    isPM : function (input) {
        return /^ch$/i.test(input);
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 12) {
            return isLower ? 'sa' : 'SA';
        } else {
            return isLower ? 'ch' : 'CH';
        }
    },
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM [năm] YYYY',
        LLL : 'D MMMM [năm] YYYY HH:mm',
        LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
        l : 'DD/M/YYYY',
        ll : 'D MMM YYYY',
        lll : 'D MMM YYYY HH:mm',
        llll : 'ddd, D MMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Hôm nay lúc] LT',
        nextDay: '[Ngày mai lúc] LT',
        nextWeek: 'dddd [tuần tới lúc] LT',
        lastDay: '[Hôm qua lúc] LT',
        lastWeek: 'dddd [tuần rồi lúc] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s tới',
        past : '%s trước',
        s : 'vài giây',
        ss : '%d giây' ,
        m : 'một phút',
        mm : '%d phút',
        h : 'một giờ',
        hh : '%d giờ',
        d : 'một ngày',
        dd : '%d ngày',
        M : 'một tháng',
        MM : '%d tháng',
        y : 'một năm',
        yy : '%d năm'
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal : function (number) {
        return number;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return vi;

})));


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Pseudo [x-pseudo]
//! author : Andrew Hood : https://github.com/andrewhood125

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var xPseudo = moment.defineLocale('x-pseudo', {
    months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
    monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
    monthsParseExact : true,
    weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
    weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
    weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[T~ódá~ý át] LT',
        nextDay : '[T~ómó~rró~w át] LT',
        nextWeek : 'dddd [át] LT',
        lastDay : '[Ý~ést~érdá~ý át] LT',
        lastWeek : '[L~ást] dddd [át] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'í~ñ %s',
        past : '%s á~gó',
        s : 'á ~féw ~sécó~ñds',
        ss : '%d s~écóñ~ds',
        m : 'á ~míñ~úté',
        mm : '%d m~íñú~tés',
        h : 'á~ñ hó~úr',
        hh : '%d h~óúrs',
        d : 'á ~dáý',
        dd : '%d d~áýs',
        M : 'á ~móñ~th',
        MM : '%d m~óñt~hs',
        y : 'á ~ýéár',
        yy : '%d ý~éárs'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return xPseudo;

})));


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Yoruba Nigeria [yo]
//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var yo = moment.defineLocale('yo', {
    months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
    monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
    weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
    weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
    weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Ònì ni] LT',
        nextDay : '[Ọ̀la ni] LT',
        nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
        lastDay : '[Àna ni] LT',
        lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ní %s',
        past : '%s kọjá',
        s : 'ìsẹjú aayá die',
        ss :'aayá %d',
        m : 'ìsẹjú kan',
        mm : 'ìsẹjú %d',
        h : 'wákati kan',
        hh : 'wákati %d',
        d : 'ọjọ́ kan',
        dd : 'ọjọ́ %d',
        M : 'osù kan',
        MM : 'osù %d',
        y : 'ọdún kan',
        yy : 'ọdún %d'
    },
    dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
    ordinal : 'ọjọ́ %d',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4 // The week that contains Jan 4th is the first week of the year.
    }
});

return yo;

})));


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (China) [zh-cn]
//! author : suupic : https://github.com/suupic
//! author : Zeno Zeng : https://github.com/zenozeng

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var zhCn = moment.defineLocale('zh-cn', {
    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY/MM/DD',
        LL : 'YYYY年M月D日',
        LLL : 'YYYY年M月D日Ah点mm分',
        LLLL : 'YYYY年M月D日ddddAh点mm分',
        l : 'YYYY/M/D',
        ll : 'YYYY年M月D日',
        lll : 'YYYY年M月D日 HH:mm',
        llll : 'YYYY年M月D日dddd HH:mm'
    },
    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === '凌晨' || meridiem === '早上' ||
                meridiem === '上午') {
            return hour;
        } else if (meridiem === '下午' || meridiem === '晚上') {
            return hour + 12;
        } else {
            // '中午'
            return hour >= 11 ? hour : hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        var hm = hour * 100 + minute;
        if (hm < 600) {
            return '凌晨';
        } else if (hm < 900) {
            return '早上';
        } else if (hm < 1130) {
            return '上午';
        } else if (hm < 1230) {
            return '中午';
        } else if (hm < 1800) {
            return '下午';
        } else {
            return '晚上';
        }
    },
    calendar : {
        sameDay : '[今天]LT',
        nextDay : '[明天]LT',
        nextWeek : '[下]ddddLT',
        lastDay : '[昨天]LT',
        lastWeek : '[上]ddddLT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd':
            case 'D':
            case 'DDD':
                return number + '日';
            case 'M':
                return number + '月';
            case 'w':
            case 'W':
                return number + '周';
            default:
                return number;
        }
    },
    relativeTime : {
        future : '%s内',
        past : '%s前',
        s : '几秒',
        ss : '%d 秒',
        m : '1 分钟',
        mm : '%d 分钟',
        h : '1 小时',
        hh : '%d 小时',
        d : '1 天',
        dd : '%d 天',
        M : '1 个月',
        MM : '%d 个月',
        y : '1 年',
        yy : '%d 年'
    },
    week : {
        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return zhCn;

})));


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Hong Kong) [zh-hk]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Konstantin : https://github.com/skfd

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var zhHk = moment.defineLocale('zh-hk', {
    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY/MM/DD',
        LL : 'YYYY年M月D日',
        LLL : 'YYYY年M月D日 HH:mm',
        LLLL : 'YYYY年M月D日dddd HH:mm',
        l : 'YYYY/M/D',
        ll : 'YYYY年M月D日',
        lll : 'YYYY年M月D日 HH:mm',
        llll : 'YYYY年M月D日dddd HH:mm'
    },
    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
            return hour;
        } else if (meridiem === '中午') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === '下午' || meridiem === '晚上') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        var hm = hour * 100 + minute;
        if (hm < 600) {
            return '凌晨';
        } else if (hm < 900) {
            return '早上';
        } else if (hm < 1130) {
            return '上午';
        } else if (hm < 1230) {
            return '中午';
        } else if (hm < 1800) {
            return '下午';
        } else {
            return '晚上';
        }
    },
    calendar : {
        sameDay : '[今天]LT',
        nextDay : '[明天]LT',
        nextWeek : '[下]ddddLT',
        lastDay : '[昨天]LT',
        lastWeek : '[上]ddddLT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd' :
            case 'D' :
            case 'DDD' :
                return number + '日';
            case 'M' :
                return number + '月';
            case 'w' :
            case 'W' :
                return number + '週';
            default :
                return number;
        }
    },
    relativeTime : {
        future : '%s內',
        past : '%s前',
        s : '幾秒',
        ss : '%d 秒',
        m : '1 分鐘',
        mm : '%d 分鐘',
        h : '1 小時',
        hh : '%d 小時',
        d : '1 天',
        dd : '%d 天',
        M : '1 個月',
        MM : '%d 個月',
        y : '1 年',
        yy : '%d 年'
    }
});

return zhHk;

})));


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Taiwan) [zh-tw]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var zhTw = moment.defineLocale('zh-tw', {
    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY/MM/DD',
        LL : 'YYYY年M月D日',
        LLL : 'YYYY年M月D日 HH:mm',
        LLLL : 'YYYY年M月D日dddd HH:mm',
        l : 'YYYY/M/D',
        ll : 'YYYY年M月D日',
        lll : 'YYYY年M月D日 HH:mm',
        llll : 'YYYY年M月D日dddd HH:mm'
    },
    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
            return hour;
        } else if (meridiem === '中午') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === '下午' || meridiem === '晚上') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        var hm = hour * 100 + minute;
        if (hm < 600) {
            return '凌晨';
        } else if (hm < 900) {
            return '早上';
        } else if (hm < 1130) {
            return '上午';
        } else if (hm < 1230) {
            return '中午';
        } else if (hm < 1800) {
            return '下午';
        } else {
            return '晚上';
        }
    },
    calendar : {
        sameDay : '[今天]LT',
        nextDay : '[明天]LT',
        nextWeek : '[下]ddddLT',
        lastDay : '[昨天]LT',
        lastWeek : '[上]ddddLT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd' :
            case 'D' :
            case 'DDD' :
                return number + '日';
            case 'M' :
                return number + '月';
            case 'w' :
            case 'W' :
                return number + '週';
            default :
                return number;
        }
    },
    relativeTime : {
        future : '%s內',
        past : '%s前',
        s : '幾秒',
        ss : '%d 秒',
        m : '1 分鐘',
        mm : '%d 分鐘',
        h : '1 小時',
        hh : '%d 小時',
        d : '1 天',
        dd : '%d 天',
        M : '1 個月',
        MM : '%d 個月',
        y : '1 年',
        yy : '%d 年'
    }
});

return zhTw;

})));


/***/ }),
/* 139 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 140 */
/***/ (function(module, exports) {

module.exports = L;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.About = undefined;

var _Panel2 = __webpack_require__(5);

__webpack_require__(186);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

window.Catalog.translations = window.Catalog.translations || new Translations();
var T = window.Catalog.translations;

T.addText('rus', {
    about: {
        version: 'Версия',
        news: 'Что нового',
        help: 'Инструкция пользователя'
    }

});

T.addText('eng', {
    about: {
        version: 'Version',
        news: "What's new",
        help: "User's guide"
    }

});

var About = function (_Panel) {
    _inherits(About, _Panel);

    function About(container, _ref) {
        var text = _ref.text;

        _classCallCheck(this, About);

        var _this = _possibleConstructorReturn(this, (About.__proto__ || Object.getPrototypeOf(About)).call(this, container, {
            id: 'about.dialog',
            left: window.DIALOG_PLACE.left,
            top: window.DIALOG_PLACE.top,
            modal: true
        }));

        _this._text = text;
        _this._container.classList.add('about-dialog');
        _this._content.innerHTML = '<div class="logo-symbol-about"></div>        \n        <div class="about-version">\n            <div></div>\n            <div>' + T.getText('about.version') + ' ' + window.Catalog.VERSION + '</div>\n            <div></div>\n        </div>\n        <div class="about-date">' + moment(window.Catalog.VERSION_DATE).format('L') + '</div>\n        <div class="about-news">\n            <div>' + T.getText('about.news') + '</div>\n            <div><ul>' + _this._text.split(/\r?\n/g).map(function (x) {
            return '<li>' + x + '</li>';
        }).join('') + '</ul></div>\n        </div>\n        <div class="about-link">' + T.getText('about.help') + '</div>';
        _this._container.querySelector('.about-link').addEventListener('click', function (e) {
            window.open('https://scanex.github.io/Documentation/Catalog/index.html', '_blank');
            _this.hide();
        });
        return _this;
    }

    return About;
}(_Panel2.Panel);

exports.About = About;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.FavoritesList = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(189);

var _DataGrid = __webpack_require__(4);

var _Satellites = __webpack_require__(6);

var _EventTarget2 = __webpack_require__(3);

var _Utils = __webpack_require__(1);

var _Translations = __webpack_require__(2);

var _DataGrid2 = __webpack_require__(4);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

var FavoritesList = function (_EventTarget) {
    _inherits(FavoritesList, _EventTarget);

    function FavoritesList(container, _ref) {
        var restricted = _ref.restricted;

        _classCallCheck(this, FavoritesList);

        var _this = _possibleConstructorReturn(this, (FavoritesList.__proto__ || Object.getPrototypeOf(FavoritesList)).call(this));

        _this._cart = {};
        _this._restricted = restricted;
        _this._container = container;
        _this._container.classList.add('favorites-list');
        _this._onCellClick = _this._onCellClick.bind(_this);
        _this._onColumnClick = _this._onColumnClick.bind(_this);
        _this._onRowMouseOver = _this._onRowMouseOver.bind(_this);
        _this._onRowMouseOut = _this._onRowMouseOut.bind(_this);
        _this._onSort = _this._onSort.bind(_this);
        _this._activeInfo = null;
        _this._disableMouseHover = false;
        _this._fields = {
            'selected': {
                type: 'selector',
                default: false
            },
            'visible': {
                type: 'string',
                columnIcon: 'search search-visibility-off',
                default: false,
                width: 30,
                styler: function styler(item) {
                    switch (item.visible) {
                        case 'visible':
                            return 'search search-visibility-off';
                        case 'hidden':
                            return 'search search-visibility-on';
                        case 'loading':
                            return 'search-visibility-loading';
                        case 'failed':
                            return 'search-visibility-failed';
                        default:
                            return '';
                    }
                }
            },
            'stereo': {
                columnIcon: 'search search-stereo',
                type: 'boolean',
                icon: 'search',
                yes: 'search-stereo',
                sortable: true,
                default: false,
                tooltip: T.getText('results.stereo'),
                formatter: function formatter(item) {
                    switch (_typeof(item.stereo)) {
                        case 'string':
                            return item.stereo !== 'NONE';
                        case 'boolean':
                            return item.stereo;
                        default:
                            return false;
                    }
                }
            },
            'platform': {
                type: 'string',
                name: T.getText('results.satellite'),
                sortable: true,
                formatter: function formatter(item) {
                    switch (item.platform) {
                        case 'SPOT6':
                        case 'SPOT 6':
                            return item.islocal ? 'SPOT 6' : 'SPOT 6 (A)';
                        case 'SPOT7':
                        case 'SPOT 7':
                            return item.islocal ? 'SPOT 7' : 'SPOT 7 (A)';
                        case 'SPOT 5':
                            var sp5 = 'SPOT 5';
                            if (item.sensor === 'J') {
                                if (item.spot5_a_exists & item.spot5_b_exists) {
                                    sp5 = 'SPOT 5 - 2.5ms';
                                } else if (item.spot5_a_exists || item.spot5_b_exists) {
                                    sp5 = 'SPOT 5 - 5ms';
                                } else {
                                    sp5 = 'SPOT 5 - 10ms';
                                }
                            } else if (item.sensor === 'A' || item.sensor === 'B' && !item.spot5_b_exists) {
                                sp5 = 'SPOT 5 - 5pan';
                            } else if (item.sensor === 'A' && item.spot5_b_exists) {
                                sp5 = 'SPOT 5 - 2.5pan';
                            }
                            return '' + sp5 + (item.islocal ? '' : ' (A)');
                        case 'Ресурс-П1':
                        case 'Ресурс-П2':
                        case 'Ресурс-П3':
                            if (item.spot5_a_exists && !item.spot5_b_exists) {
                                return item.platform + ' pan';
                            } else if (item.spot5_b_exists) {
                                return item.platform + ' ms';
                            } else {
                                return item.platform;
                            }
                        case 'GF1':
                            switch (item.sensor) {
                                case 'A':
                                    return 'GaoFen-1 (2m)';
                                case 'B':
                                    return 'GaoFen-1 (16m)';
                                default:
                                    return 'GaoFen-1';
                            }
                        case '1A-PHR-1A':
                            return '1ATLAS (PHR-1A)';
                        case '1A-PHR-1B':
                            return '1ATLAS (PHR-1B)';
                        case '1A-SPOT-6':
                            return '1ATLAS (SP6)';
                        case '1A-SPOT-7':
                            return '1ATLAS (SP7)';
                        default:
                            return '' + (0, _Satellites.getSatelliteName)(item.platform) + (item.islocal ? ' (L)' : '');
                    }
                }
            },
            'cloudness': {
                type: 'float',
                name: T.getText('results.clouds'),
                sortable: true,
                formatter: function formatter(item) {
                    return Math.round(item.cloudness);
                },
                default: 0,
                align: 'center'
            },
            'tilt': {
                type: 'float',
                name: T.getText('results.angle'),
                sortable: true,
                formatter: function formatter(item) {
                    return Math.round(item.tilt);
                },
                default: 0,
                align: 'center'
            },
            'acqdate': {
                type: 'date',
                name: T.getText('results.date'),
                formatter: function formatter(item) {
                    return item.acqdate.toLocaleDateString();
                },
                sortable: true
            },
            'info': {
                type: 'boolean',
                icon: 'search',
                yes: 'search-info-off',
                no: 'search-info-on'
            }

        };

        _this._grid = new _DataGrid.DataGrid(_this._container, {
            fields: _this.fields,
            sortBy: { field: 'acqdate', asc: false },
            indexBy: 'gmx_id'
        });
        _this._grid.addEventListener('cell:click', _this._onCellClick);
        _this._grid.addEventListener('column:click', _this._onColumnClick);
        _this._grid.addEventListener('row:mouseover', _this._onRowMouseOver);
        _this._grid.addEventListener('row:mouseout', _this._onRowMouseOut);
        _this._grid.addEventListener('sort', _this._onSort);
        _this._stopPropagation = _this._stopPropagation.bind(_this);
        return _this;
    }

    _createClass(FavoritesList, [{
        key: '_onSort',
        value: function _onSort(e) {
            var event = document.createEvent('Event');
            event.initEvent('sort', false, false);
            event.detail = this._grid.items;
            this.dispatchEvent(event);
        }
    }, {
        key: '_stopPropagation',
        value: function _stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: 'getItemByIndex',
        value: function getItemByIndex(id) {
            return this._grid.getItemByIndex(id);
        }
    }, {
        key: '_onCellClick',
        value: function _onCellClick(e) {
            e.stopPropagation();
            var _e$detail = e.detail,
                i = _e$detail.i,
                j = _e$detail.j,
                row = _e$detail.row,
                cell = _e$detail.cell,
                name = _e$detail.name,
                field = _e$detail.field,
                item = _e$detail.item;

            var event = document.createEvent('Event');
            var btn = null;
            var k = 0;

            switch (name) {
                case 'selected':
                    item.selected = Boolean(cell.querySelector('input[type=checkbox]').checked);
                    event.initEvent('selected', false, false);
                    event.detail = item;
                    this.dispatchEvent(event);
                    break;
                case 'visible':
                    event.initEvent('visible', false, false);
                    event.detail = item;
                    this.dispatchEvent(event);
                    break;
                case 'info':
                    var _cell$getBoundingClie = cell.getBoundingClientRect(),
                        left = _cell$getBoundingClie.left,
                        top = _cell$getBoundingClie.top;

                    var button = cell.querySelector('i');

                    event.initEvent('info', false, false);
                    event.detail = { item: item, left: left, top: top, button: button };
                    this.dispatchEvent(event);

                    break;
                default:
                    k = Object.keys(this._fields).indexOf('visible');
                    btn = row.querySelectorAll('td')[k].querySelector('i');
                    btn.classList.remove('search-visibility-on');
                    btn.classList.add('search-visibility-off');
                    item.visible = true;

                    event.initEvent('visible', false, false);
                    event.detail = item;
                    this.dispatchEvent(event);
                    break;
            }
            switch (name) {
                case 'selected':
                case 'info':
                case 'visible':
                    break;
                default:
                    event.initEvent('click', false, false);
                    event.detail = e.detail;
                    this.dispatchEvent(event);
                    break;
            }
        }
    }, {
        key: '_onColumnClick',
        value: function _onColumnClick(e) {
            e.stopPropagation();
            var _e$detail2 = e.detail,
                col = _e$detail2.col,
                field = _e$detail2.field,
                name = _e$detail2.name;

            switch (name) {
                case 'visible':
                    var state = false;
                    if (this._grid.items.every(function (x) {
                        return x.visible !== 'hidden';
                    })) {
                        state = false;
                    } else if (this._grid.items.every(function (x) {
                        return x.visible === 'hidden';
                    })) {
                        state = true;
                    } else {
                        state = col.querySelector('i').classList.contains('favorites-select-quicklooks-active');
                    }
                    var btn = this._grid.getCol(name).querySelector('i');
                    if (state) {
                        btn.classList.add('favorites-select-quicklooks-passive');
                        btn.classList.remove('favorites-select-quicklooks-active');
                    } else {
                        btn.classList.add('favorites-select-quicklooks-active');
                        btn.classList.remove('favorites-select-quicklooks-passive');
                    }
                    var event = document.createEvent('Event');
                    event.initEvent('visible:all', false, false);
                    event.detail = state;
                    this.dispatchEvent(event);
                    break;
                default:
                    break;
            }
        }
    }, {
        key: '_onRowMouseOver',
        value: function _onRowMouseOver(e) {
            if (!this._disableMouseHover) {
                var event = document.createEvent('Event');
                event.initEvent('mouseover', false, false);
                event.detail = e.detail;
                this.dispatchEvent(event);
            }
        }
    }, {
        key: '_onRowMouseOut',
        value: function _onRowMouseOut(e) {
            if (!this._disableMouseHover) {
                var event = document.createEvent('Event');
                event.initEvent('mouseout', false, false);
                event.detail = e.detail;
                this.dispatchEvent(event);
            }
        }
    }, {
        key: 'hilite',
        value: function hilite(id) {
            this._grid.getRow(id).classList.add('hilite');
        }
    }, {
        key: 'dim',
        value: function dim(id) {
            this._grid.getRow(id).classList.remove('hilite');
        }
    }, {
        key: 'resize',
        value: function resize(total) {
            var height = this._container.querySelector('.table-list-header').getBoundingClientRect().height;
            var body = this._container.querySelector('.table-list-body');
            body.style.maxHeight = total - height + 'px';
            body.style.height = body.style.maxHeight;
        }
    }, {
        key: 'refresh',
        value: function refresh() {
            this._grid.refresh();
            var event = document.createEvent('Event');
            event.initEvent('refreshed', false, false);
            this.dispatchEvent(event);
        }
    }, {
        key: 'scrollToRow',
        value: function scrollToRow(id) {
            this._grid.scrollToRow(id);
        }
    }, {
        key: 'enableFilter',
        value: function enableFilter(enable) {
            this._grid.filtered = enable;
        }
    }, {
        key: 'adjustWidth',
        value: function adjustWidth() {
            this._grid.adjustHeader();
        }
    }, {
        key: 'getRow',
        value: function getRow(rowId) {
            return this._grid.getRow(rowId);
        }
    }, {
        key: 'redrawItem',
        value: function redrawItem(id, item) {
            this._disableMouseHover = true;
            this._grid.redrawRow(id, item);
            this._disableMouseHover = false;
        }
    }, {
        key: 'fields',
        get: function get() {
            return this._fields;
        }
    }, {
        key: 'items',
        set: function set(value) {
            if (Array.isArray(value)) {
                this._grid.items = value;
            }
        },
        get: function get() {
            return this._grid.items;
        }
    }, {
        key: 'filteredItems',
        get: function get() {
            return this._grid.filteredItems;
        }
    }, {
        key: 'bbox',
        get: function get() {
            return this._container.getBoundingClientRect();
        }
    }, {
        key: 'filter',
        set: function set(value) {
            this._grid.filter = value;
        }
    }, {
        key: 'count',
        get: function get() {
            return this._grid.count;
        }
    }]);

    return FavoritesList;
}(_EventTarget2.EventTarget);

exports.FavoritesList = FavoritesList;

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.GmxLayerDataProvider = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Utils = __webpack_require__(1);

var _EventTarget2 = __webpack_require__(3);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GmxLayerDataProvider = function (_EventTarget) {
    _inherits(GmxLayerDataProvider, _EventTarget);

    function GmxLayerDataProvider(_ref) {
        var gmxResourceServer = _ref.gmxResourceServer,
            map = _ref.map;

        _classCallCheck(this, GmxLayerDataProvider);

        var _this = _possibleConstructorReturn(this, (GmxLayerDataProvider.__proto__ || Object.getPrototypeOf(GmxLayerDataProvider)).call(this));

        _this.showSuggestion = false;
        _this.showOnMap = false;
        _this.showOnSelect = false;
        _this.showOnEnter = true;
        _this._rsGmx = gmxResourceServer;
        _this._map = map;
        return _this;
    }

    _createClass(GmxLayerDataProvider, [{
        key: '_toGeoJSON',
        value: function _toGeoJSON(fields, values) {
            var _this2 = this;

            return fields.reduce(function (a, k, i) {
                if (k === 'geomixergeojson') {
                    var geojson = L.gmxUtil.geometryToGeoJSON(values[i], true);
                    (0, _Utils.normalize_geometry)(_this2._map.getCenter().lng, geojson);
                    a.geometry = geojson;
                } else {
                    a.properties = a.properties || {};
                    a.properties[k] = values[i];
                }
                return a;
            }, { type: 'Feature' });
        }
    }, {
        key: 'fetch',
        value: function fetch(value) {
            return new Promise(function (resolve) {
                return resolve([]);
            });
        }
    }, {
        key: 'find',
        value: function find(value, limit, strong, retrieveGeometry) {
            var _this3 = this;

            var query = value.split(/[\s,]+/).map(function (x) {
                return "(sceneid = '" + x + "')";
            }).join(' OR ');
            return new Promise(function (resolve, reject) {
                var rq = {
                    layer: 'AFB4D363768E4C5FAC71C9B0C6F7B2F4',
                    geometry: true,
                    pagesize: 0,
                    query: query,
                    out_cs: 'EPSG:3857'
                };
                _this3._rsGmx.sendPostRequest('VectorLayer/Search.ashx', rq).then(function (response) {
                    if (response.Status == 'ok') {
                        var rs = response.Result.values.map(function (values) {
                            return {
                                feature: _this3._toGeoJSON(response.Result.fields, values),
                                provider: _this3,
                                query: value
                            };
                        });
                        resolve(rs);

                        var event = document.createEvent('Event');
                        event.initEvent('fetch', false, false);
                        event.detail = response.Result;
                        _this3.dispatchEvent(event);
                    } else {
                        reject(response.Result);
                    }
                }).catch(function (err) {
                    console.log(err);
                    reject(err);
                });
            });
        }
    }]);

    return GmxLayerDataProvider;
}(_EventTarget2.EventTarget);

exports.GmxLayerDataProvider = GmxLayerDataProvider;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RequestAdapter = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Index = __webpack_require__(168);

var _Utils = __webpack_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var RequestAdapter = function () {
    function RequestAdapter(_ref) {
        var _ref$layer = _ref.layer,
            layer = _ref$layer === undefined ? 'AFB4D363768E4C5FAC71C9B0C6F7B2F4' : _ref$layer,
            gmxResourceServer = _ref.gmxResourceServer,
            authorized = _ref.authorized;

        _classCallCheck(this, RequestAdapter);

        this._layer = layer;
        this._gmxResourceServer = gmxResourceServer;
        this._geometries = [];
        this._authorized = authorized;
    }

    _createClass(RequestAdapter, [{
        key: '_formatDate',
        value: function _formatDate(date) {
            return moment(date).format('YYYY-MM-DD');
        }
    }, {
        key: 'search',
        value: function search() {
            var _this = this;

            var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            return new Promise(function (resolve, reject) {
                var rq = _this.request;
                rq.pagesize = limit;
                _this._gmxResourceServer.sendPostRequest('VectorLayer/Search.ashx', rq).then(function (response) {
                    if (response.Status === 'ok') {
                        resolve(response.Result);
                    } else {
                        reject(response);
                    }
                }).catch(function (e) {
                    return reject(e);
                });
            });
        }
    }, {
        key: 'criteria',
        set: function set(value) {
            this._criteria = value;
        },
        get: function get() {
            return this._criteria;
        }
    }, {
        key: 'satellites',
        get: function get() {
            var _this2 = this;

            var _criteria = this._criteria,
                satellites = _criteria.satellites,
                archive = _criteria.archive;

            var serialize = function serialize(s) {
                return Object.keys(s).reduce(function (a, k) {
                    return a.concat(s[k]);
                }, []);
            };
            var ss = serialize(satellites.ms).concat(serialize(satellites.pc));
            return '(' + ss.filter(function (x) {
                return x.checked;
            }).map(function (x) {
                return '(' + x.condition(archive, _this2._authorized) + ')';
            }).join(' OR ') + ')';
        }
    }, {
        key: 'geometries',
        get: function get() {
            return this._geometries;
        },
        set: function set(value) {
            this._geometries = value;
        }
    }, {
        key: 'geometry',
        get: function get() {
            return {
                type: 'GeometryCollection',
                geometries: this._geometries
            };
        }
    }, {
        key: 'hasGeometry',
        get: function get() {
            return Array.isArray(this._geometries) && this._geometries.length > 0;
        }
    }, {
        key: 'date',
        get: function get() {
            var _criteria2 = this._criteria,
                date = _criteria2.date,
                annually = _criteria2.annually;

            var _date = _slicedToArray(date, 2),
                dateStart = _date[0],
                dateEnd = _date[1];

            if (annually) {
                var dcr = [];
                var startMonth = dateStart.getMonth();
                var startDay = dateStart.getDate();
                var endMonth = dateEnd.getMonth();
                var endDay = dateEnd.getDate();
                var endYear = dateEnd.getFullYear();
                if (startMonth > endMonth) {
                    --endYear;
                }
                for (var year = dateStart.getFullYear(); year <= endYear; year++) {
                    var start = new Date(year, startMonth, startDay);
                    var end = new Date(startMonth > endMonth ? year + 1 : year, endMonth, endDay);
                    dcr.push('(acqdate >= \'' + this._formatDate(start) + '\' AND acqdate <= \'' + this._formatDate(end) + '\')');
                }
                return '(' + dcr.join(' OR ') + ')';
            } else {
                return '(acqdate >= \'' + this._formatDate(dateStart) + '\' AND acqdate <= \'' + this._formatDate(dateEnd) + '\')';
            }
        }
    }, {
        key: 'clouds',
        get: function get() {
            var clouds = this._criteria.clouds;

            var _clouds = _slicedToArray(clouds, 2),
                min = _clouds[0],
                max = _clouds[1];

            return '(cloudness IS NULL OR cloudness < 0 OR (cloudness >= ' + min.toFixed(1) + ' AND cloudness <= ' + max.toFixed(1) + '))';
        }
    }, {
        key: 'angle',
        get: function get() {
            var angle = this._criteria.angle;

            var _angle = _slicedToArray(angle, 2),
                min = _angle[0],
                max = _angle[1];

            return '(tilt IS NULL OR tilt < 0 OR (tilt >= ' + min.toFixed(1) + ' AND tilt <= ' + max.toFixed(1) + '))';
        }
    }, {
        key: 'stereo',
        get: function get() {
            var stereo = this._criteria.stereo;

            return stereo ? "NOT (stereo IS NULL OR stereo = 'NONE')" : '';
        }
    }, {
        key: 'spatial',
        get: function get() {
            return 'Intersects([geomixergeojson], buffer(GeometryFromGeoJson(\'' + JSON.stringify(this.geometry) + '\', 4326), 0.001))';
        }
    }, {
        key: 'archive',
        get: function get() {
            var archive = this._criteria.archive;

            switch (archive) {
                case 'global':
                    return 'islocal = FALSE';
                case 'local':
                    return 'islocal = TRUE';
                default:
                case 'all':
                    return '';
            }
        }
    }, {
        key: 'st_index',
        get: function get() {
            var _criteria3 = this._criteria,
                _criteria3$date = _slicedToArray(_criteria3.date, 2),
                start = _criteria3$date[0],
                end = _criteria3$date[1],
                annually = _criteria3.annually;

            var boxes = this.geometries.reduce(function (a, g) {
                a.push((0, _Utils.get_bbox)(g));
                return a;
            }, []);
            return (0, _Index.to_query)((0, _Index.st_range)(start, end, boxes));
        }
    }, {
        key: 'query',
        get: function get() {
            return [this.st_index, this.spatial, this.date, this.clouds, this.angle, this.stereo, this.satellites].filter(function (x) {
                return x.trim() !== '';
            }).join(' AND ');
        }
    }, {
        key: 'request',
        get: function get() {
            return {
                layer: this._layer,
                orderby: 'acqdate',
                orderdirection: 'desc',
                geometry: true,
                page: 0,
                pagesize: 0,
                count: 'add',
                out_cs: 'EPSG:3857',
                query: this.query
            };
        }
    }]);

    return RequestAdapter;
}();

exports.RequestAdapter = RequestAdapter;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.layerAttrTypes = exports.layerAttributes = exports.ResultsController = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _EventTarget2 = __webpack_require__(3);

var _Quicklook = __webpack_require__(164);

var _DataGrid = __webpack_require__(4);

var _CompositeLayer = __webpack_require__(163);

var _Translations = __webpack_require__(2);

var _Utils = __webpack_require__(1);

var _Extensions = __webpack_require__(7);

__webpack_require__(192);

var _Utils2 = __webpack_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

var Colors = {
    Default: 0x23a5cc,
    Hilite: 0x23a5cc,
    Cart: 0xef4e70,
    CartHilite: 0xef4e70
};

var layerAttributes = ["hover", "selected", "visible", "result", "cart", "sceneid", "acqdate", "acqtime", "cloudness", "tilt", "sunelev", "stereo", "url", "x1", "y1", "x2", "y2", "x3", "y3", "x4", "y4", "volume", "platform", "spot5_a_exists", "spot5_b_exists", "islocal", "product", "gmx_id", "sensor", "local_exists", "spot5id", "stidx"];
var layerAttrTypes = ["boolean", "boolean", "string", "boolean", "boolean", "string", "date", "time", "float", "float", "float", "string", "string", "float", "float", "float", "float", "float", "float", "float", "float", "string", "string", "boolean", "boolean", "boolean", "boolean", "integer", "string", "boolean", "string", "integer"];

function properties_to_item(properties) {
    return properties.slice(1, properties.length - 1).reduce(function (a, v, i) {
        var f = layerAttributes[i];
        switch (layerAttrTypes[i]) {
            case 'date':
                switch (typeof v === 'undefined' ? 'undefined' : _typeof(v)) {
                    case 'string':
                        a[f] = new Date(v);
                        break;
                    case 'number':
                        a[f] = new Date(v * 1000);
                        break;
                    default:
                        break;
                }
                break;
            default:
                a[f] = v;
                break;
        }
        return a;
    }, {});
}

function getBounds(items) {
    return items.reduce(function (a, item) {
        var x2 = item.x2,
            y2 = item.y2,
            x4 = item.x4,
            y4 = item.y4;

        var ne = L.latLng(y2, x2);
        var sw = L.latLng(y4, x4);
        var b = L.latLngBounds(sw, ne);
        if (a === null) {
            a = b;
        } else {
            a.extend(b);
        }
        return a;
    }, null);
}

var sceneid_index = layerAttributes.indexOf('sceneid') + 1;
var result_index = layerAttributes.indexOf('result') + 1;
var cart_index = layerAttributes.indexOf('cart') + 1;
var selected_index = layerAttributes.indexOf('selected') + 1;
var visible_index = layerAttributes.indexOf('visible') + 1;
var hover_index = layerAttributes.indexOf('hover') + 1;

var qlCache = {};

var ResultsController = function (_EventTarget) {
    _inherits(ResultsController, _EventTarget);

    function ResultsController(_ref) {
        var map = _ref.map,
            requestAdapter = _ref.requestAdapter,
            sidebar = _ref.sidebar,
            resultList = _ref.resultList,
            favoritesList = _ref.favoritesList,
            imageDetails = _ref.imageDetails,
            drawnObjects = _ref.drawnObjects;

        _classCallCheck(this, ResultsController);

        var _this = _possibleConstructorReturn(this, (ResultsController.__proto__ || Object.getPrototypeOf(ResultsController)).call(this));

        _this._map = map;
        _this._cart = {};
        _this._requestAdapter = requestAdapter;
        _this._sidebar = sidebar;
        _this._resultList = resultList;
        _this._favoritesList = favoritesList;
        _this._imageDetails = imageDetails;
        _this._resultList.items = [];
        _this._favoritesList.items = [];
        _this._drawings = {};
        _this._currentTab = '';
        _this._currentID = null;

        _this._compositeLayer = new _CompositeLayer.CompositeLayer({ map: _this._map });
        _this._compositeLayer.addEventListener('click', function (e) {
            var _e$detail = e.detail,
                id = _e$detail.id,
                show = _e$detail.show;

            var obj = _this._compositeLayer.getItem(id);
            _this._update_list_item(id, obj);
            switch (_this._currentTab) {
                case 'results':
                    if (show) {
                        if (_this._currentID) {
                            _this._resultList.dim(_this._currentID);
                        }
                        _this._currentID = id;
                        _this._resultList.hilite(id);
                        _this._resultList.scrollToRow(id);
                    } else {
                        _this._currentID = null;
                    }
                    break;
                case 'favorites':
                    if (show) {
                        if (_this._currentID) {
                            _this._favoritesList.dim(_this._currentID);
                        }
                        _this._currentID = id;
                        _this._favoritesList.hilite(id);
                        _this._favoritesList.scrollToRow(id);
                    } else {
                        _this._currentID = null;
                    }
                    break;
                default:
                    break;
            }
        });
        _this._compositeLayer.addEventListener('mouseover', function (e) {
            var id = e.detail;
            _this._highlight(id, true);
        });
        _this._compositeLayer.addEventListener('mouseout', function (e) {
            var id = e.detail;
            _this._highlight(id, false);
        });

        _this._resultList.addEventListener('cart', function (e) {
            var gmx_id = e.detail.gmx_id;

            var item = _this._compositeLayer.addToCart(gmx_id);
            _this._resultList.redrawItem(gmx_id, item);

            var event = document.createEvent('Event');
            event.initEvent('cart', false, false);
            event.detail = item;
            _this.dispatchEvent(event);
        });

        _this._resultList.addEventListener('visible', function (e) {
            var _e$detail2 = e.detail,
                gmx_id = _e$detail2.gmx_id,
                visible = _e$detail2.visible;

            var show = false;
            switch (visible) {
                case 'visible':
                case 'loading':
                    show = false;
                    break;
                case 'hidden':
                default:
                    show = true;
                    break;
            }

            _this._show_ql(gmx_id, show).then(function () {
                var event = document.createEvent('Event');
                event.initEvent('visible', false, false);
                _this.dispatchEvent(event);
            });
        });
        _this._resultList.addEventListener('info', function (e) {
            var _e$detail3 = e.detail,
                item = _e$detail3.item,
                top = _e$detail3.top,
                button = _e$detail3.button;
            var _this$_resultList$bbo = _this._resultList.bbox,
                left = _this$_resultList$bbo.left,
                width = _this$_resultList$bbo.width;

            _this._imageDetails.button = button;
            if (_this._imageDetails.visible && _this._imageDetails.item.sceneid == item.sceneid) {
                _this._imageDetails.hide();
            } else {
                _this._imageDetails.hide();
                _this._imageDetails.item = item;
                _this._imageDetails.show({ left: left + width + 20, top: top });
            }
        });

        _this._resultList.addEventListener('mouseover', function (e) {
            var gmx_id = e.detail.item.gmx_id;

            _this._compositeLayer.setHover(gmx_id, true);
        });

        _this._resultList.addEventListener('mouseout', function (e) {
            var gmx_id = e.detail.item.gmx_id;

            _this._compositeLayer.setHover(gmx_id, false);
        });

        var zoom_to_bounds = function zoom_to_bounds(xmin, ymin, xmax, ymax) {
            var ne = L.latLng(ymax, xmax);
            var sw = L.latLng(ymin, xmin);
            _this._map.fitBounds(L.latLngBounds(sw, ne), { animate: false });
            // this._map.invalidateSize();
        };

        _this._resultList.addEventListener('click', function (e) {
            var _e$detail$item = e.detail.item,
                gmx_id = _e$detail$item.gmx_id,
                x2 = _e$detail$item.x2,
                y2 = _e$detail$item.y2,
                x4 = _e$detail$item.x4,
                y4 = _e$detail$item.y4;

            zoom_to_bounds(x4, y4, x2, y2);
            _this._show_ql(gmx_id, true);
        });

        _this._resultList.addEventListener('cart:all', function (e) {
            var state = e.detail.state;


            _this._compositeLayer.addAllToCart();
            _this._resultList.items = _this._compositeLayer.getFilteredItems(function (item) {
                return item.result;
            });

            var event = document.createEvent('Event');
            event.initEvent('cart', false, false);
            _this.dispatchEvent(event);
        });

        _this._resultList.addEventListener('cart:limit', function (e) {
            var event = document.createEvent('Event');
            event.initEvent('cart:limit', false, false);
            _this.dispatchEvent(event);
        });

        _this._favoritesList.addEventListener('selected', function (e) {
            var _e$detail4 = e.detail,
                gmx_id = _e$detail4.gmx_id,
                selected = _e$detail4.selected;

            _this._compositeLayer.setSelected(gmx_id, selected);
            var event = document.createEvent('Event');
            event.initEvent('selected', false, false);
            event.detail = e.detail;
            _this.dispatchEvent(event);
        });

        _this._favoritesList.addEventListener('visible', function (e) {
            var _e$detail5 = e.detail,
                gmx_id = _e$detail5.gmx_id,
                visible = _e$detail5.visible;

            var show = false;
            switch (visible) {
                case 'visible':
                case 'loading':
                    show = false;
                    break;
                case 'hidden':
                default:
                    show = true;
                    break;
            }
            _this._show_ql(gmx_id, show).then(function () {
                var event = document.createEvent('Event');
                event.initEvent('visible', false, false);
                _this.dispatchEvent(event);
            });
        });

        _this._favoritesList.addEventListener('visible:all', function (e) {
            var show = e.detail;
            var items = _this._compositeLayer.vectors;
            Object.keys(items).filter(function (id) {
                return items[id].properties[cart_index];
            }).forEach(function (id) {
                _this._show_ql(id, show);
            });

            var event = document.createEvent('Event');
            event.initEvent('visible', false, false);
            _this.dispatchEvent(event);
        });

        _this._favoritesList.addEventListener('mouseover', function (e) {
            var gmx_id = e.detail.item.gmx_id;

            _this._compositeLayer.setHover(gmx_id, true);
        });

        _this._favoritesList.addEventListener('mouseout', function (e) {
            var gmx_id = e.detail.item.gmx_id;

            _this._compositeLayer.setHover(gmx_id, false);
        });

        _this._favoritesList.addEventListener('info', function (e) {
            var _e$detail6 = e.detail,
                item = _e$detail6.item,
                top = _e$detail6.top,
                button = _e$detail6.button;
            var _this$_favoritesList$ = _this._favoritesList.bbox,
                left = _this$_favoritesList$.left,
                width = _this$_favoritesList$.width;

            _this._imageDetails.button = button;
            if (_this._imageDetails.visible && _this._imageDetails.item.sceneid == item.sceneid) {
                _this._imageDetails.hide();
            } else {
                _this._imageDetails.hide();
                _this._imageDetails.item = item;
                _this._imageDetails.show({ left: left + width + 20, top: top });
            }
        });

        _this._favoritesList.addEventListener('click', function (e) {
            var _e$detail$item2 = e.detail.item,
                gmx_id = _e$detail$item2.gmx_id,
                x2 = _e$detail$item2.x2,
                y2 = _e$detail$item2.y2,
                x4 = _e$detail$item2.x4,
                y4 = _e$detail$item2.y4;

            zoom_to_bounds(x4, y4, x2, y2);
            _this._show_ql(gmx_id, true);
        });

        _this._drawnObjects = drawnObjects;
        _this.createDrawing = _this.createDrawing.bind(_this);

        _this._map.gmxDrawing.on('drawstop', _this.createDrawing).on('editstop', function (_ref2) {
            var object = _ref2.object;

            if (this._drawings[object.options.uuid]) {
                this.updateDrawing(object);
            }
        }.bind(_this)).on('dragend', function (_ref3) {
            var object = _ref3.object;

            if (this._drawings[object.options.uuid]) {
                this.updateDrawing(object);
            }
        }.bind(_this));

        _this._drawnObjects.addEventListener('edit', function (e) {
            var _e$detail7 = e.detail,
                id = _e$detail7.id,
                name = _e$detail7.name,
                color = _e$detail7.color;
            var drawing = _this._drawings[id].drawing;

            _this._drawings[id].name = name;
            _this._drawings[id].color = color;
            var options = {
                lineStyle: {
                    fill: false,
                    weight: 2,
                    opacity: 1,
                    color: color
                },
                pointStyle: { color: color }
            };
            if (drawing) {
                if (drawing.options.editable) {
                    drawing.setOptions(options);
                } else {
                    drawing.enableEdit();
                    options.className = 'osm-layer';
                    drawing.setOptions(options);
                    drawing.disableEdit();
                }
            }
        });

        _this._drawnObjects.addEventListener('delete', function (e) {
            var id = e.detail.id;
            var drawing = _this._drawings[id].drawing;

            delete _this._drawings[id];
            if (drawing) {
                drawing.remove();
            }
            _this.updateDrawnObjects();
        });

        _this._drawnObjects.addEventListener('check', function (e) {
            var _e$detail8 = e.detail,
                id = _e$detail8.id,
                visible = _e$detail8.visible;

            _this.showDrawing(id, visible);
            _this.updateDrawnObjects();
        });

        _this._drawnObjects.addEventListener('show:all', function (e) {
            var visible = e.detail;
            Object.keys(_this._drawings).forEach(function (id) {
                _this.showDrawing(id, visible);
            });
        });

        _this._drawnObjects.addEventListener('fit', function (e) {
            var _e$detail9 = e.detail,
                id = _e$detail9.id,
                visible = _e$detail9.visible;

            var item = _this._drawings[id];
            if (visible && item) {
                var _item$geoJSON$geometr = item.geoJSON.geometry,
                    type = _item$geoJSON$geometr.type,
                    coordinates = _item$geoJSON$geometr.coordinates;

                if (type === 'Point') {
                    var center = L.latLng(coordinates[1], coordinates[0]);
                    _this._map.setView(center);
                    // this._map.invalidateSize();
                } else {
                    var bounds = item.drawing.getBounds();
                    _this._map.fitBounds(bounds, { animate: false });
                    // this._map.invalidateSize();
                }
            }
        });

        _this._drawnObjects.addEventListener('delete:all', function (e) {
            Object.keys(_this._drawings).forEach(function (id) {
                var drawing = _this._drawings[id].drawing;

                delete _this._drawings[id];
                if (drawing) {
                    drawing.remove();
                }
            });
            _this.updateDrawnObjects();
        });

        document.body.addEventListener('click', function (e) {
            return _this._imageDetails.hide();
        });
        return _this;
    }

    _createClass(ResultsController, [{
        key: '_highlight',
        value: function _highlight(gmx_id, hover) {
            switch (this._currentTab) {
                case 'results':
                    if (hover) {
                        this._resultList.hilite(gmx_id);
                    } else {
                        this._resultList.dim(gmx_id);
                    }
                    break;
                case 'favorites':
                    if (hover) {
                        this._favoritesList.hilite(gmx_id);
                    } else {
                        this._favoritesList.dim(gmx_id);
                    }
                    break;
                default:
                    break;
            }
        }
    }, {
        key: '_update_list_item',
        value: function _update_list_item(id, item) {
            switch (this._currentTab) {
                case 'results':
                    this._resultList.redrawItem(id, item);
                    break;
                case 'favorites':
                    this._favoritesList.redrawItem(id, item);
                    break;
                default:
                    break;
            }
        }
    }, {
        key: '_show_ql',
        value: function _show_ql(id, show) {
            var _this2 = this;

            return new Promise(function (resolve) {
                if (_this2._compositeLayer.setVisible(id, show)) {
                    _this2._update_list_item(id, _this2._compositeLayer.getItem(id));
                    _this2._compositeLayer.showQuicklook(id, show).then(function () {
                        _this2._update_list_item(id, _this2._compositeLayer.getItem(id));
                        var event = document.createEvent('Event');
                        event.initEvent('visible', false, false);
                        _this2.dispatchEvent(event);
                        resolve();
                    }).catch(function (e) {
                        return console.log(e);
                    });
                }
            });
        }
    }, {
        key: 'setLayer',
        value: function setLayer(_ref4) {
            var fields = _ref4.fields,
                values = _ref4.values,
                types = _ref4.types;
            var activeTabId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'results';

            this._compositeLayer.setData({ fields: fields, values: values }, activeTabId);
            var event = document.createEvent('Event');
            event.initEvent('result:done', false, false);
            event.detail = { activeTabId: activeTabId };
            this.dispatchEvent(event);
        }
    }, {
        key: 'hideContours',
        value: function hideContours() {
            this._currentTab = 'search';
            this._compositeLayer.currentTab = this._currentTab;
            this._compositeLayer.redraw();
        }
    }, {
        key: 'showResults',
        value: function showResults() {
            this._currentTab = 'results';
            this._compositeLayer.currentTab = this._currentTab;
            this._compositeLayer.redraw();
            this._resultList.items = this._compositeLayer.getFilteredItems(function (item) {
                return item.result;
            });
            // this._resultList.items.forEach(({gmx_id, visible}) => this._update_ql(gmx_id, visible));
        }
    }, {
        key: 'zoomToResults',
        value: function zoomToResults() {
            var bounds = getBounds(this._compositeLayer.getFilteredItems(function (item) {
                return item.result;
            }));
            if (bounds) {
                this._map.fitBounds(bounds, { animate: false });
                // this._map.invalidateSize();
            }
        }
    }, {
        key: 'zoomToFavorites',
        value: function zoomToFavorites() {
            var bounds = getBounds(this._compositeLayer.getFilteredItems(function (item) {
                return item.cart;
            }));
            if (bounds) {
                this._map.fitBounds(bounds, { animate: false });
                // this._map.invalidateSize();
            }
        }
    }, {
        key: 'showFavorites',
        value: function showFavorites() {
            this._currentTab = 'favorites';
            this._compositeLayer.currentTab = this._currentTab;
            this._compositeLayer.redraw();
            this.favoritesList.items = this._compositeLayer.getFilteredItems(function (item) {
                return item.cart;
            });
            // this.favoritesList.items.forEach(({gmx_id, visible}) => this._update_ql(gmx_id, visible));
        }
    }, {
        key: 'addVisibleToCart',
        value: function addVisibleToCart() {

            if (this._compositeLayer.getFilteredItems(function (item) {
                return item.result && item.visible === 'visible' || item.cart;
            }).length > window.MAX_CART_SIZE) {
                var _event = document.createEvent('Event');
                _event.initEvent('cart:limit', false, false);
                this.dispatchEvent(_event);
                return;
            }

            this._compositeLayer.addVisibleToCart();

            this.showResults();

            var event = document.createEvent('Event');
            event.initEvent('cart', false, false);
            this.dispatchEvent(event);
        }
    }, {
        key: '_update_ql',
        value: function _update_ql(id, visible) {
            var show = false;
            if (typeof visible === 'boolean') {
                show = visible;
            } else if (typeof visible === 'string') {
                switch (visible) {
                    case 'visible':
                    case 'loading':
                        show = true;
                        break;
                    case 'hidden':
                    default:
                        show = false;
                        break;
                }
            }
            return this._show_ql(id, show);
        }
    }, {
        key: 'removeSelectedFavorites',
        value: function removeSelectedFavorites() {
            this._compositeLayer.removeSelectedFavorites();
            this._favoritesList.items = this._compositeLayer.getFilteredItems(function (item) {
                return item.cart;
            });
        }
    }, {
        key: 'clear',
        value: function clear() {
            this.resultList.items = [];
            this._downloadCache = [];
            this._compositeLayer.clear();
        }
    }, {
        key: 'createDrawing',
        value: function createDrawing(_ref5) {
            var object = _ref5.object,
                geoJSON = _ref5.geoJSON;

            var id = object.options.uuid || L.gmxUtil.newId();
            if (!this._drawings[id]) {
                object.options.uuid = id;
                var color = L.GmxDrawing.utils.defaultStyles.lineStyle.color;
                switch (object.options.type) {
                    case 'Polygon':
                    case 'Polyline':
                    case 'Rectangle':
                        color = object.options.lineStyle.color;
                        break;
                    default:
                        break;
                }
                geoJSON = geoJSON || object.toGeoJSON();
                this._drawings[object.options.uuid] = this.getObject({
                    id: object.options.uuid,
                    name: null,
                    geoJSON: geoJSON,
                    color: color,
                    visible: true
                });
                this._drawings[object.options.uuid].drawing = object;
                this.updateDrawnObjects();
                window.Catalog.preventShowQuicklook = false;
                return this._drawings[object.options.uuid].drawing;
            } else {
                return this._drawings[id].drawing;
            }
        }
    }, {
        key: 'addDrawing',
        value: function addDrawing(item) {
            var name = item.name,
                color = item.color,
                area = item.area,
                geoJSON = item.geoJSON,
                visible = item.visible;

            if ((0, _Utils.is_geojson_feature)(geoJSON)) {
                var id = L.gmxUtil.newId();
                var editable = typeof geoJSON.properties.editable === 'undefined' ? true : geoJSON.properties.editable;;
                this._drawings[id] = this.getObject({ id: id, name: name, geoJSON: geoJSON, color: color, visible: visible, editable: editable });
                this.updateDrawnObjects();
                this.showDrawing(id, visible);
                return this._drawings[id].drawing;
            } else {
                return null;
            }
        }
    }, {
        key: 'showDrawing',
        value: function showDrawing(id, visible) {
            if (visible) {
                var object = this._drawings[id];
                var color = object.color;
                var editable = typeof object.geoJSON.properties.editable === 'undefined' ? true : object.geoJSON.properties.editable;
                var options = {
                    editable: editable,
                    lineStyle: {
                        fill: false,
                        weight: 2,
                        opacity: 1,
                        color: color
                    },
                    pointStyle: {
                        color: color
                    }
                };

                var _map$gmxDrawing$addGe = this._map.gmxDrawing.addGeoJSON(object.geoJSON, options),
                    _map$gmxDrawing$addGe2 = _slicedToArray(_map$gmxDrawing$addGe, 1),
                    drawing = _map$gmxDrawing$addGe2[0];

                if (!editable) {
                    options.className = 'osm-layer';
                    // drawing.enableEdit();
                    drawing.setOptions({
                        editable: editable,
                        lineStyle: {
                            fill: false,
                            weight: 2,
                            opacity: 1,
                            color: color
                        },
                        pointStyle: { color: color }
                    });
                    // drawing.disableEdit();
                }
                drawing.options.uuid = id;
                object.drawing = drawing;
                drawing.bringToBack();
                drawing.visible = true;
            } else {
                this._drawings[id].visible = false;
                if (this._drawings[id].drawing) {
                    this._drawings[id].drawing.remove();
                    this._drawings[id].drawing = null;
                }
            }
        }
    }, {
        key: 'updateDrawing',
        value: function updateDrawing(object) {
            if (this._drawings[object.options.uuid]) {
                var id = object.options.uuid;
                var geoJSON = object.toGeoJSON();
                this._drawings[id].drawing = object;
                this._drawings[id].geoJSON = geoJSON;
                this._drawings[id].area = this._getObjectArea(geoJSON);
                this.updateDrawnObjects();
            }
        }
    }, {
        key: '_getObjectName',
        value: function _getObjectName(geoJSON) {
            if (geoJSON.properties.name) {
                return geoJSON.properties.name;
            } else {
                var type = geoJSON.geometry.type;
                switch (type.toUpperCase()) {
                    case 'POINT':
                        return T.getText('objects.point');
                    case 'LINESTRING':
                    case 'MULTILINESTRING':
                        return T.getText('objects.line');
                    case 'MULTIPOLYGON':
                    case 'POLYGON':
                    default:
                        return T.getText('objects.polygon');
                }
            }
        }
    }, {
        key: '_getObjectArea',
        value: function _getObjectArea(geoJSON) {
            var type = geoJSON.geometry.type;
            switch (type.toUpperCase()) {
                case 'POINT':
                    return 0;
                case 'LINESTRING':
                case 'MULTILINESTRING':
                    return L.gmxUtil.geoJSONGetLength(geoJSON);
                case 'MULTIPOLYGON':
                case 'POLYGON':
                default:
                    return L.gmxUtil.geoJSONGetArea(geoJSON);
            }
        }
    }, {
        key: 'getObject',
        value: function getObject(_ref6) {
            var id = _ref6.id,
                name = _ref6.name,
                geoJSON = _ref6.geoJSON,
                color = _ref6.color,
                visible = _ref6.visible;

            id = id || L.gmxUtil.newId();
            return {
                id: id,
                name: name === null || typeof name === 'undefined' ? this._getObjectName(geoJSON) : decodeURIComponent(name),
                area: this._getObjectArea(geoJSON),
                geoJSON: { type: 'Feature', geometry: L.gmxUtil.geometryToGeoJSON(geoJSON.geometry), properties: geoJSON.properties },
                visible: typeof visible === 'undefined' ? true : Boolean(visible),
                color: geoJSON.geometry.type === 'Point' ? undefined : typeof color === 'undefined' ? '#0033FF' : isNaN(parseInt(color, 10)) ? color : '#' + hex(color),
                editable: typeof geoJSON.properties.editable === 'undefined' ? true : geoJSON.properties.editable
            };
        }
    }, {
        key: 'updateDrawnObjects',
        value: function updateDrawnObjects() {
            var _this3 = this;

            var objects = Object.keys(this._drawings).map(function (id) {
                return _this3._drawings[id];
            });
            this._requestAdapter.geometries = objects.filter(function (obj) {
                return obj.visible;
            }).reduce(function (a, _ref7) {
                var geoJSON = _ref7.geoJSON;
                return a.concat(geoJSON.geometry);
            }, []);
            this._drawnObjects.items = objects;
        }
    }, {
        key: 'enableFilter',
        value: function enableFilter(enable) {
            this._resultList.enableFilter(enable);
            this._favoritesList.enableFilter(enable);
        }
    }, {
        key: 'cart',
        get: function get() {
            return this._cart;
        }
    }, {
        key: 'resultList',
        get: function get() {
            return this._resultList;
        }
    }, {
        key: 'favoritesList',
        get: function get() {
            return this._favoritesList;
        }
    }, {
        key: 'drawings',
        set: function set(value) {
            this._drawings = value;
        },
        get: function get() {
            return this._drawings;
        }
    }, {
        key: 'downloadCache',
        set: function set(_ref8) {
            var fields = _ref8.fields,
                values = _ref8.values,
                types = _ref8.types;

            this._downloadCache = (0, _Utils.from_gmx)({ fields: fields, values: values, types: types });
        },
        get: function get() {
            return this._downloadCache;
        }
    }, {
        key: 'resultsCount',
        get: function get() {
            return this._compositeLayer.resultsCount;
        }
    }, {
        key: 'favoritesCount',
        get: function get() {
            return this._compositeLayer.favoritesCount;
        }
    }, {
        key: 'count',
        get: function get() {
            switch (this._currentTab) {
                case 'results':
                    return this._resultList.count;
                case 'favorites':
                    return this._favoritesList.count;
                default:
                    return 0;
            }
        }
    }, {
        key: 'hasResults',
        get: function get() {
            return this._compositeLayer.hasResults;
        }
    }, {
        key: 'hasVisibleResults',
        get: function get() {
            return this._compositeLayer.hasVisibleResults;
        }
    }, {
        key: 'hasFavoritesSelected',
        get: function get() {
            return this._compositeLayer.hasFavoritesSelected;
        }
    }, {
        key: 'hasFavorites',
        get: function get() {
            this._compositeLayer.hasFavorites;
        }
    }, {
        key: 'results',
        get: function get() {
            var items = this._compositeLayer.vectors;
            return this._resultList.items.map(function (item) {
                var properties = items[item.gmx_id].properties;

                item.geoJSON = L.gmxUtil.convertGeometry(properties[properties.length - 1], true, true);
                item.geoJSON = (0, _Utils.normalize_geometry_type)(item.geoJSON);
                return item;
            });
        }
    }, {
        key: 'favorites',
        get: function get() {
            var items = this._compositeLayer.vectors;
            return this._favoritesList.items.map(function (item) {
                var properties = items[item.gmx_id].properties;

                item.geoJSON = L.gmxUtil.convertGeometry(properties[properties.length - 1], true, true);
                item.geoJSON = (0, _Utils.normalize_geometry_type)(item.geoJSON);
                return item;
            });
        }
    }, {
        key: 'filter',
        set: function set(value) {
            this._filter = value;
            this._resultList.filter = value;
            this._favoritesList.filter = value;
            this._compositeLayer.redraw();
        }
    }, {
        key: 'platforms',
        get: function get() {
            var get_platforms = function get_platforms(items) {
                var ps = items.reduce(function (a, _ref9) {
                    var platform = _ref9.platform;

                    a[platform] = true;
                    return a;
                }, {});
                return Object.keys(ps).map(function (platform) {
                    return { platform: platform, checked: true };
                });
            };
            switch (this._currentTab) {
                case 'results':
                    return get_platforms(this._compositeLayer.getFilteredItems(function (item) {
                        return item.result;
                    }));
                case 'favorites':
                    return get_platforms(this._compositeLayer.getFilteredItems(function (item) {
                        return item.cart;
                    }));
                default:
                    return [];
            }
        }
    }]);

    return ResultsController;
}(_EventTarget2.EventTarget);

exports.ResultsController = ResultsController;
exports.layerAttributes = layerAttributes;
exports.layerAttrTypes = layerAttrTypes;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DrawnObjects = exports.ResultList = exports.SearchOptions = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(195);

var _RangeWidget = __webpack_require__(179);

var _ResultList = __webpack_require__(13);

var _DrawnObjects = __webpack_require__(11);

var _Cart = __webpack_require__(10);

var _ImageDetails = __webpack_require__(12);

var _Satellites = __webpack_require__(166);

var _EventTarget2 = __webpack_require__(3);

var _Translations = __webpack_require__(2);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

__webpack_require__(185);
var Pikaday = __webpack_require__(213);

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

T.addText('rus', {
  period: {
    title: 'Период',
    from: 'с',
    to: 'по',
    annually: 'Данные за каждый год'
  },
  clouds: 'Облачность, %',
  angle: 'Угол съемки, °',
  resolution: {
    title: 'Детальность, м/пкс',
    unit: 'м/пкс'
  },
  satellites: 'Типы данных',
  archive: {
    title: 'Архив',
    local: 'внутренний',
    global: 'глобальный',
    all: 'весь'
  },
  stereo: 'только стерео',
  maximize: 'Показать',
  minimize: 'Свернуть'
});

T.addText('eng', {
  period: {
    title: 'Period',
    from: 'from',
    to: 'to',
    annually: 'annually'
  },
  clouds: 'Cloudiness, %',
  angle: 'View angle, °',
  resolution: {
    title: 'Resolution, m/px',
    unit: 'm/px'
  },
  satellites: 'Satellites',
  archive: {
    title: 'Archive',
    local: 'local',
    global: 'global',
    all: 'all'
  },
  stereo: 'stereo only',
  maximize: 'Maximize',
  minimize: 'Minimize'
});

var SearchOptions = function (_EventTarget) {
  _inherits(SearchOptions, _EventTarget);

  function SearchOptions(container, _ref) {
    var restricted = _ref.restricted;

    _classCallCheck(this, SearchOptions);

    var _this = _possibleConstructorReturn(this, (SearchOptions.__proto__ || Object.getPrototypeOf(SearchOptions)).call(this));

    _this._container = container;
    _this._container.classList.add('search-options');
    _this._content = _this._container;
    _this._content.innerHTML = '<div class="no-select search-options-fixed-section">\n      <div class="search-options-period-title">' + T.getText('period.title') + '</div>\n      <div class="search-options-period-section">\n        <div class="search-options-period">\n          <div class="search-options-period-from">' + T.getText('period.from') + '</div>\n          <input class="search-options-period-from-value" type="text"/>      \n          <div class="search-options-period-to">' + T.getText('period.to') + '</div>\n          <input class="search-options-period-to-value" type="text" />\n        </div>\n        <div class="search-options-period-annually">\n          <input id="period_annually" class="search-options-period-annually-value" type="checkbox" />\n          <label for="period_annually" class="search-options-period-annually-title">' + T.getText('period.annually') + '</label>\n        </div>    \n      </div>\n      <div class="search-options-clouds">      \n        <div class="search-options-clouds-title">' + T.getText('clouds') + '</div>\n        <div class="search-options-clouds-value"></div>      \n      </div>    \n      <div class="search-options-angle">      \n        <div class="search-options-angle-title">' + T.getText('angle') + '</div>\n        <div class="search-options-angle-value"></div>      \n      </div>\n      <div class="search-options-resolution">      \n        <div class="search-options-resolution-title">' + T.getText('resolution.title') + '</div>\n        <div class="search-options-resolution-value"></div>      \n      </div>    \n      <div class="search-options-satellites-number-section">\n        <div class="search-options-satellites-title">' + T.getText('satellites') + '</div>\n        <div class="search-options-satellites-number"></div>\n        <div class="search-options-satellites-archive">\n            <!-- label class="search-options-satellites-archive-title">' + T.getText('archive.title') + '</label -->\n            <select>\n                <option value="global">' + T.getText('archive.global') + '</option>\n                <option value="local">' + T.getText('archive.local') + '</option>\n                <option value="all">' + T.getText('archive.all') + '</option>\n            </select>\n            <!-- input id="satellite_stereo" type="checkbox" value="stereo" / -->\n            <!-- label for="satellite_stereo">' + T.getText('stereo') + '</label -->\n        </div>\n      </div>\n    </div>\n    <div class="no-select search-options-satellites"></div>';

    _this._content.classList.add('search-options-content');
    _this._satellitesContainer = _this._container.querySelector('.search-options-satellites');
    _this._initDatePickers();
    _this._initAnnually();
    _this._initSliders();
    _this._initSatellites(restricted);
    _this._initArchive(restricted);
    _this._stopPropagation = _this._stopPropagation.bind(_this);
    _this._container.addEventListener('click', _this._stopPropagation);
    // this._container.addEventListener('mousemove', this._stopPropagation);
    return _this;
  }

  _createClass(SearchOptions, [{
    key: '_stopPropagation',
    value: function _stopPropagation(e) {
      e.stopPropagation();
    }
  }, {
    key: '_initAnnually',
    value: function _initAnnually() {
      this._annually = this._container.querySelector('.search-options-period-annually-value');
    }
  }, {
    key: '_initDatePickers',
    value: function _initDatePickers() {
      this._dateFormat = 'dd.mm.yy';
      var i18n = {
        previousMonth: 'Предыдущий месяц',
        nextMonth: 'Следующий месяц',
        months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
        weekdays: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],
        weekdaysShort: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб']
      };
      switch (T.getLanguage()) {
        default:
        case 'rus':
          moment.locale('ru');
          break;
        case 'eng':
          moment.locale('en');
          i18n = {
            previousMonth: 'Previous Month',
            nextMonth: 'Next Month',
            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
            weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']
          };
          break;
      }

      var endDate = new Date();
      var startDate = new Date(endDate.getFullYear(), 0, 1);

      this._startDate = new Pikaday({
        field: this._container.querySelector('.search-options-period-from-value'),
        // format: 'L', 
        format: 'DD.MM.YYYY',
        yearRange: 20,
        i18n: i18n,
        keyboardInput: false,
        blurFieldOnSelect: false
      });

      this._endDate = new Pikaday({
        field: this._container.querySelector('.search-options-period-to-value'),
        // format: 'L', 
        format: 'DD.MM.YYYY',
        yearRange: 20,
        i18n: i18n,
        keyboardInput: false,
        blurFieldOnSelect: false
      });
    }
  }, {
    key: '_initArchive',
    value: function _initArchive(restricted) {
      this._archive = this._container.querySelector('.search-options-satellites-archive select');
      this._archive.style.display = restricted ? 'block' : 'none';
      if (!restricted) {
        this._archive.value = 'global';
      }
    }
  }, {
    key: '_initSliders',
    value: function _initSliders() {
      var _this2 = this;

      this._cloudSlider = new _RangeWidget.RangeWidget(this._container.querySelector('.search-options-clouds-value'), { min: 0, max: 100 });
      this._cloudSlider.values = [0, 100];

      this._angleSlider = new _RangeWidget.RangeWidget(this._container.querySelector('.search-options-angle-value'), { min: 0, max: 60 });
      this._angleSlider.values = [0, 60];

      this._resolutionSlider = new _RangeWidget.RangeWidget(this._container.querySelector('.search-options-resolution-value'), { min: 0.3, max: 20, mode: 'float' });
      this._resolutionSlider.values = [0.3, 20];
      this._resolutionSlider.addEventListener('change', function (e) {
        _this2._satellites.range = e.detail;
      });
    }
  }, {
    key: '_initSatellites',
    value: function _initSatellites(restricted) {
      var _this3 = this;

      this._satelliteNumber = this._container.querySelector('.search-options-satellites-number');
      this._satellites = new _Satellites.Satellites(this._satellitesContainer, { restricted: restricted });
      this._satellites.addEventListener('change', function (e) {
        _this3._updateResolution();
        _this3._updateSatelliteNumber();

        var event = document.createEvent('Event');
        event.initEvent('change', false, false);
        _this3.dispatchEvent(event);
      });
    }
  }, {
    key: '_updateResolution',
    value: function _updateResolution() {
      var range = this._satellites.range;
      var values = this._resolutionSlider.values;
      if (range.length === 2) {
        var _range = _slicedToArray(range, 2),
            lo = _range[0],
            hi = _range[1];

        var _values = _slicedToArray(values, 2),
            min = _values[0],
            max = _values[1];

        this._resolutionSlider.values = [min > lo ? lo : min, max < hi ? hi : max];
      } else {
        this._resolutionSlider.values = values;
      }
    }
  }, {
    key: '_satellitesVisible',
    value: function _satellitesVisible() {
      return this._satellitesContainer.style.display == 'block';
    }
  }, {
    key: 'showSatellites',
    value: function showSatellites() {
      this._satellitesContainer.style.display = 'block';
    }
  }, {
    key: 'hideSatellites',
    value: function hideSatellites() {
      this._satellitesContainer.style.display = 'none';
    }
  }, {
    key: '_setSliderValues',
    value: function _setSliderValues(values, updateSatellitesSelection) {
      this._resolutionSlider.values = values;
      this._handleResolutionsSliderMove(values, updateSatellitesSelection);
    }
  }, {
    key: '_updateSatelliteNumber',
    value: function _updateSatelliteNumber() {
      this._satelliteNumber.innerText = this._satellites.count;
    }
  }, {
    key: '_handleSearch',
    value: function _handleSearch() {

      var event = document.createEvent('Event');
      event.initEvent('search', false, false);
      event.detail = {
        date: [this._startDate.getDate(), this._endDate.getDate()],
        annually: this._annually.checked,
        clouds: this._cloudSlider.values,
        angle: this._angleSlider.values,
        satellites: this._satellites.items
      };
      this.dispatchEvent(event);
    }
  }, {
    key: 'resize',
    value: function resize(total) {
      var height = this._container.querySelector('.search-options-fixed-section').getBoundingClientRect().height;
      this._container.querySelector('.search-options-satellites').style.maxHeight = total - height - 33 + 'px';
    }
  }, {
    key: 'refresh',
    value: function refresh() {
      this.criteria = this.criteria;
    }
  }, {
    key: 'criteria',
    set: function set(_ref2) {
      var _ref2$date = _slicedToArray(_ref2.date, 2),
          _ref2$date$ = _ref2$date[0],
          startDate = _ref2$date$ === undefined ? new Date() : _ref2$date$,
          _ref2$date$2 = _ref2$date[1],
          endDate = _ref2$date$2 === undefined ? new Date() : _ref2$date$2,
          _ref2$annually = _ref2.annually,
          annually = _ref2$annually === undefined ? false : _ref2$annually,
          _ref2$clouds = _slicedToArray(_ref2.clouds, 2),
          _ref2$clouds$ = _ref2$clouds[0],
          minClouds = _ref2$clouds$ === undefined ? 0 : _ref2$clouds$,
          _ref2$clouds$2 = _ref2$clouds[1],
          maxClouds = _ref2$clouds$2 === undefined ? 100 : _ref2$clouds$2,
          _ref2$angle = _slicedToArray(_ref2.angle, 2),
          _ref2$angle$ = _ref2$angle[0],
          minAngle = _ref2$angle$ === undefined ? 0 : _ref2$angle$,
          _ref2$angle$2 = _ref2$angle[1],
          maxAngle = _ref2$angle$2 === undefined ? 60 : _ref2$angle$2,
          _ref2$satellites = _ref2.satellites,
          satellites = _ref2$satellites === undefined ? {} : _ref2$satellites,
          _ref2$stereo = _ref2.stereo,
          stereo = _ref2$stereo === undefined ? false : _ref2$stereo;

      this._startDate.setDate(startDate);
      this._endDate.setDate(endDate);
      this._annually.checked = annually;
      // this._stereo.checked = stereo;

      this._cloudSlider.values = [minClouds, maxClouds];
      this._angleSlider.values = [minAngle, maxAngle];

      this._satellites.data = satellites;
      this._updateResolution();
      this._updateSatelliteNumber();
    },
    get: function get() {
      return {
        date: [this._startDate.getDate(), this._endDate.getDate()],
        annually: this._annually.checked,
        clouds: this._cloudSlider.values,
        angle: this._angleSlider.values,
        satellites: this._satellites.data,
        stereo: false,
        archive: this._archive.value
      };
    }
  }, {
    key: 'selected',
    get: function get() {
      return this._satellites._ms.some(function (x) {
        return x.checked;
      }) || this._satellites._pc.some(function (x) {
        return x.checked;
      });
    }
  }]);

  return SearchOptions;
}(_EventTarget2.EventTarget);

window.Catalog = window.Catalog || {};
window.Catalog.SearchOptions = SearchOptions;

exports.SearchOptions = SearchOptions;
exports.ResultList = _ResultList.ResultList;
exports.DrawnObjects = _DrawnObjects.DrawnObjects;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ShapeLoader = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Extensions = __webpack_require__(7);

var _Utils = __webpack_require__(1);

var _Formats = __webpack_require__(167);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ShapeLoader = function () {
    function ShapeLoader(_ref) {
        var gmxResourceServer = _ref.gmxResourceServer,
            catalogResourceServer = _ref.catalogResourceServer,
            resultsController = _ref.resultsController,
            drawnObjects = _ref.drawnObjects,
            _ref$shapeLoaderUrl = _ref.shapeLoaderUrl,
            shapeLoaderUrl = _ref$shapeLoaderUrl === undefined ? 'http://maps.kosmosnimki.ru/ShapeLoader' : _ref$shapeLoaderUrl,
            _ref$metadataUrl = _ref.metadataUrl,
            metadataUrl = _ref$metadataUrl === undefined ? 'GetMetadata.ashx' : _ref$metadataUrl,
            _ref$fileMakerUrl = _ref.fileMakerUrl,
            fileMakerUrl = _ref$fileMakerUrl === undefined ? 'VectorFileMaker' : _ref$fileMakerUrl,
            _ref$fileDownloaderUr = _ref.fileDownloaderUrl,
            fileDownloaderUrl = _ref$fileDownloaderUr === undefined ? 'DownloadFile' : _ref$fileDownloaderUr,
            _ref$csvFileUrl = _ref.csvFileUrl,
            csvFileUrl = _ref$csvFileUrl === undefined ? 'CreateCsv.ashx' : _ref$csvFileUrl;

        _classCallCheck(this, ShapeLoader);

        this._gmxResourceServer = gmxResourceServer;
        this._catalogResourceServer = catalogResourceServer;
        this._resultsController = resultsController;
        this._drawnObjects = drawnObjects;
        this._shapeLoaderUrl = shapeLoaderUrl;
        this._idLoaderUrl = location.href.substr(0, location.href.lastIndexOf('/')) + '/SearchByID.ashx';
        this._fileMakerUrl = fileMakerUrl;
        this._fileDownloaderUrl = fileDownloaderUrl;
        this._metadataUrl = metadataUrl;
        this._csvFileUrl = csvFileUrl;
        this._csvColumns = ['sceneid', 'stereo', 'platform', 'cloudness', 'tilt', 'acqdate'];
    }

    _createClass(ShapeLoader, [{
        key: 'upload',
        value: function upload() {
            var _this = this;

            return new Promise(function (resolve, reject) {
                var ff = document.createElement('input');
                ff.setAttribute('type', 'file');
                document.body.appendChild(ff);
                ff.click();
                ff.addEventListener('change', function (e) {
                    window.Catalog.loaderWidget.show();

                    var _ff$files = _slicedToArray(ff.files, 1),
                        file = _ff$files[0];

                    if (file) {
                        var fd = new FormData();
                        fd.append('filename', file);
                        fd.append('WrapStyle', 'None');
                        fetch(_this._shapeLoaderUrl, {
                            method: 'POST',
                            body: fd
                        }).then(function (response) {
                            ff.remove();
                            return response.json();
                        }).then(function (response) {
                            window.Catalog.loaderWidget.hide();
                            switch (response.Status) {
                                case 'ok':
                                    resolve({ type: 'shapefile', results: response.Result });
                                    break;
                                default:
                                    fetch(_this._idLoaderUrl, { method: 'POST', body: fd }).then(function (res) {
                                        ff.remove();
                                        return res.json();
                                    }).then(function (res) {
                                        if (res.Status === 'ok') {
                                            resolve({ type: 'idlist', results: res.Result });
                                        } else {
                                            reject(res);
                                        }
                                    }).catch(function (e) {
                                        ff.remove();
                                        reject(e);
                                    });
                                    break;
                            }
                        }).catch(function (e) {
                            window.Catalog.loaderWidget.hide();
                            ff.remove();
                            reject(e);
                        });
                    }
                });
            });
        }
    }, {
        key: 'download',
        value: function download(archiveName, type) {
            var _this2 = this;

            window.Catalog.loaderWidget.show();
            var get_meta_data = function get_meta_data(state) {
                return new Promise(function (resolve) {
                    var ids = [];
                    var items = [];
                    var csv = function csv(item) {
                        return _this2._csvColumns.map(function (col) {
                            return col === 'acqdate' ? moment(item[col]).format('YYYY-MM-DD') : item[col];
                        });
                    };
                    switch (type) {
                        case 'results':
                            if (_this2._resultsController.downloadCache && _this2._resultsController.downloadCache.length > 0) {
                                ids = _this2._resultsController.downloadCache.map(function (item) {
                                    return item.sceneid;
                                });
                            } else {
                                ids = _this2._resultsController.resultList.items.map(function (item) {
                                    return item.sceneid;
                                });
                            }
                            break;
                        case 'csv':
                            if (_this2._resultsController.downloadCache && _this2._resultsController.downloadCache.length > 0) {
                                items = _this2._resultsController.downloadCache.map(csv);
                            } else {
                                items = _this2._resultsController.resultList.items.map(csv);
                            }
                            break;
                        case 'cart':
                        case 'quicklooks':
                            if (_this2._resultsController.downloadCache && _this2._resultsController.downloadCache.length > 0) {
                                ids = _this2._resultsController.downloadCache.map(function (item) {
                                    return item.sceneid;
                                });
                            } else {
                                ids = _this2._resultsController.favoritesList.items.map(function (item) {
                                    return item.sceneid;
                                });
                            }
                            break;
                        default:
                            break;
                    }
                    if (type === 'csv') {
                        state.items = JSON.stringify(items);
                        resolve(state);
                    } else {
                        if (ids.length > 0) {
                            _this2._catalogResourceServer.sendPostRequest(_this2._metadataUrl, { ids: ids, WrapStyle: 'None' }).then(function (response) {
                                if (response.Status === 'ok') {
                                    state.result = response.Result;
                                    resolve(state);
                                } else {
                                    state.error = response;
                                    resolve(state);
                                }
                            }).catch(function (e) {
                                state.error = e;
                                resolve(state);
                            });
                        } else {
                            resolve(state);
                        }
                    }
                });
            };
            var make_file = function make_file(state) {
                return new Promise(function (resolve) {
                    if (type === 'csv') {
                        resolve(state);
                    } else {
                        var Features = _this2._drawnObjects.items.filter(function (item) {
                            return item.visible;
                        }).map(function (_ref2) {
                            var id = _ref2.id,
                                name = _ref2.name,
                                area = _ref2.area,
                                visible = _ref2.visible,
                                editable = _ref2.editable,
                                color = _ref2.color,
                                geoJSON = _ref2.geoJSON;

                            return {
                                type: 'Feature',
                                geometry: geoJSON.geometry,
                                properties: {
                                    id: id,
                                    // name: encodeURIComponent(name),
                                    name: name,
                                    area: area,
                                    visible: visible,
                                    editable: editable,
                                    color: color
                                }
                            };
                        });
                        var Files = Features.length ? [{
                            Columns: [{ "Name": "id", "Type": "String" }, { "Name": "name", "Type": "String" }, { "Name": "area", "Type": "Float" }, { "Name": "editable", "Type": "Boolean" }, { "Name": "visible", "Type": "Boolean" }, { "Name": "color", "Type": "String" }],
                            Features: Features,
                            Filename: archiveName + '_contours',
                            Formats: ['shape', 'tab']
                        }] : [];
                        switch (type) {
                            case 'results':
                            case 'cart':
                            case 'quicklooks':
                                var result = state.result;
                                Files = Files.concat(Object.keys(result).map(function (file) {
                                    var Features = result[file].map(function (f) {
                                        var properties = (0, _Extensions.copy)(f);
                                        delete properties.geometry;
                                        return {
                                            type: 'Feature',
                                            geometry: (0, _Extensions.copy)(f.geometry),
                                            properties: properties
                                        };
                                    });
                                    return {
                                        Columns: _Formats.Formats[file],
                                        Filename: archiveName + '_' + file,
                                        Features: Features,
                                        Formats: ['shape', 'tab']
                                    };
                                }));
                                break;
                            default:
                                break;
                        }

                        _this2._gmxResourceServer.sendPostRequest(_this2._fileMakerUrl, { Request: JSON.stringify({ ArchiveName: archiveName, Files: Files, Images: type === 'quicklooks' }) }).then(function (response) {
                            if (response.Status === 'ok') {
                                state.id = response.Result;
                                resolve(state);
                            } else {
                                resolve(state);
                            }
                        }).catch(function (e) {
                            state.error = e;
                            resolve(state);
                        });
                    }
                });
            };
            var download_file = function download_file(state) {
                window.Catalog.loaderWidget.hide();
                return new Promise(function (resolve) {
                    if (type === 'csv') {
                        var items = state.items;

                        _this2._catalogResourceServer.sendPostRequest(_this2._csvFileUrl, { file: encodeURIComponent(archiveName), items: items, columns: _this2._csvColumns, WrapStyle: 'None' }).then(function (response) {
                            if (response.Status === 'ok') {
                                state.result = response.Result;
                                resolve(state);
                            } else {
                                state.error = response;
                                resolve(state);
                            }
                        }).catch(function (e) {
                            state.error = e;
                            resolve(state);
                        });
                    } else {
                        _this2._gmxResourceServer.sendPostRequest(_this2._fileDownloaderUrl + '?id=' + state.id).then(function (response) {
                            if (response.Status === 'ok') {
                                state.id = response.Result;
                                resolve(state);
                            } else {
                                resolve(state);
                            }
                        }).catch(function (e) {
                            state.error = e;
                            resolve(state);
                        });
                    }
                });
            };
            return (0, _Utils.chain)([get_meta_data, make_file, download_file], {}).then(function (state) {
                if (state.error) {
                    console.log(state.error);
                }
            });
        }
    }]);

    return ShapeLoader;
}();

exports.ShapeLoader = ShapeLoader;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createTab = undefined;

__webpack_require__(196);

function createTab(_ref) {
    var icon = _ref.icon,
        active = _ref.active,
        inactive = _ref.inactive,
        hint = _ref.hint;

    return function (state) {
        var el = document.createElement('div');
        el.classList.add('tab-icon');
        var tabEl = document.createElement('div');
        el.appendChild(tabEl);

        hint && el.setAttribute('title', hint);
        tabEl.classList.add(icon);
        if (state === 'active') {
            tabEl.classList.add(active);
            el.classList.add('tab-icon-active');
        } else {
            tabEl.classList.add(inactive);
        }
        return el;
    };
}

exports.createTab = createTab;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getResourceServer = exports.getAuthManager = undefined;

var _ResourceServer = __webpack_require__(15);

var _AuthManager = __webpack_require__(14);

var resourceServersInstances = {};
var resourceServersConstructors = {};
var authManager = void 0;

// строка, в которой перечислены псевдонимы используемых нами серверов ресурсов.
// потребуется для синхронизации серверов ресурсов
var scope = void 0;

// зашиваем известные и часто-используемые ресурсы
resourceServersConstructors['subscriptions'] = function () {
    return new _ResourceServer.ResourceServer(authManager, {
        id: 'subscriptions',
        root: 'http://fires.kosmosnimki.ru/SAPIv2'
    });
};

resourceServersConstructors['geomixer2'] = function () {
    return new _ResourceServer.ResourceServer(authManager, {
        id: 'geomixer2',
        root: 'http://maps2.kosmosnimki.ru'
    });
};

resourceServersConstructors['geomixer'] = function () {
    return new _ResourceServer.ResourceServer(authManager, {
        id: 'geomixer',
        root: 'http://maps.kosmosnimki.ru'
    });
};

resourceServersConstructors['geocode'] = function () {
    return new _ResourceServer.ResourceServer(authManager, {
        id: 'geocode',
        root: 'http://geocode.kosmosnimki.ru'
    });
};

function getResourceServer(id) {
    if (!authManager) {
        authManager = getAuthManager();
    }
    // используем lazy instantiation для отложенного создания
    // необходимых нам компонентов
    if (!resourceServersInstances[id]) {
        resourceServersInstances[id] = resourceServersConstructors[id]();
        if (!scope) {
            scope = id;
        } else {
            scope += ',' + id;
        }
    }
    return resourceServersInstances[id];
}

function getAuthManager() {
    // то же и с authManager
    if (!authManager) {
        authManager = new _AuthManager.AuthManager({
            authorizationEndpoint: 'http://my.kosmosnimki.ru/Test/LoginDialog',
            userInfoEndpoint: 'http://my.kosmosnimki.ru/oAuth/LoginDialog',
            redirectEndpointHtml: location.href.replace(/[^\/]+$/, '') + 'oAuth2/oAuthCallback.htm',
            redirectEndpointAshx: location.href.replace(/[^\/]+$/, '') + 'oAuth2/oAuthCallback.ashx',
            credentialLoginEndpoint: 'http://my.kosmosnimki.ru/Handler/Login'
        });
    }
    return authManager;
}

exports.getAuthManager = getAuthManager;
exports.getResourceServer = getResourceServer;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AuthWidget = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _DropdownMenuWidget = __webpack_require__(170);

var _EventTarget2 = __webpack_require__(16);

__webpack_require__(198);

__webpack_require__(197);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var T = window.Catalog.Translations;

T.addText('rus', {
    auth: {
        'login': 'Войти',
        'logout': 'Выйти',
        'myAccount': 'Личный кабинет',
        'myMap': 'Личная карта',
        'closeDialog': 'Закрыть'
    }
});

T.addText('eng', {
    auth: {
        'login': 'Login',
        'logout': 'Logout',
        'myAccount': 'My account',
        'myMap': 'My map',
        'closeDialog': 'Close'
    }
});

var AuthWidget = function (_EventTarget) {
    _inherits(AuthWidget, _EventTarget);

    function AuthWidget(options) {
        _classCallCheck(this, AuthWidget);

        var _this = _possibleConstructorReturn(this, (AuthWidget.__proto__ || Object.getPrototypeOf(AuthWidget)).call(this));

        _this._view = document.createElement('div');
        _this._view.classList.add('authWidget');

        _this._authManager = options.authManager;
        _this._userInfo = null;

        _this._options = options;
        _this._options.showAccountLink = true;
        _this._options.accountLink = 'http://my.kosmosnimki.ru/Home/Settings/';
        _this._options.showMapLink = true;

        _this._authManager.getUserInfo().then(function (response) {
            _this._render({
                login: response.Result && response.Result.Login,
                userName: response.Result && (response.Result.FullName || response.Result.Nickname || response.Result.Login),
                nickName: response.Result.Nickname
            });
            _this._userInfo = response.Result;
            var event = document.createEvent('Event');
            event.initEvent('ready', false, false);
            _this.dispatchEvent(event);
        }).catch(function (response) {
            _this._render(response);
        });
        _this._authManager.addEventListener('login', function () {
            var event = document.createEvent('Event');
            event.initEvent('login', false, false);
            _this.dispatchEvent(event);
        });
        return _this;
    }

    _createClass(AuthWidget, [{
        key: '_render',
        value: function _render(vm) {
            var _this2 = this;

            this._view.innerHTML = vm.nickName ? '<div class="authWidget_authorized">\n                <div class="authWidget-userPanel">\n                    <div class="authWidget-userPanel-iconCell">\n                        <div class="authWidget-userPanel-userIcon account account-user-logout"></div>\n                    </div>\n                    <div class="authWidget-userPanel-userMenuCell"></div>\n                </div>\n            </div>' : '<div class="authWidget_unauthorized">\n                <!-- div class="authWidget-loginButton">' + T.getText('auth.login') + '</div -->\n                <div class="authWidget-loginButton account account-user-login"></div>\n            </div>';

            if (vm.nickName) {
                var dropdownItems = [];

                if (this._options.showAccountLink) {
                    dropdownItems.push({
                        title: T.getText('auth.myAccount'),
                        link: this._options.accountLink,
                        id: 'AuthWidgetAccountLink',
                        newWindow: true,
                        iconClass: 'account account-personal-area'
                    });
                }

                if (this._options.showMapLink) {
                    var defaultMapLink = 'http://maps.kosmosnimki.ru/api/index.html?' + encodeURIComponent('@' + vm.login);
                    dropdownItems.push({
                        title: T.getText('auth.myMap'),
                        link: this._options.mapLink || defaultMapLink,
                        id: 'AuthWidgetMapLink',
                        newWindow: true,
                        iconClass: 'account account-personal-map'
                    });
                }

                dropdownItems.push({
                    title: T.getText('auth.logout'),
                    className: 'authWidget-logoutButton',
                    iconClass: 'account account-exit'
                });

                var dropdownMenuWidget = new _DropdownMenuWidget.DropdownMenuWidget({
                    items: [{
                        title: vm.nickName,
                        dropdown: dropdownItems
                    }]
                });

                dropdownMenuWidget.appendTo(this._view.querySelector('.authWidget-userPanel-userMenuCell'));
            }

            var loginBtn = this._view.querySelector('.authWidget-loginButton');
            if (loginBtn) {
                loginBtn.addEventListener('click', function (e) {
                    var $iframeContainer;
                    // if (this._options.loginDialog) {

                    //     $iframeContainer = document.createElement('div');
                    //     $iframeContainer.classList.add('authWidget-iframeContainer');
                    //     var dialog = $iframeContainer.dialog({
                    //         width: 500,
                    //         height: 450,
                    //         closeText: T.getText('auth.closeDialog'),
                    //         close: (je, ui) => {
                    //             $(this).dialog('destroy');
                    //         }
                    //     });
                    //     // HACK:
                    //     let btn = $iframeContainer.querySelector('button.ui-button');
                    //     if (btn) {
                    //         btn.classList.add('ui-icon');
                    //         btn.style.outline = 'none';
                    //     }                                
                    // }

                    _this2._authManager.login({
                        iframeContainer: $iframeContainer && $iframeContainer[0]
                    });
                });
            }

            var logoutBtn = this._view.querySelector('.authWidget-logoutButton');
            if (logoutBtn) {
                logoutBtn.addEventListener('click', function (e) {
                    _this2._authManager.logout().then(function (response) {
                        _this2._render(response);
                        _this2._userInfo = response.Result;
                        var event = document.createEvent('Event');
                        event.initEvent('logout', false, false);
                        _this2.dispatchEvent(event);
                    });
                });
            }
        }

        /** Получить информацию о пользователе, которую вернул AuthManager
         * @return {Object}
         */

    }, {
        key: 'getUserInfo',
        value: function getUserInfo() {
            return this._userInfo;
        }
    }, {
        key: 'appendTo',
        value: function appendTo(placeholder) {
            placeholder.appendChild(this._view);
        }
    }]);

    return AuthWidget;
}(_EventTarget2.EventTarget);

exports.AuthWidget = AuthWidget;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function (factory) {
    if (( false ? 'undefined' : _typeof(module)) === 'object' && module && module.exports) {
        module.exports = factory(__webpack_require__(140));
    } else {
        window.nsGmx = window.nsGmx || {};
        window.nsGmx.IconSidebarControl = factory(window.L);
    }
})(function (L) {
    // ev.opening
    // ev.opened { <String>id }
    // ev.closing
    // ev.closed
    return L.Control.extend({
        includes: L.Evented ? L.Evented.prototype : L.Mixin.Events,

        // options.position (left|right)
        initialize: function initialize(options) {
            this._panes = {};
            L.setOptions(this, options);
        },

        onAdd: function onAdd(map) {
            this._container = L.DomUtil.create('div', 'iconSidebarControl');
            this._tabsContainer = L.DomUtil.create('ul', 'iconSidebarControl-tabs', this._container);
            this._panesContainer = L.DomUtil.create('div', 'iconSidebarControl-content', this._container);

            L.DomUtil.addClass(this._container, this.options.position.indexOf('left') !== -1 ? 'iconSidebarControl-left' : 'iconSidebarControl-right');

            L.DomEvent.disableClickPropagation(this._container);
            L.DomEvent.disableScrollPropagation(this._container);
            // L.DomEvent.on(this._container, 'mousemove', L.DomEvent.stopPropagation);

            return this._container;
        },

        onRemove: function onRemove(map) {},

        setPane: function setPane(id, paneOptions) {
            var paneOptions = paneOptions || {};
            var createTab = paneOptions.createTab;
            var position = paneOptions.position;
            var enabled = paneOptions.enabled;
            var defaultPaneOptions = { position: 0, enabled: true };

            this._panes[id] = L.extend({}, defaultPaneOptions, this._panes[id] || {}, paneOptions);

            if (!this._panes[id].enabled && this._activeTabId === id) {
                this.close();
            }

            this._renderTabs({});
            return this._ensurePane(id);
        },

        enable: function enable(id, enabled) {
            var pane = this._panes[id];
            if (pane) {
                pane.enabled = enabled;
            }
        },

        enabled: function enabled(id) {
            var pane = this._panes[id];
            if (pane) {
                return pane.enabled;
            } else {
                return false;
            }
        },

        open: function open(paneId) {
            if (this._isAnimating) {
                return;
            }

            var pane = this._panes[paneId];
            if (!pane || !pane.enabled) {
                return;
            }

            this._activeTabId = paneId;

            this._setTabActive(paneId, true);

            this._setActiveClass(paneId);

            if (this._isOpened) {
                this.fire('opened', { id: this._activeTabId });
                return;
            }

            this._isAnimating = true;
            L.DomUtil.addClass(this._container, 'iconSidebarControl_opened');
            L.DomUtil.addClass(this._container, 'iconSidebarControl_expanded');
            this._isOpened = true;
            this.fire('opening');
            setTimeout(function () {
                this.fire('opened', { id: this._activeTabId });
                this._isAnimating = false;
            }.bind(this), 250);
        },

        _setTabActive: function _setTabActive(paneId, flag) {
            var tabs = this._tabsContainer.querySelectorAll('.iconSidebarControl-tab');
            for (var i = 0; i < tabs.length; ++i) {
                var id = tabs[i].getAttribute('data-tab-id');
                var tab = tabs[i].querySelector('.tab-icon');
                if (id === paneId) {
                    if (flag) {
                        L.DomUtil.addClass(tab, 'tab-icon-active');
                    } else {
                        L.DomUtil.removeClass(tab, 'tab-icon-active');
                    }
                } else {
                    L.DomUtil.removeClass(tab, 'tab-icon-active');
                }
            }
        },

        close: function close() {
            if (this._isAnimating) {
                return;
            }
            this._setTabActive(this._activeTabId, false);

            L.DomUtil.removeClass(this._container, 'iconSidebarControl_opened');

            this._isAnimating = true;
            L.DomUtil.removeClass(this._container, 'iconSidebarControl_opened');
            this._isOpened = false;
            this.fire('closing');
            setTimeout(function () {
                L.DomUtil.removeClass(this._container, 'iconSidebarControl_expanded');
                this.fire('closed', { id: this._activeTabId });
                this._isAnimating = false;
                this._setActiveClass('');
                this._activeTabId = null;
            }.bind(this), 250);
        },

        getActiveTabId: function getActiveTabId() {
            return this._activeTabId;
        },

        isOpened: function isOpened() {
            return this._isOpened;
        },

        _ensurePane: function _ensurePane(id) {

            for (var i = 0; i < this._panesContainer.childNodes.length; ++i) {
                var node = this._panesContainer.childNodes[i];
                if (node.getAttribute('data-pane-id') === id) {
                    return node;
                }
            }

            var paneEl = L.DomUtil.create('div', 'iconSidebarControl-pane');
            paneEl.setAttribute('data-pane-id', id);
            this._panesContainer.appendChild(paneEl);

            return paneEl;
        },

        _setActiveClass: function _setActiveClass(activeId) {
            var i, id;
            for (i = 0; i < this._panesContainer.children.length; i++) {
                id = this._panesContainer.children[i].getAttribute('data-pane-id');
                var pane = this._panesContainer.querySelector('[data-pane-id=' + id + ']');
                if (id === activeId) {
                    L.DomUtil.addClass(pane, 'iconSidebarControl-pane-active');
                } else {
                    L.DomUtil.removeClass(pane, 'iconSidebarControl-pane-active');
                }
            }
        },

        _onTabClick: function _onTabClick(e) {
            var tabId = e.currentTarget.getAttribute('data-tab-id');
            var pane = this._panes[tabId];
            if (!pane || !pane.enabled) {
                return;
            }
            if (!this._isOpened || this._activeTabId !== tabId) {
                this._renderTabs({ activeTabId: tabId });
                this.open(tabId);
            } else {
                this._renderTabs({});
                this.close();
            }
        },

        _renderTabs: function _renderTabs(options) {
            var activeTabId = options.activeTabId;
            var hoveredTabId = options.hoveredTabId;
            this._tabsContainer.innerHTML = '';
            Object.keys(this._panes).map(function (id) {
                return L.extend({ id: id }, this._panes[id]);
            }.bind(this)).sort(function (a, b) {
                return a.position - b.position;
            }).map(function (options) {
                var id = options.id;
                var createTab = options.createTab;
                var enabled = options.enabled;
                if (!createTab) {
                    return;
                }
                var tabContainerEl = L.DomUtil.create('li', 'iconSidebarControl-tab');
                tabContainerEl.setAttribute('data-tab-id', id);
                var tabEl = createTab(getFlag(id, activeTabId, hoveredTabId, enabled));
                L.DomEvent.on(tabContainerEl, 'click', this._onTabClick, this);
                tabContainerEl.appendChild(tabEl);
                this._tabsContainer.appendChild(tabContainerEl);
            }.bind(this));

            function getFlag(tabId, activeTabId, hoveredTabId, enabled) {
                if (!enabled) {
                    return 'disabled';
                } else if (hoveredTabId && tabId === hoveredTabId) {
                    return 'hover';
                } else if (activeTabId && tabId === activeTabId) {
                    return 'active';
                } else {
                    return 'default';
                }
            }
        }
    });
});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(139)(module)))

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LanguageWidget = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(206);

var _EventTarget2 = __webpack_require__(177);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LanguageWidget = function (_EventTarget) {
    _inherits(LanguageWidget, _EventTarget);

    function LanguageWidget(container, _ref) {
        var _ref$languages = _ref.languages,
            languages = _ref$languages === undefined ? [] : _ref$languages;

        _classCallCheck(this, LanguageWidget);

        var _this = _possibleConstructorReturn(this, (LanguageWidget.__proto__ || Object.getPrototypeOf(LanguageWidget)).call(this));

        _this._container = container;
        _this._languages = languages;
        _this._container.classList.add('noselect');
        _this._container.classList.add('language-widget');
        _this._container.innerHTML = '<select>' + Object.keys(_this._languages).map(function (id) {
            return '<option value="' + id + '">' + _this._languages[id] + '</option>';
        }).join('') + '</select>';
        _this._stopPropagation = _this._stopPropagation.bind(_this);
        _this._langSelect = _this._container.querySelector('select');
        _this._langSelect.addEventListener('change', function (e) {
            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = _this._langSelect.value;
            _this.dispatchEvent(event);
        });
        _this._container.addEventListener('click', _this._stopPropagation);
        return _this;
    }

    _createClass(LanguageWidget, [{
        key: '_stopPropagation',
        value: function _stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: 'currentLanguage',
        set: function set(value) {
            this._langSelect.value = value;
        },
        get: function get() {
            return this._langSelect.value;
        }
    }]);

    return LanguageWidget;
}(_EventTarget2.EventTarget);

exports.LanguageWidget = LanguageWidget;

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*eslint-env commonjs, browser */
(function (factory) {
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = factory(__webpack_require__(140));
    } else {
        window.L.control.iconLayers = factory(window.L);
        window.L.Control.IconLayers = window.L.control.iconLayers.Constructor;
    }
})(function (L) {
    function each(o, cb) {
        for (var p in o) {
            if (o.hasOwnProperty(p)) {
                cb(o[p], p, o);
            }
        }
    }

    function find(ar, cb) {
        if (ar.length) {
            for (var i = 0; i < ar.length; i++) {
                if (cb(ar[i])) {
                    return ar[i];
                }
            }
        } else {
            for (var p in ar) {
                if (ar.hasOwnProperty(p) && cb(ar[p])) {
                    return ar[p];
                }
            }
        }
    }

    function first(o) {
        for (var p in o) {
            if (o.hasOwnProperty(p)) {
                return o[p];
            }
        }
    }

    function length(o) {
        var length = 0;
        for (var p in o) {
            if (o.hasOwnProperty(p)) {
                length++;
            }
        }
        return length;
    }

    function prepend(parent, el) {
        if (parent.children.length) {
            parent.insertBefore(el, parent.children[0]);
        } else {
            parent.appendChild(el);
        }
    }

    var IconLayers = L.Control.extend({
        includes: L.Evented ? L.Evented.prototype : L.Mixin.Events,
        _getActiveLayer: function _getActiveLayer() {
            if (this._activeLayerId) {
                return this._layers[this._activeLayerId];
            } else if (length(this._layers)) {
                return first(this._layers);
            } else {
                return null;
            }
        },
        _getPreviousLayer: function _getPreviousLayer() {
            var activeLayer = this._getActiveLayer();
            if (!activeLayer) {
                return null;
            } else if (this._previousLayerId) {
                return this._layers[this._previousLayerId];
            } else {
                return find(this._layers, function (l) {
                    return l.id !== activeLayer.id;
                }.bind(this)) || null;
            }
        },
        _getInactiveLayers: function _getInactiveLayers() {
            var ar = [];
            var activeLayerId = this._getActiveLayer() ? this._getActiveLayer().id : null;
            var previousLayerId = this._getPreviousLayer() ? this._getPreviousLayer().id : null;
            each(this._layers, function (l) {
                if (l.id !== activeLayerId && l.id !== previousLayerId) {
                    ar.push(l);
                }
            });
            return ar;
        },
        _arrangeLayers: function _arrangeLayers() {
            var behaviors = {};
            behaviors.previous = function () {
                var layers = this._getInactiveLayers();
                if (this._getActiveLayer()) {
                    layers.unshift(this._getActiveLayer());
                }
                if (this._getPreviousLayer()) {
                    layers.unshift(this._getPreviousLayer());
                }
                return layers;
            };
            return behaviors[this.options.behavior].apply(this, arguments);
        },
        _getLayerCellByLayerId: function _getLayerCellByLayerId(id) {
            var els = this._container.getElementsByClassName('leaflet-iconLayers-layerCell');
            for (var i = 0; i < els.length; i++) {
                if (els[i].getAttribute('data-layerid') == id) {
                    return els[i];
                }
            }
        },
        _createLayerElement: function _createLayerElement(layerObj) {
            var el = L.DomUtil.create('div', 'leaflet-iconLayers-layer');
            if (layerObj.title) {
                var titleContainerEl = L.DomUtil.create('div', 'leaflet-iconLayers-layerTitleContainer');
                var titleEl = L.DomUtil.create('div', 'leaflet-iconLayers-layerTitle');
                var checkIconEl = L.DomUtil.create('div', 'leaflet-iconLayers-layerCheckIcon');
                titleEl.innerHTML = layerObj.title;
                titleContainerEl.appendChild(titleEl);
                el.appendChild(titleContainerEl);
                el.appendChild(checkIconEl);
            }
            if (layerObj.icon) {
                el.setAttribute('style', 'background-image: url(\'' + layerObj.icon + '\')');
            }
            return el;
        },
        _createLayerElements: function _createLayerElements() {
            var currentRow, layerCell;
            var layers = this._arrangeLayers();
            var activeLayerId = this._getActiveLayer() && this._getActiveLayer().id;

            for (var i = 0; i < layers.length; i++) {
                if (i % this.options.maxLayersInRow === 0) {
                    currentRow = L.DomUtil.create('div', 'leaflet-iconLayers-layersRow');
                    if (this.options.position.indexOf('bottom') === -1) {
                        this._container.appendChild(currentRow);
                    } else {
                        prepend(this._container, currentRow);
                    }
                }
                layerCell = L.DomUtil.create('div', 'leaflet-iconLayers-layerCell');
                layerCell.setAttribute('data-layerid', layers[i].id);
                if (i !== 0) {
                    L.DomUtil.addClass(layerCell, 'leaflet-iconLayers-layerCell_hidden');
                }
                if (layers[i].id === activeLayerId) {
                    L.DomUtil.addClass(layerCell, 'leaflet-iconLayers-layerCell_active');
                }
                if (this._expandDirection === 'left') {
                    L.DomUtil.addClass(layerCell, 'leaflet-iconLayers-layerCell_expandLeft');
                } else {
                    L.DomUtil.addClass(layerCell, 'leaflet-iconLayers-layerCell_expandRight');
                }
                layerCell.appendChild(this._createLayerElement(layers[i]));

                if (this.options.position.indexOf('right') === -1) {
                    currentRow.appendChild(layerCell);
                } else {
                    prepend(currentRow, layerCell);
                }
            }
        },
        _onLayerClick: function _onLayerClick(e) {
            e.stopPropagation();
            var layerId = e.currentTarget.getAttribute('data-layerid');
            var layer = this._layers[layerId];
            this.setActiveLayer(layer.layer);
            this.expand();
        },
        _attachEvents: function _attachEvents() {
            each(this._layers, function (l) {
                var e = this._getLayerCellByLayerId(l.id);
                if (e) {
                    e.addEventListener('click', this._onLayerClick.bind(this));
                }
            }.bind(this));
            var layersRowCollection = this._container.getElementsByClassName('leaflet-iconLayers-layersRow');

            var onMouseEnter = function (e) {
                e.stopPropagation();
                this.expand();
            }.bind(this);

            var onMouseLeave = function (e) {
                e.stopPropagation();
                this.collapse();
            }.bind(this);

            var stopPropagation = function stopPropagation(e) {
                e.stopPropagation();
            };

            //TODO Don't make functions within a loop.
            for (var i = 0; i < layersRowCollection.length; i++) {
                var el = layersRowCollection[i];
                el.addEventListener('mouseenter', onMouseEnter);
                el.addEventListener('mouseleave', onMouseLeave);
                el.addEventListener('mousemove', stopPropagation);
            }
        },
        _render: function _render() {
            this._container.innerHTML = '';
            this._createLayerElements();
            this._attachEvents();
        },
        _switchMapLayers: function _switchMapLayers() {
            if (!this._map) {
                return;
            }
            var activeLayer = this._getActiveLayer();
            var previousLayer = this._getPreviousLayer();
            if (previousLayer) {
                this._map.removeLayer(previousLayer.layer);
            } else {
                each(this._layers, function (layerObject) {
                    var layer = layerObject.layer;
                    this._map.removeLayer(layer);
                }.bind(this));
            }
            if (activeLayer) {
                this._map.addLayer(activeLayer.layer);
            }
        },
        options: {
            position: 'bottomleft', // one of expanding directions depends on this
            behavior: 'previous', // may be 'previous', 'expanded' or 'first'
            expand: 'horizontal', // or 'vertical'
            autoZIndex: true, // from L.Control.Layers
            maxLayersInRow: 5,
            manageLayers: true
        },
        initialize: function initialize(layers, options) {
            if (!L.Util.isArray(arguments[0])) {
                // first argument is options
                options = layers;
                layers = [];
            }
            L.setOptions(this, options);
            this._expandDirection = this.options.position.indexOf('left') != -1 ? 'right' : 'left';
            if (this.options.manageLayers) {
                this.on('activelayerchange', this._switchMapLayers, this);
            }
            this.setLayers(layers);
        },
        onAdd: function onAdd(map) {
            this._container = L.DomUtil.create('div', 'leaflet-iconLayers');
            L.DomUtil.addClass(this._container, 'leaflet-iconLayers_' + this.options.position);
            this._render();
            map.on('click', this.collapse, this);
            if (this.options.manageLayers) {
                this._switchMapLayers();
            }
            return this._container;
        },
        onRemove: function onRemove(map) {
            map.off('click', this.collapse, this);
        },
        setLayers: function setLayers(layers) {
            this._layers = {};
            layers.map(function (layer) {
                var id = L.stamp(layer.layer);
                this._layers[id] = L.extend(layer, {
                    id: id
                });
            }.bind(this));
            if (this._container) {
                this._render();
            }
        },
        setActiveLayer: function setActiveLayer(layer) {
            var l = layer && this._layers[L.stamp(layer)];
            if (!l || l.id === this._activeLayerId) {
                return;
            }
            this._previousLayerId = this._activeLayerId;
            this._activeLayerId = l.id;
            if (this._container) {
                this._render();
            }
            this.fire('activelayerchange', {
                layer: layer
            });
        },
        expand: function expand() {
            this._arrangeLayers().slice(1).map(function (l) {
                var el = this._getLayerCellByLayerId(l.id);
                L.DomUtil.removeClass(el, 'leaflet-iconLayers-layerCell_hidden');
            }.bind(this));
        },
        collapse: function collapse() {
            this._arrangeLayers().slice(1).map(function (l) {
                var el = this._getLayerCellByLayerId(l.id);
                L.DomUtil.addClass(el, 'leaflet-iconLayers-layerCell_hidden');
            }.bind(this));
        }
    });

    var iconLayers = function iconLayers(layers, options) {
        return new IconLayers(layers, options);
    };

    iconLayers.Constructor = IconLayers;

    return iconLayers;
});

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LoaderWidget = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(208);

var _Translations = __webpack_require__(2);

var _EventTarget2 = __webpack_require__(3);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

var LoaderWidget = function (_EventTarget) {
    _inherits(LoaderWidget, _EventTarget);

    function LoaderWidget() {
        _classCallCheck(this, LoaderWidget);

        var _this = _possibleConstructorReturn(this, (LoaderWidget.__proto__ || Object.getPrototypeOf(LoaderWidget)).call(this));

        _this._container = document.createElement('div');
        document.body.appendChild(_this._container);
        _this._container.classList.add('noselect');
        _this._container.classList.add('loader-widget');
        _this._container.innerHTML = '<div class="loader-icon"></div><div class="loader-button">' + T.getText('alerts.cancel') + '</div>';
        _this._ovl = document.querySelector('.loader-widget-overlay');
        _this._stopPropagation = _this._stopPropagation.bind(_this);
        if (!_this._ovl) {
            _this._ovl = document.createElement('div');
            document.body.appendChild(_this._ovl);
            _this._ovl.className = 'loader-widget-overlay';
            _this._ovl.style.display = 'none';
            _this._ovl.addEventListener('mousemove', _this._stopPropagation);
            _this._ovl.addEventListener('mousewheel', _this._stopPropagation);
            _this._ovl.addEventListener('click', _this._stopPropagation);
        }
        _this._container.querySelector('.loader-button').addEventListener('click', function (e) {
            _this.hide();

            var event = document.createEvent('Event');
            event.initEvent('cancel', false, false);
            _this.dispatchEvent(event);
        });
        _this.show = _this.show.bind(_this);
        _this.hide = _this.hide.bind(_this);
        return _this;
    }

    _createClass(LoaderWidget, [{
        key: '_stopPropagation',
        value: function _stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: 'show',
        value: function show() {
            this._ovl.style.display = 'block';
            this._container.querySelector('.loader-icon').classList.add('loader-animated');
            this._container.style.visibility = 'visible';
        }
    }, {
        key: 'hide',
        value: function hide() {
            this._ovl.style.display = 'none';
            this._container.querySelector('.loader-icon').classList.remove('loader-animated');
            this._container.style.visibility = 'hidden';
        }
    }]);

    return LoaderWidget;
}(_EventTarget2.EventTarget);

exports.LoaderWidget = LoaderWidget;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.NotificationWidget = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(209);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var NotificationWidget = function () {
    function NotificationWidget(container) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { timeout: 0 };

        _classCallCheck(this, NotificationWidget);

        this._container = container;
        this._options = options;
        this._content = document.createElement('div');
        this._container.appendChild(this._content);
        this._content.classList.add('notification-widget');
    }

    _createClass(NotificationWidget, [{
        key: 'show',
        value: function show() {
            var _this = this;

            if (this._options.timeout) {
                this._content.classList.add('notification-on');
                window.setTimeout(function () {
                    return _this.hide();
                }, this._options.timeout);
            } else {
                this._content.classList.add('notification-on');
            }
        }
    }, {
        key: 'hide',
        value: function hide() {
            this._content.classList.remove('notification-on');
        }
    }, {
        key: 'content',
        get: function get() {
            return this._content;
        }
    }]);

    return NotificationWidget;
}();

exports.NotificationWidget = NotificationWidget;

/***/ }),
/* 156 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 157 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 158 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 159 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 160 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 161 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 162 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.CompositeLayer = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _EventTarget2 = __webpack_require__(3);

var _Utils = __webpack_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Colors = {
    Default: 0x23a5cc,
    Hilite: 0x23a5cc,
    Cart: 0xef4e70,
    CartHilite: 0xef4e70
};

function serialize(obj) {
    return Object.keys(obj).map(function (id) {
        return obj[id];
    });
}

var CompositeLayer = function (_EventTarget) {
    _inherits(CompositeLayer, _EventTarget);

    function CompositeLayer(_ref) {
        var _ref$minZoom = _ref.minZoom,
            minZoom = _ref$minZoom === undefined ? 3 : _ref$minZoom,
            _ref$maxZoom = _ref.maxZoom,
            maxZoom = _ref$maxZoom === undefined ? 17 : _ref$maxZoom,
            map = _ref.map,
            _ref$qlUrl = _ref.qlUrl,
            qlUrl = _ref$qlUrl === undefined ? 'http://wikimixer.kosmosnimki.ru/QuickLookImage.ashx' : _ref$qlUrl,
            _ref$qlSize = _ref.qlSize,
            qlSize = _ref$qlSize === undefined ? { width: 300, height: 300 } : _ref$qlSize,
            _ref$srs = _ref.srs,
            srs = _ref$srs === undefined ? 3857 : _ref$srs;

        _classCallCheck(this, CompositeLayer);

        var _this = _possibleConstructorReturn(this, (CompositeLayer.__proto__ || Object.getPrototypeOf(CompositeLayer)).call(this));

        _this._currentTab = '';
        _this._qlUrl = qlUrl;
        _this._qlSize = qlSize;
        _this._attributes = ["hover", "selected", "visible", "result", "cart", "clip_coords", "sceneid", "acqdate", "acqtime", "cloudness", "tilt", "sunelev", "stereo", "url", "x1", "y1", "x2", "y2", "x3", "y3", "x4", "y4", "volume", "platform", "spot5_a_exists", "spot5_b_exists", "islocal", "product", "gmx_id", "sensor", "local_exists", "spot5id", "stidx"];
        _this._attrTypes = ["boolean", "boolean", "string", "boolean", "boolean", "object", "string", "date", "time", "float", "float", "float", "string", "string", "float", "float", "float", "float", "float", "float", "float", "float", "string", "string", "boolean", "boolean", "boolean", "boolean", "integer", "string", "boolean", "string", "integer"];
        _this._sceneid_index = _this._attributes.indexOf('sceneid') + 1;
        _this._result_index = _this._attributes.indexOf('result') + 1;
        _this._clip_coords_index = _this._attributes.indexOf('clip_coords') + 1;
        _this._cart_index = _this._attributes.indexOf('cart') + 1;
        _this._selected_index = _this._attributes.indexOf('selected') + 1;
        _this._visible_index = _this._attributes.indexOf('visible') + 1;
        _this._hover_index = _this._attributes.indexOf('hover') + 1;
        _this._x1_index = _this._attributes.indexOf('x1') + 1;
        _this._vectors = {};
        _this._propertiesToItem = _this._propertiesToItem.bind(_this);

        _this._map = map;
        var tab_filter = function tab_filter(_ref2) {
            var properties = _ref2.properties;

            var obj = _this._propertiesToItem(properties);
            var filtered = true;
            if (typeof _this._filter === 'function') {
                filtered = _this._filter(obj);
            }
            switch (_this._currentTab) {
                case 'results':
                    return filtered && properties[_this._result_index];
                case 'favorites':
                    return filtered && properties[_this._cart_index];
                case 'search':
                    return false;
                default:
                    return true;
            }
        };
        _this._vectorLayer = L.gmx.createLayer({
            geometry: null,
            properties: {
                type: 'Vector',
                visible: true,
                identityField: 'gmx_id',
                GeometryType: 'polygon',
                srs: srs,
                attributes: _this._attributes,
                attrTypes: _this._attrTypes,
                styles: [{
                    MinZoom: minZoom,
                    MaxZoom: maxZoom,
                    DisableBalloonOnClick: true,
                    DisableBalloonOnMouseMove: true,
                    RenderStyle: {
                        outline: { color: Colors.Default, thickness: 1 },
                        fill: { color: 0xfff, opacity: 0 }
                    },
                    HoverStyle: {
                        outline: { color: Colors.Default, thickness: 1 },
                        fill: { color: 0xfff, opacity: 0 }
                    }
                }]
            }
        });
        _this._vectorLayer.disableFlip();
        _this._vectorLayer.setFilter(tab_filter);
        _this._vectorLayer.setStyleHook(function (item) {
            var properties = item.properties;

            var color = Colors.Default;
            var lineWidth = 1;
            if (properties[_this._hover_index]) {
                color = properties[_this._cart_index] ? Colors.CartHilite : Colors.Hilite;
                lineWidth = 3;
            } else {
                color = properties[_this._cart_index] ? Colors.Cart : Colors.Default;
            }
            return { skipRasters: true, strokeStyle: color, lineWidth: lineWidth };
        });
        _this._vectorLayer.addTo(_this._map);
        _this._vectorLayer.on('click', function (e) {
            var _e$gmx = e.gmx,
                id = _e$gmx.id,
                layer = _e$gmx.layer,
                target = _e$gmx.target;

            var show = null;
            var properties = _this._vectors[id].properties;

            switch (properties[_this._visible_index]) {
                case 'visible':
                case 'loading':
                    show = false;
                    break;
                case 'hidden':
                default:
                    show = true;
                    break;
            }
            _this.setVisible(id, show);
            _this.showQuicklook(id, show).then(function () {
                var event = document.createEvent('Event');
                event.initEvent('click', false, false);
                event.detail = { id: id, show: show };
                _this.dispatchEvent(event);
            });
        }).on('mouseover', function (e) {
            var _e$gmx2 = e.gmx,
                id = _e$gmx2.id,
                layer = _e$gmx2.layer,
                target = _e$gmx2.target;

            _this._vectors[id].properties[_this._hover_index] = true;
            _this._vectorLayer.redrawItem(id);

            var event = document.createEvent('Event');
            event.initEvent('mouseover', false, false);
            event.detail = id;
            _this.dispatchEvent(event);
        }).on('mouseout', function (e) {
            var _e$gmx3 = e.gmx,
                id = _e$gmx3.id,
                layer = _e$gmx3.layer,
                target = _e$gmx3.target;

            _this._vectors[id].properties[_this._hover_index] = false;
            _this._vectorLayer.redrawItem(id);

            var event = document.createEvent('Event');
            event.initEvent('mouseout', false, false);
            event.detail = id;
            _this.dispatchEvent(event);
        });
        return _this;
    }

    _createClass(CompositeLayer, [{
        key: 'showQuicklook',
        value: function showQuicklook(id, show) {
            var _this2 = this;

            return new Promise(function (resolve) {
                var _vectors$id = _this2._vectors[id],
                    properties = _vectors$id.properties,
                    quicklook = _vectors$id.quicklook;

                if (show) {
                    if (!quicklook) {
                        var imageUrl = _this2._qlUrl + '?id=' + (0, _Utils.split_complex_id)(properties[_this2._sceneid_index]).id + '&width=' + _this2._qlSize.width + '&height=' + _this2._qlSize.height;
                        var clipCoords = properties[_this2._clip_coords_index];
                        var anchors = [properties.slice(_this2._x1_index, _this2._x1_index + 2), properties.slice(_this2._x1_index + 2, _this2._x1_index + 4), properties.slice(_this2._x1_index + 4, _this2._x1_index + 6), properties.slice(_this2._x1_index + 6, _this2._x1_index + 8)];
                        quicklook = L.imageTransform(imageUrl, (0, _Utils.flatten)(anchors, true), { clip: clipCoords, disableSetClip: true }).addTo(_this2._map);
                        _this2._vectors[id].quicklook = quicklook;
                        quicklook.on('load', function (e) {
                            properties[_this2._visible_index] = 'visible';
                            _this2._vectorLayer.bringToTopItem(id);
                            resolve();
                        });
                        quicklook.on('error', function (e) {
                            properties[_this2._visible_index] = 'failed';
                            _this2._map.removeLayer(quicklook);
                            _this2._vectors[id].quicklook = null;
                            resolve();
                        });
                        quicklook.addTo(_this2._map);
                    } else {
                        properties[_this2._visible_index] = 'visible';
                        quicklook.addTo(_this2._map);
                        _this2._vectorLayer.bringToTopItem(id);
                        resolve();
                    }
                } else {
                    if (quicklook) {
                        _this2._map.removeLayer(quicklook);
                        _this2._vectorLayer.bringToBottomItem(id);
                    }
                    resolve();
                }
            });
        }
    }, {
        key: '_propertiesToItem',
        value: function _propertiesToItem(properties) {
            var _this3 = this;

            return properties && properties.slice(1, properties.length - 1).reduce(function (a, v, i) {
                var f = _this3._attributes[i];
                switch (_this3._attrTypes[i]) {
                    case 'date':
                        switch (typeof v === 'undefined' ? 'undefined' : _typeof(v)) {
                            case 'string':
                                a[f] = new Date(v);
                                break;
                            case 'number':
                                a[f] = new Date(v * 1000);
                                break;
                            default:
                                break;
                        }
                        break;
                    default:
                        a[f] = v;
                        break;
                }
                return a;
            }, {}) || null;
        }
    }, {
        key: '_mergeResults',
        value: function _mergeResults(old, data) {
            var _this4 = this;

            var cache = Object.keys(old).reduce(function (a, id) {
                a[id] = a[id] || { properties: [], quicklook: null };
                a[id].properties = old[id];
                return a;
            }, {});
            return data.reduce(function (a, value) {
                var id = value[0];
                if (cache[id]) {
                    cache[id].properties[_this4._result_index] = true;
                } else {
                    a[id] = a[id] || { properties: [], quicklook: null };
                    a[id].properties = value;
                }
                return a;
            }, cache);
        }
    }, {
        key: 'setData',
        value: function setData(_ref3) {
            var _this5 = this;

            var fields = _ref3.fields,
                values = _ref3.values;
            var activeTabId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'results';

            var idx = fields.indexOf('gmx_id');
            var vectors = values.reduce(function (a, item) {
                var clipCoords = (0, _Utils.flatten)(L.gmxUtil.geometryToGeoJSON(item[item.length - 1], true, true).coordinates, true);
                var value = _this5._attributes.reduce(function (b, k) {
                    var i = fields.indexOf(k);
                    if (i < 0) {
                        switch (k) {
                            case 'hover':
                            case 'selected':
                            case 'cart':
                                b.push(false);
                                break;
                            case 'result':
                                b.push(true);
                                break;
                            case 'acqtime':
                                b.push(null);
                                break;
                            case 'visible':
                                b.push('hidden');
                                break;
                            case 'clip_coords':
                                b.push(clipCoords);
                                break;
                            default:
                                break;
                        }
                    } else {
                        if (k === 'visible') {
                            switch (_typeof(item[i])) {
                                case 'boolean':
                                    b.push(item[i] ? 'visible' : 'hidden');
                                    break;
                                default:
                                case 'string':
                                    b.push(item[i]);
                                    break;
                            }
                        } else {
                            b.push(item[i]);
                        }
                    }
                    return b;
                }, []);
                value.unshift(item[idx]);
                value.push(item[item.length - 1]);
                a.push(value);
                return a;
            }, []);
            this._vectors = this._mergeResults(this._vectors, vectors);
            this._vectorLayer.removeData();
            var items = serialize(this._vectors).map(function (_ref4) {
                var properties = _ref4.properties;
                return properties;
            });
            this._vectorLayer.addData(items);
        }
    }, {
        key: 'clear',
        value: function clear() {
            var _this6 = this;

            var toRemove = Object.keys(this._vectors).reduce(function (a, id) {
                var properties = _this6._vectors[id].properties;

                if (properties[_this6._cart_index]) {
                    properties[_this6._result_index] = false;
                } else {
                    a.push([properties[0]]);
                }
                return a;
            }, []);
            this._vectorLayer.removeData(toRemove);
            toRemove.forEach(function (_ref5) {
                var _ref6 = _slicedToArray(_ref5, 1),
                    id = _ref6[0];

                var quicklook = _this6._vectors[id].quicklook;

                if (quicklook) {
                    _this6._map.removeLayer(quicklook);
                }
                delete _this6._vectors[id];
            });
        }
    }, {
        key: 'getFilteredItems',
        value: function getFilteredItems(filter) {
            var _this7 = this;

            return serialize(this._vectors).map(function (_ref7) {
                var properties = _ref7.properties;
                return _this7._propertiesToItem(properties);
            }).filter(filter);
        }
    }, {
        key: 'getItem',
        value: function getItem(id) {
            return this._propertiesToItem(this._vectors[id].properties);
        }
    }, {
        key: 'redraw',
        value: function redraw() {
            this._vectorLayer.repaint();
        }
    }, {
        key: 'redrawItem',
        value: function redrawItem(id) {
            this._vectorLayer.redrawItem(id);
        }
    }, {
        key: 'setHover',
        value: function setHover(id, hover) {
            this._vectors[id].properties[this._hover_index] = hover;
            this.redrawItem(id);
        }
    }, {
        key: 'setSelected',
        value: function setSelected(id, selected) {
            this._vectors[id].properties[this._selected_index] = selected;
            this.redrawItem(id);
        }
    }, {
        key: 'setVisible',
        value: function setVisible(id, show) {
            var properties = this._vectors[id].properties;

            var changed = false;
            if (show) {
                switch (properties[this._visible_index]) {
                    case 'hidden':
                    case 'failed':
                        properties[this._visible_index] = 'loading';
                        changed = true;
                        break;
                    case 'loading':
                        properties[this._visible_index] = 'visible';
                        changed = true;
                        break;
                    case 'visible':
                    default:
                        break;
                }
            } else {
                switch (properties[this._visible_index]) {
                    case 'failed':
                    case 'loading':
                    case 'visible':
                        properties[this._visible_index] = 'hidden';
                        changed = true;
                        break;
                    case 'hidden':
                    default:
                        break;
                }
            }
            this._vectorLayer.redrawItem(id);
            return changed;
        }
    }, {
        key: 'addAllToCart',
        value: function addAllToCart() {
            var _this8 = this;

            Object.keys(this._vectors).forEach(function (id) {
                var properties = _this8._vectors[id].properties;

                if (properties[_this8._result_index]) {
                    properties[_this8._cart_index] = true;
                }
            });
            this.redraw();
        }
    }, {
        key: 'addToCart',
        value: function addToCart(id) {
            var properties = this._vectors[id].properties;

            if (properties) {
                properties[this._cart_index] = !properties[this._cart_index];
                this._vectorLayer.redrawItem(id);
            }
            return this._propertiesToItem(properties);
        }
    }, {
        key: 'removeSelectedFavorites',
        value: function removeSelectedFavorites() {
            var _this9 = this;

            Object.keys(this._vectors).forEach(function (id) {
                var _vectors$id2 = _this9._vectors[id],
                    properties = _vectors$id2.properties,
                    quicklook = _vectors$id2.quicklook;

                if (properties[_this9._cart_index] && properties[_this9._selected_index]) {
                    properties[_this9._cart_index] = false;
                    properties[_this9._selected_index] = false;
                    _this9.showQuicklook(id, false);
                    _this9._vectorLayer.redrawItem(id);
                }
            });
        }
    }, {
        key: 'addVisibleToCart',
        value: function addVisibleToCart() {
            var _this10 = this;

            Object.keys(this._vectors).forEach(function (id) {
                var properties = _this10._vectors[id].properties;

                if (properties[_this10._visible_index] === 'visible') {
                    properties[_this10._cart_index] = true;
                    _this10._vectorLayer.redrawItem(id);
                }
            });
        }
    }, {
        key: 'vectors',
        get: function get() {
            return this._vectors;
        }
    }, {
        key: 'hasResults',
        get: function get() {
            var _this11 = this;

            return Object.keys(this._vectors).some(function (id) {
                var properties = _this11._vectors[id].properties;

                return properties[_this11._result_index];
            });
        }
    }, {
        key: 'hasVisibleResults',
        get: function get() {
            var _this12 = this;

            return Object.keys(this._vectors).some(function (id) {
                var properties = _this12._vectors[id].properties;

                return properties[_this12._result_index] && properties[_this12._visible_index];
            });
        }
    }, {
        key: 'hasFavoritesSelected',
        get: function get() {
            var _this13 = this;

            return Object.keys(this._vectors).some(function (id) {
                var properties = _this13._vectors[id].properties;

                return properties[_this13._cart_index] && properties[_this13._selected_index];
            });
        }
    }, {
        key: 'hasFavorites',
        get: function get() {
            var _this14 = this;

            return Object.keys(this._vectors).some(function (id) {
                var properties = _this14._vectors[id].properties;

                return properties[_this14._cart_index];
            });
        }
    }, {
        key: 'resultsCount',
        get: function get() {
            return this.getFilteredItems(function (item) {
                return item.result;
            }).length;
        }
    }, {
        key: 'favoritesCount',
        get: function get() {
            return this.getFilteredItems(function (item) {
                return item.cart;
            }).length;
        }
    }, {
        key: 'currentTab',
        set: function set(value) {
            var _this15 = this;

            this._currentTab = value;
            Object.keys(this._vectors).forEach(function (id) {
                var properties = _this15._vectors[id].properties;

                var filtered = true;
                if (typeof _this15._filter === 'function') {
                    filtered = _this15._filter(_this15._propertiesToItem(properties));
                }
                switch (_this15._currentTab) {
                    case 'results':
                        _this15.showQuicklook(id, filtered && properties[_this15._result_index] && properties[_this15._visible_index] === 'visible');
                        break;
                    case 'favorites':
                        _this15.showQuicklook(id, filtered && properties[_this15._cart_index] && properties[_this15._visible_index] === 'visible');
                        break;
                    case 'search':
                        _this15.showQuicklook(id, false);
                        break;
                    default:
                        break;
                }
            });
        }
    }]);

    return CompositeLayer;
}(_EventTarget2.EventTarget);

exports.CompositeLayer = CompositeLayer;

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Quicklook = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _EventTarget2 = __webpack_require__(3);

var _Utils = __webpack_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Quicklook = function (_EventTarget) {
    _inherits(Quicklook, _EventTarget);

    function Quicklook(_ref) {
        var map = _ref.map,
            data = _ref.data,
            url = _ref.url;

        _classCallCheck(this, Quicklook);

        var _this = _possibleConstructorReturn(this, (Quicklook.__proto__ || Object.getPrototypeOf(Quicklook)).call(this));

        _this._map = map;
        _this._data = data;
        _this._anchors = [[_this._data.x1, _this._data.y1], [_this._data.x2, _this._data.y2], [_this._data.x3, _this._data.y3], [_this._data.x4, _this._data.y4]];
        _this._url = url;
        _this._shape = null;
        _this._image = null;
        _this._stop = L.DomEvent.stopPropagation;
        return _this;
    }

    _createClass(Quicklook, [{
        key: '_createLayer',
        value: function _createLayer(geojson, style, pointToLayer) {
            //var geojson = this.wktToGeoJSON(wkt);
            var shape = L.GeoJSON.geometryToLayer(geojson, pointToLayer);

            if (shape instanceof L.LayerGroup) {
                shape.eachLayer(function (layer) {
                    if (style && typeof layer.setStyle == 'function') {
                        layer.setStyle(style);
                    }
                });
            } else if (style && typeof shape.setStyle == 'function') {
                shape.setStyle(style);
            }

            return shape;
        }
    }, {
        key: 'show',
        value: function show() {
            var _this2 = this;

            if (!this.shapeVisible) {
                switch (this._data.geoJSON.type.toUpperCase()) {
                    case 'POLYGON':
                    case 'MULTIPOLYGON':
                        this._shape = this._createLayer(this._data.geoJSON, {
                            fill: true,
                            weight: 1,
                            opacity: 1,
                            color: '#23a5cc',
                            fillOpacity: 0
                        });
                        this._map.addLayer(this._shape);
                        if (this._data.geoJSON.type != 'Point') {
                            L.DomEvent.on(this._shape, 'click', this._stop).on(this._shape, 'mouseover', this._stop).on(this._shape, 'mouseout', this._stop).on(this._shape, 'click', L.DomEvent.preventDefault);

                            this._shape.on('click', function (e) {
                                if (_this2.imageVisible) {
                                    _this2.hideImage();
                                    _this2.bringToBack();
                                } else {
                                    _this2.showImage();
                                }

                                var event = document.createEvent('Event');
                                event.initEvent('click', false, false);
                                event.detail = { data: _this2._data, imageVisible: _this2.imageVisible, originalEvent: e };
                                _this2.dispatchEvent(event);

                                _this2._map.fire('click', e);
                            }, this).on('mouseover', function (e) {

                                var event = document.createEvent('Event');
                                event.initEvent('mouseover', false, false);
                                event.detail = { originalEvent: e, data: _this2._data, target: _this2 };
                                _this2.dispatchEvent(event);
                            }, this).on('mouseout', function (e) {

                                var event = document.createEvent('Event');
                                event.initEvent('mouseout', false, false);
                                event.detail = { originalEvent: e, data: _this2._data, target: _this2 };
                                _this2.dispatchEvent(event);
                            }, this);
                        }
                        this._shape.bringToFront();
                        break;
                    default:
                        console.log('Attempt to create a quicklook from a prohibited geometry:', g);
                        break;
                }
            }
        }
    }, {
        key: 'setStyle',
        value: function setStyle(style) {
            if (this.shapeVisible) {
                this._shape.setStyle(style);
            }
        }
    }, {
        key: 'hide',
        value: function hide() {
            this.hideImage();
            if (this.shapeVisible) {
                this._shape.removeEventListener();
                this._map.removeLayer(this._shape);
            }
            this._shape = null;
        }
    }, {
        key: 'showImage',
        value: function showImage() {
            if (!this.imageVisible) {
                if (!this.shapeVisible) {
                    this.show();
                }
                var imageUrl = this._url + '?id=' + (0, _Utils.split_complex_id)(this._data.sceneid).id + '&width=1024&height=1024';
                var clipCoords = (0, _Utils.flatten)(this._shape.toGeoJSON().geometry.coordinates, true);
                this._image = L.imageTransform(imageUrl, (0, _Utils.flatten)(this._anchors, true), { clip: clipCoords, disableSetClip: true }).addTo(this._map);
            }
        }
    }, {
        key: 'hideImage',
        value: function hideImage() {
            if (this.imageVisible) {
                this._map.removeLayer(this._image);
                this._image = null;
            }
        }
    }, {
        key: 'bringToBack',
        value: function bringToBack() {
            if (this.shapeVisible) {
                this._shape.bringToBack();
            }
            if (this.imageVisible) {
                this._image.bringToBack();
            }
        }
    }, {
        key: 'bringToFront',
        value: function bringToFront() {
            if (this.imageVisible) {
                this._image.bringToFront();
            }
        }
    }, {
        key: 'data',
        get: function get() {
            return this._data;
        }
    }, {
        key: 'imageVisible',
        get: function get() {
            return this._image != null;
        }
    }, {
        key: 'shapeVisible',
        get: function get() {
            return this._shape != null;
        }
    }, {
        key: 'anchors',
        get: function get() {
            return {
                type: 'Polygon',
                coordinates: [this._anchors.concat([this._anchors[0]])]
            };
        }
    }, {
        key: 'bounds',
        get: function get() {
            return L.GeoJSON.coordsToLatLngs((0, _Utils.flatten)(this._anchors));
        }
    }]);

    return Quicklook;
}(_EventTarget2.EventTarget);

exports.Quicklook = Quicklook;

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Info = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(193);

var _Translations = __webpack_require__(2);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

var Info = function () {
    function Info(container) {
        _classCallCheck(this, Info);

        this._container = container;
        this._container.classList.add('satellite-info');
        this._delay = 600;
        this._allowShow = false;
    }

    _createClass(Info, [{
        key: 'show',
        value: function show(left, top) {
            var _this = this;

            this.render();
            this._container.style.left = left + 'px';
            this._container.style.top = top + 'px';
            this._allowShow = true;
            window.setTimeout(function () {
                if (_this._allowShow) {
                    _this._container.style.display = 'block';
                    _this._allowShow = false;
                }
            }, this._delay);
        }
    }, {
        key: 'hide',
        value: function hide() {
            this._allowShow = false;
            this._container.style.display = 'none';
        }
    }, {
        key: 'render',
        value: function render() {
            this._container.innerHTML = '<table cellspacing="0" cellpadding="0">\n            <tbody>\n                <tr>\n                    <td>' + T.getText('satellite.resolution') + ':</td><td>' + this._resolution + '</td><td>' + T.getText('resolution.unit') + '</td>\n                </tr>\n                <tr>\n                    <td>' + T.getText('satellite.swath') + ':</td><td>' + this._swath + '</td><td>' + T.getText('units.km') + '</td>\n                </tr>                \n            </tbody>\n        </table>\n        <div>' + this._operator + '</div>\n        <div>' + T.getText('satellite.since') + ' ' + this._since + '</div>';
        }
    }, {
        key: 'resolution',
        set: function set(value) {
            this._resolution = value;
        }
    }, {
        key: 'swath',
        set: function set(value) {
            this._swath = value;
        }
    }, {
        key: 'operator',
        set: function set(value) {
            this._operator = value;
        }
    }, {
        key: 'since',
        set: function set(value) {
            this._since = value;
        }
    }]);

    return Info;
}();

exports.Info = Info;

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Satellites = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(194);

var _EventTarget2 = __webpack_require__(3);

var _Translations = __webpack_require__(2);

var _Tristate = __webpack_require__(183);

var _Info = __webpack_require__(165);

var _Utils = __webpack_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

T.addText('rus', {
    satellite: {
        global: 'Внешние',
        local: 'Внутренние',
        ms: 'Мультиспектр',
        pc: 'Панхром',
        resolution: 'Разрешение',
        swath: 'Ширина полосы съемки',
        since: 'На орбите:'
    }
});

T.addText('eng', {
    satellite: {
        global: 'Global',
        local: 'Local',
        ms: 'Multispectrum',
        pc: 'Panchrome',
        resolution: 'Resolution',
        swath: 'Swath',
        since: 'In orbit since'
    }
});

var SATELLITE_COLS = 2;

var Satellites = function (_EventTarget) {
    _inherits(Satellites, _EventTarget);

    function Satellites(container, _ref) {
        var _ref$restricted = _ref.restricted,
            restricted = _ref$restricted === undefined ? false : _ref$restricted;

        _classCallCheck(this, Satellites);

        var _this = _possibleConstructorReturn(this, (Satellites.__proto__ || Object.getPrototypeOf(Satellites)).call(this));

        _this._container = container;
        _this._restricted = restricted;
        _this._info = new _Info.Info((0, _Utils.create_container)());
        return _this;
    }

    _createClass(Satellites, [{
        key: '_updateChecked',
        value: function _updateChecked(nodes, cache) {
            for (var i = 0; i < nodes.length; ++i) {
                var node = nodes[i];
                node.checked = cache[i].checked;
            }
        }
    }, {
        key: '_attachEvents',
        value: function _attachEvents(nodes, cache) {
            var _this2 = this;

            var _loop = function _loop(i) {
                var node = nodes[i];
                node.addEventListener('click', function (e) {
                    cache[i].checked = e.target.checked;
                    _this2._handleChange();
                });
                var p = node.parentNode.querySelector('label');
                p.addEventListener('mouseover', function (e) {
                    var _cache$i = cache[i],
                        resolution = _cache$i.resolution,
                        swath = _cache$i.swath,
                        operator = _cache$i.operator,
                        since = _cache$i.since;

                    _this2._info.resolution = resolution;
                    _this2._info.swath = swath;
                    _this2._info.operator = operator;
                    _this2._info.since = since;

                    var _p$getBoundingClientR = p.getBoundingClientRect(),
                        left = _p$getBoundingClientR.left,
                        top = _p$getBoundingClientR.top,
                        width = _p$getBoundingClientR.width;

                    _this2._info.show(left + width, top - 10);
                });
                p.addEventListener('mouseout', function (e) {
                    _this2._info.hide();
                });
            };

            for (var i = 0; i < nodes.length; ++i) {
                _loop(i);
            }
        }
    }, {
        key: '_handleChange',
        value: function _handleChange() {
            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            this.dispatchEvent(event);
        }
    }, {
        key: '_getSatelliteClass',
        value: function _getSatelliteClass(i) {
            return i > 0 && i % SATELLITE_COLS === 0 ? 'satellite-col-break' : 'satellite-col';
        }
    }, {
        key: '_getSatelliteList',
        value: function _getSatelliteList(cache) {
            return cache.map(function (x, i) {
                return '<div class="satellite-col"><input type="checkbox" id="sat_' + x.id + '" value="' + x.id + '" /><label for="sat_' + x.id + '">' + x.name + '</label></div>';
            }).join('');
        }
    }, {
        key: '_getTooltip',
        value: function _getTooltip(obj) {
            return T.getText('satellite.resolution') + ' ' + obj.resolution + ' ' + T.getText('satellite.swath') + ' ' + obj.swath + ' ' + obj.operator + ' ' + T.getText('satellite.since') + ' ' + obj.since;
        }
    }, {
        key: '_render',
        value: function _render() {

            this._container.innerHTML = '<fieldset class="search-options-satellites-ms">\n            <legend>\n                <input id="search-options-satellites-ms-select" type="checkbox" class="search-options-satellites-ms-select" />\n                <label for="search-options-satellites-ms-select">' + T.getText('satellite.ms') + '</label>\n            </legend>            \n            <div>' + this._getSatelliteList(this._ms) + '</div>\n        </fieldset>\n        <fieldset class="search-options-satellites-pc">            \n            <legend>\n                <input id="search-options-satellites-pc-select" type="checkbox" class="search-options-satellites-pc-select" />\n                <label for="search-options-satellites-pc-select">' + T.getText('satellite.pc') + '</label>\n            </legend>            \n            <div>' + this._getSatelliteList(this._pc) + '</div>\n        </fieldset>';
            var ms = this._container.querySelectorAll('.search-options-satellites-ms div input[type="checkbox"]');
            this._attachEvents(ms, this._ms);
            this._msTristate = new _Tristate.Tristate(this._container.querySelector('.search-options-satellites-ms legend input[type="checkbox"]'), ms);
            this._updateChecked(ms, this._ms);
            this._msTristate.update();

            var pc = this._container.querySelectorAll('.search-options-satellites-pc div input[type="checkbox"]');
            this._attachEvents(pc, this._pc);
            this._pcTristate = new _Tristate.Tristate(this._container.querySelector('.search-options-satellites-pc legend input[type="checkbox"]'), pc);
            this._updateChecked(pc, this._pc);
            this._pcTristate.update();
        }

        // redraw () {
        //     this._render();
        //     this._handleChange();
        // }

    }, {
        key: 'data',
        set: function set(_ref2) {
            var ms = _ref2.ms,
                pc = _ref2.pc;

            this._ms = this._restricted ? ms : ms.filter(function (x) {
                return !x.restricted;
            });
            this._pc = this._restricted ? pc : pc.filter(function (x) {
                return !x.restricted;
            });
            this._render();
            this._handleChange();
        },
        get: function get() {
            return { ms: this._ms, pc: this._pc };
        }
    }, {
        key: 'count',
        get: function get() {
            var ss = this.items.filter(function (x) {
                return x.checked;
            }).reduce(function (a, x) {
                switch (x.id) {
                    case 'SP5_10MS':
                    case 'SP5_5MS':
                    case 'SP5_5PC':
                    case 'SP5_2MS':
                    case 'SP5_2PC':
                        a.SP5 = 1;
                        break;
                    case 'SP6_7':
                        a.SP6_7 = 2;
                        break;
                    case 'PHR':
                        a.PHR = 2;
                        break;
                    case 'RP_PC':
                    case 'RP_MS':
                        a.RP = 3;
                        break;
                    default:
                        a[x.id] = 1;
                        break;
                }
                return a;
            }, {});
            return Object.keys(ss).reduce(function (a, k) {
                return a + ss[k];
            }, 0);
        }
    }, {
        key: 'items',
        get: function get() {
            return this._ms.concat(this._pc);
        }
    }, {
        key: 'range',
        get: function get() {
            var range = this.items.filter(function (x) {
                return x.checked;
            }).map(function (x) {
                return x.resolution;
            }).sort(function (a, b) {
                if (a < b) return -1;
                if (a > b) return 1;
                if (a == b) return 0;
            });
            if (range.length > 0) {
                return [range[0], range[range.length - 1]];
            } else {
                return [];
            }
        },
        set: function set(_ref3) {
            var _ref4 = _slicedToArray(_ref3, 2),
                min = _ref4[0],
                max = _ref4[1];

            this._ms.forEach(function (x) {
                x.checked = min <= x.resolution && x.resolution <= max;
            });
            var ms = this._container.querySelectorAll('.search-options-satellites-ms div input[type="checkbox"]');
            this._updateChecked(ms, this._ms);
            this._msTristate.update();

            this._pc.forEach(function (x) {
                x.checked = min <= x.resolution && x.resolution <= max;
            });
            var pc = this._container.querySelectorAll('.search-options-satellites-pc div input[type="checkbox"]');
            this._updateChecked(pc, this._pc);
            this._pcTristate.update();

            // this._handleChange();
        }
    }]);

    return Satellites;
}(_EventTarget2.EventTarget);

exports.Satellites = Satellites;

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var PLEIADES = [{ 'Name': 'datastrip', 'Type': 'String' }, { 'Name': 'orb', 'Type': 'Float' }, { 'Name': 'satel', 'Type': 'String' }, { 'Name': 'dataq_star', 'Type': 'Date' }, { 'Name': 'dataq_end', 'Type': 'Date' }, { 'Name': 'sensor', 'Type': 'String' }, { 'Name': 'cloud_per', 'Type': 'Float' }, { 'Name': 'snow_per', 'Type': 'Float' }, { 'Name': 'incid_ang', 'Type': 'Float' }, { 'Name': 'sun_azimut', 'Type': 'Float' }, { 'Name': 'sun_elevat', 'Type': 'Float' }, { 'Name': 'orient_ang', 'Type': 'Float' }, { 'Name': 'across_ang', 'Type': 'Float' }, { 'Name': 'along_ang', 'Type': 'Float' }, { 'Name': 'combin_ang', 'Type': 'Float' }, { 'Name': 'roll_ang', 'Type': 'Float' }, { 'Name': 'pitch_ang', 'Type': 'Float' }, { 'Name': 'url_ql', 'Type': 'String' },
// {'Name':'url','Type':'String'},  
{ 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }];

var QB_GE_WV2_WV3 = [{ 'Name': 'catalogid', 'Type': 'String' }, { 'Name': 'acqdate', 'Type': 'Date' }, { 'Name': 'mnoffnadir', 'Type': 'Float' }, { 'Name': 'mxoffnadir', 'Type': 'Float' }, { 'Name': 'avoffnadir', 'Type': 'Float' }, { 'Name': 'mnsunazim', 'Type': 'Float' }, { 'Name': 'mxsunazim', 'Type': 'Float' }, { 'Name': 'avsunazim', 'Type': 'Float' }, { 'Name': 'mnsunelev', 'Type': 'Float' }, { 'Name': 'mxsunelev', 'Type': 'Float' }, { 'Name': 'avsunelev', 'Type': 'Float' }, { 'Name': 'mntargetaz', 'Type': 'Float' }, { 'Name': 'mxtargetaz', 'Type': 'Float' }, { 'Name': 'avtargetaz', 'Type': 'Float' }, { 'Name': 'mnpanres', 'Type': 'Float' }, { 'Name': 'mxpanres', 'Type': 'Float' }, { 'Name': 'avpanres', 'Type': 'Float' }, { 'Name': 'mnmultires', 'Type': 'Float' }, { 'Name': 'mxmultires', 'Type': 'Float' }, { 'Name': 'avmultires', 'Type': 'Float' }, { 'Name': 'stereopair', 'Type': 'String' }, { 'Name': 'browseurl', 'Type': 'String' }, { 'Name': 'cloudcover', 'Type': 'Float' }, { 'Name': 'platform', 'Type': 'String' }, { 'Name': 'imagebands', 'Type': 'String' },
// {'Name':'url','Type':'String'},    
{ 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }];

var QB_GE_WV2_WV3_L = [{ 'Name': 'scene_id', 'Type': 'String' }, { 'Name': 'part_id', 'Type': 'String' }, { 'Name': 'cat_id', 'Type': 'String' }, { 'Name': 'satellite', 'Type': 'String' }, { 'Name': 'cloudsp', 'Type': 'Float' }, { 'Name': 'view_angle', 'Type': 'Float' }, { 'Name': 'sun_elevat', 'Type': 'Float' }, { 'Name': 'img_start', 'Type': 'Date' }, { 'Name': 'volume_lab', 'Type': 'String' }, { 'Name': 'cust_order', 'Type': 'String' }, { 'Name': 'area_desc', 'Type': 'String' }, { 'Name': 'meta_ts', 'Type': 'String' }, { 'Name': 'url', 'Type': 'String' }, { 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }];

var RAPIDEYE = [{ 'Name': 'scid', 'Type': 'String' }, { 'Name': 'sunaz', 'Type': 'Float' }, { 'Name': 'blkfill', 'Type': 'Float' }, { 'Name': 'catid', 'Type': 'Integer' }, { 'Name': 'area', 'Type': 'Float' }, { 'Name': 'cc', 'Type': 'Integer' }, { 'Name': 'acqtime', 'Type': 'Date' }, { 'Name': 'ullat', 'Type': 'Float' }, { 'Name': 'udp', 'Type': 'Integer' }, { 'Name': 'azang', 'Type': 'Float' }, { 'Name': 'tileid', 'Type': 'Float' }, { 'Name': 'sunel', 'Type': 'Float' }, { 'Name': 'ullon', 'Type': 'Float' }, { 'Name': 'imgurl', 'Type': 'String' }, { 'Name': 'vwangle', 'Type': 'Float' },
// {'Name':'url','Type':'String'},
{ 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }];

var KOMPSAT = [{ 'Name': 'productid', 'Type': 'String' }, { 'Name': 'platfSNm', 'Type': 'String' }, { 'Name': 'platfSer', 'Type': 'String' }, { 'Name': 'orbit', 'Type': 'Integer' }, { 'Name': 'orbitDir', 'Type': 'Integer' }, { 'Name': 'frame', 'Type': 'Integer' }, { 'Name': 'track', 'Type': 'Integer' }, { 'Name': 'resTitle', 'Type': 'String' }, { 'Name': 'begin', 'Type': 'Date' }, { 'Name': 'end', 'Type': 'Date' }, { 'Name': 'cloudCovePerc', 'Type': 'Integer' }, { 'Name': 'bgFileName', 'Type': 'String' }, { 'Name': 'offNadirAngle', 'Type': 'Float' }, { 'Name': 'url', 'Type': 'String' }, { 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }];

var EROS = [{ 'Name': 'id', 'Type': 'Integer' }, { 'Name': 'row', 'Type': 'Integer' }, { 'Name': 'nbound', 'Type': 'Float' }, { 'Name': 'sbound', 'Type': 'Float' }, { 'Name': 'wbound', 'Type': 'Float' }, { 'Name': 'ebound', 'Type': 'Float' }, { 'Name': 'platform', 'Type': 'String' }, { 'Name': 'sceneid', 'Type': 'String' }, { 'Name': 'acdate', 'Type': 'Date' }, { 'Name': 'filename', 'Type': 'String' }, { 'Name': 'volume', 'Type': 'String' }, { 'Name': 'cld', 'Type': 'Integer' }, { 'Name': 'url', 'Type': 'String' }, { 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }];

var GF_ZY = [{ 'Name': 'productid', 'Type': 'String' }, { 'Name': 'jh', 'Type': 'String' }, { 'Name': 'satellitei', 'Type': 'String' }, { 'Name': 'datatype', 'Type': 'String' }, { 'Name': 'sx', 'Type': 'Date' }, { 'Name': 'scenepath', 'Type': 'String' }, { 'Name': 'scenerow', 'Type': 'String' }, { 'Name': 'rasterfile', 'Type': 'String' }, { 'Name': 'pc', 'Type': 'String' }, { 'Name': 'cloudcover', 'Type': 'Integer' }, { 'Name': 'url', 'Type': 'String' }, { 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }];

var LANDSAT_8 = [{ 'Name': 'browseavailable', 'Type': 'String' }, { 'Name': 'browseurl', 'Type': 'String' }, { 'Name': 'sceneid', 'Type': 'String' }, { 'Name': 'sensor', 'Type': 'String' }, { 'Name': 'acquisitiondate', 'Type': 'Date' }, { 'Name': 'dateupdated', 'Type': 'Date' }, { 'Name': 'path', 'Type': 'Integer' }, { 'Name': 'row', 'Type': 'Integer' }, { 'Name': 'upperleftcornerlatitude', 'Type': 'Float' }, { 'Name': 'upperleftcornerlongitude', 'Type': 'Float' }, { 'Name': 'upperrightcornerlatitude', 'Type': 'Float' }, { 'Name': 'upperrightcornerlongitude', 'Type': 'Float' }, { 'Name': 'lowerleftcornerlatitude', 'Type': 'Float' }, { 'Name': 'lowerleftcornerlongitude', 'Type': 'Float' }, { 'Name': 'lowerrightcornerlatitude', 'Type': 'Float' }, { 'Name': 'lowerrightcornerlongitude', 'Type': 'Float' }, { 'Name': 'scenecenterlatitude', 'Type': 'Float' }, { 'Name': 'scenecenterlongitude', 'Type': 'Float' }, { 'Name': 'cloudcover', 'Type': 'Integer' }, { 'Name': 'cloudcoverfull', 'Type': 'Float' }, { 'Name': 'dayornight', 'Type': 'String' }, { 'Name': 'sunelevation', 'Type': 'Float' }, { 'Name': 'sunazimuth', 'Type': 'Float' }, { 'Name': 'receivingstation', 'Type': 'String' }, { 'Name': 'scenestarttime', 'Type': 'String' }, { 'Name': 'scenestoptime', 'Type': 'String' }, { 'Name': 'imagequality1', 'Type': 'Integer' }, { 'Name': 'data_type_l1', 'Type': 'String' }, { 'Name': 'carturl', 'Type': 'String' }, { 'Name': 'geometric_rmse_model_x', 'Type': 'Integer' }, { 'Name': 'geometric_rmse_model_y', 'Type': 'Integer' }, { 'Name': 'full_partial_scene', 'Type': 'String' }, { 'Name': 'nadir_offnadir', 'Type': 'String' }, { 'Name': 'processing_software_version', 'Type': 'String' }, { 'Name': 'cpf_name', 'Type': 'String' }, { 'Name': 'rlut_file_name', 'Type': 'String' }, { 'Name': 'bpf_name_oli', 'Type': 'String' }, { 'Name': 'bpf_name_tirs', 'Type': 'String' }, { 'Name': 'id', 'Type': 'Integer' }, { 'Name': 'landsat_product_id', 'Type': 'String' },
// {'Name':'url','Type':'String'},
{ 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }];

var IKONOS = [{ 'Name': 'image_id', 'Type': 'String' }, { 'Name': 'order_id', 'Type': 'String' }, { 'Name': 'source_abr', 'Type': 'String' }, { 'Name': 'source', 'Type': 'String' }, { 'Name': 'sens_mode', 'Type': 'String' }, { 'Name': 'strip_id', 'Type': 'String' }, { 'Name': 'scene_id', 'Type': 'String' }, { 'Name': 'coll_date', 'Type': 'String' }, { 'Name': 'month', 'Type': 'Integer' }, { 'Name': 'year', 'Type': 'Integer' }, { 'Name': 'gsd', 'Type': 'Float' }, { 'Name': 'sqkm', 'Type': 'Integer' }, { 'Name': 'spatialref', 'Type': 'String' }, { 'Name': 'ranking', 'Type': 'Integer' }, { 'Name': 'elev_angle', 'Type': 'Float' }, { 'Name': 'azim_angle', 'Type': 'Float' }, { 'Name': 'clouds', 'Type': 'Integer' }, { 'Name': 'sun_elev', 'Type': 'Float' }, { 'Name': 'sun_angle', 'Type': 'Float' }, { 'Name': 'stereo_id', 'Type': 'String' }, { 'Name': 'data_owner', 'Type': 'String' }, { 'Name': 'ul_lat', 'Type': 'Float' }, { 'Name': 'ul_lon', 'Type': 'Float' }, { 'Name': 'ur_lat', 'Type': 'Float' }, { 'Name': 'ur_lon', 'Type': 'Float' }, { 'Name': 'll_lat', 'Type': 'Float' }, { 'Name': 'll_lon', 'Type': 'Float' }, { 'Name': 'lr_lat', 'Type': 'Float' }, { 'Name': 'lr_lon', 'Type': 'Float' }, { 'Name': 'georectify', 'Type': 'Integer' }, { 'Name': 'image_url', 'Type': 'String' }, { 'Name': 'world_url', 'Type': 'String' }, { 'Name': 'metadata', 'Type': 'String' }, { 'Name': 'product', 'Type': 'String' },
// {'Name':'url','Type':'String'},
{ 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }];

var WV1 = [{ 'Name': 'catalogid', 'Type': 'String' }, { 'Name': 'acqdate', 'Type': 'Date' }, { 'Name': 'mnoffnadir', 'Type': 'Integer' }, { 'Name': 'mxoffnadir', 'Type': 'Integer' }, { 'Name': 'avoffnadir', 'Type': 'Integer' }, { 'Name': 'mnsunazim', 'Type': 'Float' }, { 'Name': 'mxsunazim', 'Type': 'Float' }, { 'Name': 'avsunazim', 'Type': 'Float' }, { 'Name': 'mnsunelev', 'Type': 'Float' }, { 'Name': 'mxsunelev', 'Type': 'Float' }, { 'Name': 'avsunelev', 'Type': 'Float' }, { 'Name': 'mntargetaz', 'Type': 'Float' }, { 'Name': 'mxtargetaz', 'Type': 'Float' }, { 'Name': 'avtargetaz', 'Type': 'Float' }, { 'Name': 'mnpanres', 'Type': 'Integer' }, { 'Name': 'mxpanres', 'Type': 'Integer' }, { 'Name': 'avpanres', 'Type': 'Integer' }, { 'Name': 'mnmultires', 'Type': 'Integer' }, { 'Name': 'mxmultires', 'Type': 'Integer' }, { 'Name': 'avmultires', 'Type': 'Integer' }, { 'Name': 'stereopair', 'Type': 'String' }, { 'Name': 'browseurl', 'Type': 'String' }, { 'Name': 'cloudcover', 'Type': 'Integer' }, { 'Name': 'platform', 'Type': 'String' },
// {'Name':'url','Type':'String'},    
{ 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }, { 'Name': 'imagebands', 'Type': 'String' }];

var BKA = [{ 'Name': 'id', 'Type': 'String' }, { 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }, { 'Name': 'typeinformation', 'Type': 'String' }, { 'Name': 'lastupdatedate', 'Type': 'Date' }, { 'Name': 'satellite', 'Type': 'String' }, { 'Name': 'cyclenumber', 'Type': 'String' }, { 'Name': 'acquisitiontime', 'Type': 'Date' }, { 'Name': 'sensortype', 'Type': 'String' }, { 'Name': 'sensorresolution', 'Type': 'String' }, { 'Name': 'cloudcover', 'Type': 'Integer' }, { 'Name': 'viewingangle', 'Type': 'Float' }, { 'Name': 'sunelevation', 'Type': 'Float' }, { 'Name': 'sunazimuth', 'Type': 'Float' }];

var SPOT5 = [{ 'Name': 'a21', 'Type': 'String' }, { 'Name': 'sc_num', 'Type': 'Integer' }, { 'Name': 'seg_num', 'Type': 'Integer' }, { 'Name': 'satel', 'Type': 'Integer' }, { 'Name': 'ang_inc', 'Type': 'Float' }, { 'Name': 'ang_acq', 'Type': 'Integer' }, { 'Name': 'date_acq', 'Type': 'String' }, { 'Name': 'month_acq', 'Type': 'String' }, { 'Name': 'cloud_quot', 'Type': 'String' }, { 'Name': 'cloud_per', 'Type': 'Integer' }, { 'Name': 'snow_quot', 'Type': 'String' }, { 'Name': 'lat_cen', 'Type': 'Float' }, { 'Name': 'lon_cen', 'Type': 'Float' }, { 'Name': 'lat_up_l', 'Type': 'Float' }, { 'Name': 'lon_up_l', 'Type': 'Float' }, { 'Name': 'lat_up_r', 'Type': 'Float' }, { 'Name': 'lon_up_r', 'Type': 'Float' }, { 'Name': 'lat_lo_l', 'Type': 'Float' }, { 'Name': 'lon_lo_l', 'Type': 'Float' }, { 'Name': 'lat_lo_r', 'Type': 'Float' }, { 'Name': 'lon_lo_r', 'Type': 'Float' }, { 'Name': 'resol', 'Type': 'Integer' }, { 'Name': 'mode', 'Type': 'String' }, { 'Name': 'type', 'Type': 'String' }, { 'Name': 'url_ql', 'Type': 'String' },
// {'Name':'url','Type':'String'},
{ 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }];

var Formats = {
    KOMPSAT: KOMPSAT,
    QB_GE_WV2_WV3: QB_GE_WV2_WV3,
    QB_GE_WV2_WV3_L: QB_GE_WV2_WV3_L,
    PLEIADES: PLEIADES,
    RAPIDEYE: RAPIDEYE,
    EROS: EROS,
    GF_ZY: GF_ZY,
    LANDSAT_8: LANDSAT_8,
    IKONOS: IKONOS,
    BKA: BKA,
    WV1: WV1,
    SPOT5: SPOT5,
    'SPOT-6_7': [{ 'Name': 'datastrip', 'Type': 'String' }, { 'Name': 'orb', 'Type': 'Float' }, { 'Name': 'satel', 'Type': 'String' }, { 'Name': 'dataq_star', 'Type': 'Date' }, { 'Name': 'dataq_end', 'Type': 'Date' }, { 'Name': 'sensor', 'Type': 'String' }, { 'Name': 'cloud_per', 'Type': 'Float' }, { 'Name': 'snow_per', 'Type': 'Float' }, { 'Name': 'incid_ang', 'Type': 'Float' }, { 'Name': 'sun_azimut', 'Type': 'Float' }, { 'Name': 'sun_elevat', 'Type': 'Float' }, { 'Name': 'orient_ang', 'Type': 'Float' }, { 'Name': 'across_ang', 'Type': 'Float' }, { 'Name': 'along_ang', 'Type': 'Float' }, { 'Name': 'combin_ang', 'Type': 'Float' }, { 'Name': 'roll_ang', 'Type': 'Float' }, { 'Name': 'pitch_ang', 'Type': 'Float' }, { 'Name': 'sc_nb', 'Type': 'Float' }, { 'Name': 'url_ql', 'Type': 'String' },
    // {'Name':'url','Type':'String'},
    { 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }],
    'SPOT-6_7_L': [{ 'Name': 'id', 'Type': 'Integer' }, { 'Name': 'row', 'Type': 'Integer' }, { 'Name': 'nbound', 'Type': 'Float' }, { 'Name': 'sbound', 'Type': 'Float' }, { 'Name': 'wbound', 'Type': 'Float' }, { 'Name': 'ebound', 'Type': 'Float' }, { 'Name': 'platform', 'Type': 'String' }, { 'Name': 'sceneid', 'Type': 'String' }, { 'Name': 'acdate', 'Type': 'String' }, { 'Name': 'filename', 'Type': 'String' }, { 'Name': 'volume', 'Type': 'String' }, { 'Name': 'cld', 'Type': 'Integer' }, { 'Name': 'url', 'Type': 'String' }, { 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }],
    ONE_ATLAS: [{ 'Name': 'num_points', 'Type': 'String' }, { 'Name': 'scene_id', 'Type': 'String' }, { 'Name': 'ds_id', 'Type': 'String' }, { 'Name': 'satellite', 'Type': 'String' }, { 'Name': 'sensor_mod', 'Type': 'String' }, { 'Name': 'cloudsp', 'Type': 'String' }, { 'Name': 'sun_azimut', 'Type': 'Float' }, { 'Name': 'sun_elevat', 'Type': 'Float' }, { 'Name': 'view_angle', 'Type': 'Float' }, { 'Name': 'azimuth', 'Type': 'Float' }, { 'Name': 'img_start', 'Type': 'Date' }, { 'Name': 'order_id', 'Type': 'String' }, { 'Name': 'pack_id', 'Type': 'String' }, { 'Name': 'qlurl', 'Type': 'String' }, { 'Name': 'x1', 'Type': 'Float' }, { 'Name': 'y1', 'Type': 'Float' }, { 'Name': 'x2', 'Type': 'Float' }, { 'Name': 'y2', 'Type': 'Float' }, { 'Name': 'x3', 'Type': 'Float' }, { 'Name': 'y3', 'Type': 'Float' }, { 'Name': 'x4', 'Type': 'Float' }, { 'Name': 'y4', 'Type': 'Float' }, { 'Name': 'shp_ts', 'Type': 'Date' }]
};

exports.Formats = Formats;

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

function sti(period, lon, lat) {
    return 65536 * period + 256 * Math.round(256 * (90 - lat) / 180) + Math.round(256 * (lon + 180) / 360);
}

function step(lat) {
    return lat < 50 ? 1 : 50 <= lat && lat <= 70 ? 2 : 3;
}

function tile_range(period, _ref) {
    var _ref2 = _slicedToArray(_ref, 4),
        _ref2$ = _slicedToArray(_ref2[0], 2),
        x1 = _ref2$[0],
        y1 = _ref2$[1],
        _ref2$2 = _slicedToArray(_ref2[1], 2),
        x2 = _ref2$2[0],
        y2 = _ref2$2[1],
        _ref2$3 = _slicedToArray(_ref2[2], 2),
        x3 = _ref2$3[0],
        y3 = _ref2$3[1],
        _ref2$4 = _slicedToArray(_ref2[3], 2),
        x4 = _ref2$4[0],
        y4 = _ref2$4[1];

    var nw = sti(period, x1, y1) - (step(Math.abs(y1)) + 512);
    var ne = sti(period, x2, y2) + (step(Math.abs(y2)) - 512);
    var se = sti(period, x3, y3) + (step(Math.abs(y3)) + 512);
    var sw = sti(period, x4, y4) - (step(Math.abs(y4)) - 512);

    var rng = [];
    for (var lo = nw, hi = ne; hi <= se; lo += 256, hi += 256) {
        var k = lo;
        while (k <= hi) {
            rng.push(k++);
        }
    }
    return rng;
}

function get_months(date) {
    return (date.getFullYear() - 1970) * 12 + date.getMonth() + 1;
}

function get_quarters(date) {
    return (date.getFullYear() - 1970) * 4 + Math.ceil((date.getMonth() + 1) / 3);
}

function st_range(start, end, boxes) {
    var rng = [];
    var lo = get_quarters(start);
    var hi = get_quarters(end);

    var _loop = function _loop(i) {
        boxes.forEach(function (box) {
            tile_range(i, box).forEach(function (n) {
                return rng.push(n);
            });
        });
    };

    for (var i = lo; i <= hi; i++) {
        _loop(i);
    }
    return rng;
}

function to_query(range) {
    return '' + (range.length > 0 ? 'stidx IN (' + range.join(',') + ')' : '');
}

exports.st_range = st_range;
exports.to_query = to_query;

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Server = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Request = __webpack_require__(17);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//TODO: использовать ли библиотеку?
function parseUri(str) {
    var parser = /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
        key = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"],
        m = parser.exec(str),
        uri = {},
        i = 14;

    while (i--) {
        uri[key[i]] = m[i] || "";
    } // HACK
    uri.hostOnly = uri.host;
    uri.host = uri.authority;

    return uri;
}

var requests = {};
var lastRequestId = 0;
var uniquePrefix = "id" + Math.random();

function processMessage(e) {
    if (e.origin in requests) {
        var dataStr = decodeURIComponent(e.data.replace(/\n/g, '\n\\'));
        try {
            var dataObj = JSON.parse(dataStr);
            var request = requests[e.origin][dataObj.CallbackName];
            if (request) {
                delete requests[e.origin][dataObj.CallbackName];
                request.iframe.parentNode.removeChild(request.iframe);
                request.callback && request.callback(dataObj);
            }
        } catch (e) {}
    }
}

//совместимость с IE8
if (window.addEventListener) {
    window.addEventListener('message', processMessage);
} else {
    window.attachEvent('onmessage', processMessage);
}

function addQueryVariables(url, variables) {
    var oldQueryString = url.split('?')[1];
    var newQueryString = '';
    for (var variable in variables) {
        if (variables.hasOwnProperty(variable)) {
            newQueryString += '&' + variable + '=' + encodeURIComponent(variables[variable]);
        }
    }
    if (oldQueryString) {
        return url + newQueryString;
    } else {
        return url + '?' + newQueryString.slice(1);
    }
}

function createPostIframe(id) {
    var iframe = document.createElement("iframe");
    iframe.style.display = 'none';
    iframe.setAttribute('id', id);
    iframe.setAttribute('name', id);
    iframe.src = 'javascript:true';

    return iframe;
}

var Server = function () {
    function Server(_ref) {
        var root = _ref.root;

        _classCallCheck(this, Server);

        this._root = root;
    }

    /** Послать GET запрос к серверу ресурсов.
     * @param  {String} url
     * @param  {Object} params
     * @return {Function} promise(data)
     */


    _createClass(Server, [{
        key: "sendGetRequest",
        value: function sendGetRequest(url, params) {
            var _this = this;

            return new Promise(function (resolve, reject) {
                var requestUrl = _this._root + "/" + url;
                requestUrl = addQueryVariables(requestUrl, params);
                (0, _Request.sendCrossDomainJSONRequest)(requestUrl, function (data) {
                    return resolve(data);
                }, 'CallbackName', function (errors) {
                    return reject({ Status: 'error' });
                });
            });
        }

        /** Послать к серверу ресурсов запрос за картинкой.
         * @param  {String} url
         * @param  {Object} params
         * @return {Function} promise(image)
         */

    }, {
        key: "sendImageRequest",
        value: function sendImageRequest(url, params) {
            var requestUrl = this._root + "/" + url;
            requestUrl = addQueryVariables(requestUrl, params);

            var img = new Image();

            img.onload = function () {
                return resolve({ Status: 'ok', Result: img });
            };
            img.onerror = function (errors) {
                return reject(errors);
            };
            img.src = requestUrl;
        }

        /** Послать POST запрос к серверу ресурсов.
         * @param  {String} url
         * @param  {Object} params
         * @param  {HTMLFormElement} baseForm HTML Form, которая может быть использована как основа для посылки запроса (например, если нужно загрузить файл)
         * @return {Function} promise(data)
         */

    }, {
        key: "sendPostRequest",
        value: function sendPostRequest(url, params, baseForm) {
            var requestURL = this._root + "/" + url;
            return new Promise(function (resolve, reject) {
                var processResponse = function processResponse(response) {
                    if (response.Status !== 'ok') {
                        reject(response);
                    } else {
                        resolve(response);
                    }
                };

                try {

                    var id = "" + uniquePrefix + lastRequestId++;
                    var iframe = createPostIframe(id);
                    var parsedURL = parseUri(requestURL);
                    var origin = (parsedURL.protocol ? parsedURL.protocol + ":" : window.location.protocol) + ("//" + (parsedURL.host || window.location.host));
                    var originalFormAction = void 0;
                    var form = void 0;

                    requests[origin] = requests[origin] || {};
                    requests[origin][id] = { callback: processResponse, iframe: iframe };

                    if (baseForm) {
                        form = baseForm;
                        originalFormAction = form.getAttribute('action');
                        form.setAttribute('action', requestURL);
                        form.target = id;
                    } else {
                        form = document.createElement('form');
                        form.style.display = 'none';
                        form.setAttribute('enctype', 'multipart/form-data');
                        form.target = id;
                        form.setAttribute('method', 'POST');
                        form.setAttribute('action', requestURL);
                        form.id = id;
                    }

                    var hiddenParamsDiv = document.createElement("div");
                    hiddenParamsDiv.style.display = 'none';

                    var appendFormParam = function appendFormParam(paramName, paramValue) {
                        var input = document.createElement("input");
                        paramValue = typeof paramValue !== 'undefined' ? paramValue : '';

                        input.setAttribute('type', 'hidden');
                        input.setAttribute('name', paramName);
                        input.setAttribute('value', paramValue);

                        hiddenParamsDiv.appendChild(input);
                    };

                    for (var paramName in params) {
                        appendFormParam(paramName, params[paramName]);
                    }

                    appendFormParam('WrapStyle', 'message');
                    appendFormParam('CallbackName', id);

                    form.appendChild(hiddenParamsDiv);

                    if (!baseForm) document.body.appendChild(form);

                    document.body.appendChild(iframe);

                    form.submit();

                    if (baseForm) {
                        form.removeChild(hiddenParamsDiv);
                        if (originalFormAction !== null) form.setAttribute('action', originalFormAction);else form.removeAttribute('action');
                    } else {
                        form.parentNode.removeChild(form);
                    }
                } catch (e) {
                    reject(e);
                }
            });
        }
    }]);

    return Server;
}();

exports.Server = Server;

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DropdownMenuWidget = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(199);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DropdownMenuWidget = function () {
    function DropdownMenuWidget(options) {
        _classCallCheck(this, DropdownMenuWidget);

        this._view = document.createElement('div');
        this._view.classList.add('dropdownMenuWidget');
        this._view.innerHTML = options.items.map(this._renderItem.bind(this)).join('');
        var dropDown = this._view.querySelector('.dropdownMenuWidget-itemDropdown');
        if (dropDown) {
            dropDown.style.display = 'none';
        }
        var mouseTimeout = options.mouseTimeout || 100;
        var items = this._view.querySelectorAll('.dropdownMenuWidget-item');

        var _loop = function _loop(i) {
            var mouseIsOver = false;
            items[i].addEventListener('mouseenter', function (je) {
                mouseIsOver = true;
                setTimeout(function () {
                    if (mouseIsOver) {
                        var dd = je.target.querySelector('.dropdownMenuWidget-itemDropdown');
                        if (dd) {
                            dd.style.display = 'block';
                        }
                    }
                }, 100);
            });
            items[i].addEventListener('mouseleave', function (je) {
                mouseIsOver = false;
                var dd = je.target.querySelector('.dropdownMenuWidget-itemDropdown');
                if (dd) {
                    dd.style.display = 'none';
                }
            });
        };

        for (var i = 0; i < items.length; ++i) {
            _loop(i);
        }
    }

    _createClass(DropdownMenuWidget, [{
        key: '_renderDropdown',
        value: function _renderDropdown(_ref) {
            var className = _ref.className,
                id = _ref.id,
                link = _ref.link,
                newWindow = _ref.newWindow,
                icon = _ref.icon,
                title = _ref.title;

            return '<li class="dropdownMenuWidget-dropdownMenuItem' + (className ? ' ' + className : '') + '">\n            ' + (newWindow ? '<div class="ui-icon ui-icon-newwin dropdownMenuWidget-dropdownMenuIcon"></div>' : '') + '\n            <a\n                ' + (id ? 'id="' + id + '"' : '') + '\n                ' + (link ? 'href="' + link + '"' : 'href="javascript:void(0)"') + '\n                ' + (newWindow && link ? 'target="_blank"' : '') + '\n                class="dropdownMenuWidget-dropdownItemAnchor' + (newWindow ? ' dropdownMenuWidget-dropdownItemAnchor_newWindow' : '') + '"\n            >\n                ' + (icon ? '<img src="' + icon + '"/>' : '') + '\n                ' + (title ? '<span>' + title + '</span>' : '') + '\n            </a>\n        </li>';
        }
    }, {
        key: '_renderItem',
        value: function _renderItem(_ref2) {
            var className = _ref2.className,
                id = _ref2.id,
                link = _ref2.link,
                newWindow = _ref2.newWindow,
                icon = _ref2.icon,
                fonticon = _ref2.fonticon,
                title = _ref2.title,
                dropdown = _ref2.dropdown;

            return '<div class="dropdownMenuWidget-item' + (className ? ' ' + className : '') + '">\n        <a\n            ' + (id ? 'id="' + id + '"' : '') + '\n            ' + (link ? 'href="' + link + '"' : 'href="javascript:void(0)"') + '\n            ' + (newWindow && link ? 'target="_blank"' : '') + '\n            class="dropdownMenuWidget-itemAnchor' + (newWindow ? ' dropdownMenuWidget-itemAnchor_newWindow' : '') + '"\n        >\n            ' + (icon ? '<img src="' + icon + '" />' : '') + '\n            ' + (fonticon ? '<i class="' + fonticon + '"></i>' : '') + '\n            ' + (title ? '<span>' + title + '</span>' + (dropdown ? '<i class="icon-angle-down"></i>' : '') : '') + '\n        </a>\n        ' + (dropdown ? '<div class="dropdownMenuWidget-itemDropdown">\
                <ul class="dropdownMenuWidget-dropdownMenu">' + dropdown.map(this._renderDropdown.bind(this)).join('') + '</ul>\
            </div>' : '') + '\n        </div>';
        }
    }, {
        key: 'appendTo',
        value: function appendTo(placeholder) {
            placeholder.appendChild(this._view);
        }
    }]);

    return DropdownMenuWidget;
}();

exports.DropdownMenuWidget = DropdownMenuWidget;

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AlphaSlider = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Slider2 = __webpack_require__(18);

__webpack_require__(200);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AlphaSlider = function (_Slider) {
    _inherits(AlphaSlider, _Slider);

    function AlphaSlider(container) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, AlphaSlider);

        var _this = _possibleConstructorReturn(this, (AlphaSlider.__proto__ || Object.getPrototypeOf(AlphaSlider)).call(this, container, options));

        _this._options.order = _this._options.order || 'asc';
        _this._options.rgb = _this._options.rgb || { r: 0, g: 0, b: 0 };
        _this._container.classList.add('alpha-slider');
        _this._canvas = document.createElement('canvas');
        _this._container.querySelector('.slider-bar').appendChild(_this._canvas);
        _this._handleChange = _this._handleChange.bind(_this);
        _this.addEventListener('slide', _this._handleChange);
        _this.setRGB(_this._options.rgb);
        return _this;
    }

    _createClass(AlphaSlider, [{
        key: '_handleChange',
        value: function _handleChange(e) {
            var a = e.detail.value / (this._options.orientation === 'horizontal' ? this._width : this._height);
            var alpha = this._options.order === 'desc' ? 1.0 - a : a;
            if (e.detail.tip) {
                e.detail.tip.innerText = Math.round(alpha * 100);
            }

            // this.dispatchEvent (new CustomEvent('change', {detail: {value: alpha}}));

            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = { value: alpha };
            this.dispatchEvent(event);
        }
        // r (0,255), g (0,255), b (0,255)

    }, {
        key: '_renderHorizontal',
        value: function _renderHorizontal(r, g, b) {
            var ctx = this._canvas.getContext('2d');
            var imgData = ctx.getImageData(0, 0, this._canvas.width, this._canvas.height);
            var data = imgData.data;
            for (var i = 0; i < data.length; i += 4) {
                var a = i / 4 % imgData.width / imgData.width;
                data[i + 0] = r;
                data[i + 1] = g;
                data[i + 2] = b;
                data[i + 3] = Math.round(255 * (this._options.order === 'desc' ? 1.0 - a : a));
            }
            ctx.putImageData(imgData, 0, 0);
        }
        // r (0,255), g (0,255), b (0,255)

    }, {
        key: '_renderVertical',
        value: function _renderVertical(r, g, b) {
            var ctx = this._canvas.getContext('2d');
            var imgData = ctx.getImageData(0, 0, this._canvas.width, this._canvas.height);
            var data = imgData.data;
            for (var i = 0, j = 0, k = 0; i < data.length; i += 4, ++j) {
                if (j >= imgData.width) {
                    ++k;
                    j = 0;
                }
                var a = k / imgData.height;
                a = this._options.order === 'desc' ? 1.0 - a : a;
                data[i + 0] = r;
                data[i + 1] = g;
                data[i + 2] = b;
                data[i + 3] = Math.round(255 * a);
            }
            ctx.putImageData(imgData, 0, 0);
        }
    }, {
        key: 'setRGB',
        value: function setRGB(rgb) {
            this._options.rgb = rgb;
            switch (this._options.orientation) {
                case 'horizontal':
                    this._renderHorizontal(this._options.rgb.r, this._options.rgb.g, this._options.rgb.b);
                    break;
                case 'vertical':
                    this._renderVertical(this._options.rgb.r, this._options.rgb.g, this._options.rgb.b);
                    break;
            }
        }
    }]);

    return AlphaSlider;
}(_Slider2.Slider);

exports.AlphaSlider = AlphaSlider;

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ColorArea = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _EventTarget2 = __webpack_require__(9);

var _Color = __webpack_require__(8);

__webpack_require__(201);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorArea = function (_EventTarget) {
    _inherits(ColorArea, _EventTarget);

    function ColorArea(container, options) {
        _classCallCheck(this, ColorArea);

        var _this = _possibleConstructorReturn(this, (ColorArea.__proto__ || Object.getPrototypeOf(ColorArea)).call(this));

        _this._options = options || {};
        _this._options.hue = _this._options.hue || 0;
        _this._options.alpha = _this._options.alpha || 1.0;
        _this._container = container;
        _this._container.classList.add('color-area');
        _this._container.innerHTML = ['<div class="picker"></div>', '<canvas></canvas>'].join('');

        _this._canvas = _this._container.querySelector('.color-area canvas');
        _this._click = _this._click.bind(_this);
        _this._canvas.addEventListener('click', _this._click);
        _this._picker = _this._container.querySelector('.color-area .picker');
        _this._picker.style.top = '50%';
        _this._picker.style.left = '50%';
        var pickerRect = _this._picker.getBoundingClientRect();
        _this._halfWidth = Math.round(pickerRect.width / 2);
        _this._halfHeight = Math.round(pickerRect.height / 2);

        _this._start = _this._start.bind(_this);
        _this._move = _this._move.bind(_this);
        _this._stop = _this._stop.bind(_this);
        _this._moving = false;
        _this._offsetX = 0;
        _this._offsetY = 0;

        _this._picker.addEventListener('mousedown', _this._start);
        document.addEventListener('mousemove', _this._move);
        document.addEventListener('mouseup', _this._stop);

        // this._process = this._process.bind(this);
        // this._worker = new Worker('dist/process.js');
        // this._worker.addEventListener ('message', this._process);

        _this.setHue(_this._options.hue);
        return _this;
    }

    _createClass(ColorArea, [{
        key: '_click',
        value: function _click(e) {
            e.stopPropagation();
            var containerRect = this._container.getBoundingClientRect();
            // handle x
            var x = e.clientX - this._halfWidth - containerRect.left;
            this._picker.style.left = x + 'px';

            // handle y
            var y = e.clientY - this._halfHeight - containerRect.top;
            this._picker.style.top = y + 'px';

            var s = 1 - (x + this._halfWidth) / containerRect.width;
            var l = 1 - (y + this._halfHeight) / containerRect.height;

            // this.dispatchEvent (new CustomEvent('change', {detail: {h: this._options.hue, s: s, l: l}}));

            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = { h: this._options.hue, s: s, l: l };
            this.dispatchEvent(event);
        }
    }, {
        key: '_start',
        value: function _start(e) {
            e.stopPropagation();
            var pickerRect = this._picker.getBoundingClientRect();
            this._offsetX = e.clientX - pickerRect.left;
            this._offsetY = e.clientY - pickerRect.top;
            this._moving = true;
        }
    }, {
        key: '_move',
        value: function _move(e) {
            e.stopPropagation();
            if (this._moving) {
                document.body.style.cursor = 'pointer';
                var containerRect = this._container.getBoundingClientRect();
                // handle x
                var x = e.clientX - this._offsetX - containerRect.left;
                if (x <= -this._halfWidth) {
                    this._picker.style.left = -this._halfWidth + 'px';
                    x = -this._halfWidth;
                } else if (x >= containerRect.width - this._halfWidth) {
                    this._picker.style.left = containerRect.width - this._halfWidth + 'px';
                    x = containerRect.width - this._halfWidth;
                } else {
                    this._picker.style.left = x + 'px';
                }
                // handle y
                var y = e.clientY - this._offsetY - containerRect.top;
                if (y <= -this._halfHeight) {
                    this._picker.style.top = -this._halfHeight + 'px';
                    y = -this._halfHeight;
                } else if (y >= containerRect.height - this._halfHeight) {
                    this._picker.style.top = containerRect.height - this._halfHeight + 'px';
                    y = containerRect.height - this._halfHeight;
                } else {
                    this._picker.style.top = y + 'px';
                }
                var s = 1 - (x + this._halfWidth) / containerRect.width;
                var l = 1 - (y + this._halfHeight) / containerRect.height;
                var color = _Color.Color.hsl2rgb(0, 0, 1 - l);
                var r = color.r;
                var g = color.g;
                var b = color.b;
                this._picker.style.borderColor = 'rgb(' + [r, g, b].join(',') + ')';

                // this.dispatchEvent (new CustomEvent('change', {detail: {h: this._options.hue, s: s, l: l}}));

                var event = document.createEvent('Event');
                event.initEvent('change', false, false);
                event.detail = { h: this._options.hue, s: s, l: l };
                this.dispatchEvent(event);
            }
        }
    }, {
        key: '_stop',
        value: function _stop(e) {
            e.stopPropagation();
            document.body.style.cursor = 'default';
            this._offsetX = 0;
            this._offsetY = 0;
            this._moving = false;
        }
    }, {
        key: 'setHue',
        value: function setHue(h) {
            this._options.hue = h;
            var ctx = this._canvas.getContext('2d');
            var imgData = ctx.getImageData(0, 0, this._canvas.width, this._canvas.height);
            var width = imgData.width;
            var height = imgData.height;
            var alpha = this._options.alpha;
            var k = 0;
            var data = new Uint8ClampedArray(width * height * 4);
            for (var i = height - 1; i >= 0; --i) {
                for (var j = width - 1; j >= 0; --j) {
                    var s = j / width,
                        l = i / height;
                    var color = _Color.Color.hsl2rgb(h, s, l);
                    data[k + 0] = color.r;
                    data[k + 1] = color.g;
                    data[k + 2] = color.b;
                    data[k + 3] = Math.round(alpha * 255);
                    k += 4;
                }
            }
            imgData.data.set(data);
            ctx.putImageData(imgData, 0, 0);

            // this.dispatchEvent (new CustomEvent('change', {detail: this.hsl}));

            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = this.hsl;
            this.dispatchEvent(event);

            // this._worker.postMessage({
            //     width: this._canvas.width,
            //     height: this._canvas.height,
            //     alpha: this._options.alpha,
            //     hue: h
            // });        
        }
    }, {
        key: '_process',
        value: function _process(e) {
            var ctx = this._canvas.getContext('2d');
            var imgData = ctx.getImageData(0, 0, this._canvas.width, this._canvas.height);
            imgData.data.set(e.data);
            ctx.putImageData(imgData, 0, 0);

            // this.dispatchEvent (new CustomEvent('change', {detail: this.hsl}));

            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = this.hsl;
            this.dispatchEvent(event);
        }
    }, {
        key: 'setAlpha',
        value: function setAlpha(alpha) {
            this._options.alpha = alpha;
            this.setHue(this._options.hue);
        }
    }, {
        key: 'hsl',
        get: function get() {
            var pickerRect = this._picker.getBoundingClientRect();
            var containerRect = this._container.getBoundingClientRect();
            var s = 1 - (pickerRect.left + this._halfWidth - containerRect.left) / containerRect.width;
            var l = 1 - (pickerRect.top + this._halfHeight - containerRect.top) / containerRect.height;
            return { h: this._options.hue, s: s, l: l };
        },
        set: function set(_ref) {
            var h = _ref.h,
                s = _ref.s,
                l = _ref.l;

            var containerRect = this._container.getBoundingClientRect();
            this._picker.style.left = (1 - s) * containerRect.width - this._halfWidth + 'px';
            this._picker.style.top = (1 - l) * containerRect.height - this._halfHeight + 'px';
            this.setHue(h);
        }
    }]);

    return ColorArea;
}(_EventTarget2.EventTarget);

exports.ColorArea = ColorArea;

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ColorPicker = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _EventTarget2 = __webpack_require__(9);

var _Utils = __webpack_require__(19);

var _Color = __webpack_require__(8);

var _ColorSlider = __webpack_require__(174);

var _AlphaSlider = __webpack_require__(171);

var _ColorArea = __webpack_require__(172);

__webpack_require__(202);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorPicker = function (_EventTarget) {
    _inherits(ColorPicker, _EventTarget);

    function ColorPicker(container, options) {
        _classCallCheck(this, ColorPicker);

        var _this = _possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this));

        _this._container = container;
        _this._options = options || {};
        _this._options.colorMode = _this._options.colorMode || 'hex';
        _this._container.classList.add('color-picker');
        _this._container.innerHTML = ['<table>', '<tbody>', '<tr>', '<td>', '<span class="color-picker-sample"></span>', '</td>', '<td>', '<span class="color-picker-mode"></span>', '<input type="text" class="color-picker-box" />', '</td>', '<td>', '<span class="color-picker-box-button"></span>', '</td>', '<td>', '</td>', '</tr>', '<tr>', '<td colspan="3">', '<div class="color-picker-area"></div>', '</td>', '<td>', '<div class="color-picker-alpha"></div>', '</td>', '</tr>', '<tr>', '<td colspan="3">', '<div class="color-picker-slider"></div>', '</td>', '<td>', '</td>', '</tr>', '</tbody>', '</table>'].join('');

        _this._preventDefault = _this._preventDefault.bind(_this);
        _this._stopPropagation = _this._stopPropagation.bind(_this);
        _this._container.addEventListener('click', _this._preventDefault);
        _this._container.addEventListener('click', _this._stopPropagation);
        _this._container.addEventListener('dragstart', _this._preventDefault);
        _this._container.addEventListener('dragstart', _this._stopPropagation);
        // this._container.addEventListener('mousemove', this._preventDefault);;
        // this._container.addEventListener('mousemove', this._stopPropagation);

        _this._sample = _this._container.querySelector('.color-picker-sample');
        _this._box = _this._container.querySelector('.color-picker-box');
        _this._changeBox = _this._changeBox.bind(_this);
        _this._box.addEventListener('change', _this._changeBox);
        _this._box.addEventListener('focus', function (e) {
            return _this._box.select();
        });
        _this._avalue = _this._container.querySelector('.color-picker-alpha-value');
        _this._area = new _ColorArea.ColorArea(_this._container.querySelector('.color-picker-area'));
        _this._alpha = new _AlphaSlider.AlphaSlider(_this._container.querySelector('.color-picker-alpha'), {
            orientation: 'vertical', order: 'desc', useTip: true
        });
        _this._slider = new _ColorSlider.ColorSlider(_this._container.querySelector('.color-picker-slider'));
        _this._changeColor = _this._changeColor.bind(_this);
        _this._area.addEventListener('change', _this._changeColor);
        _this._changeHue = _this._changeHue.bind(_this);
        _this._slider.addEventListener('change', _this._changeHue);
        _this._changeAlpha = _this._changeAlpha.bind(_this);
        _this._alpha.addEventListener('change', _this._changeAlpha);
        _this._toggleColorMode = _this._toggleColorMode.bind(_this);
        _this._container.querySelector('.color-picker-box-button').addEventListener('click', _this._toggleColorMode);
        _this._mode = _this._container.querySelector('.color-picker-mode');
        _this._initialize();
        return _this;
    }

    _createClass(ColorPicker, [{
        key: '_preventDefault',
        value: function _preventDefault(e) {
            e.preventDefault();
        }
    }, {
        key: '_stopPropagation',
        value: function _stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: '_initialize',
        value: function _initialize() {
            var value = this._slider.value;
            this._alpha.setRGB(value.rgb);
            this._area.setHue(value.hsl.h);
            var hsl = this._area.hsl;
            var color = _Color.Color.hsl2rgb(hsl.h, hsl.s, hsl.l);
            var r = color.r;
            var g = color.g;
            var b = color.b;
            this._setBox(r, g, b);
        }
    }, {
        key: 'setColorMode',
        value: function setColorMode(mode) {
            this._options.colorMode = mode;
            var hsl = this._area.hsl;
            var color = _Color.Color.hsl2rgb(hsl.h, hsl.s, hsl.l);
            var r = color.r;
            var g = color.g;
            var b = color.b;
            this._setBox(r, g, b);
        }
    }, {
        key: '_changeBox',
        value: function _changeBox(e) {
            switch (this._options.colorMode) {
                case 'rgb':
                    this.value = _Color.Color.rgb2hex(this._box.value);
                    break;
                case 'hex':
                    this.value = this._box.value;
                    break;
                default:
                    break;
            }
        }
    }, {
        key: '_toggleColorMode',
        value: function _toggleColorMode(e) {
            switch (this._options.colorMode) {
                case 'rgb':
                    this._options.colorMode = 'hex';
                    break;
                default:
                case 'hex':
                    this._options.colorMode = 'rgb';
                    break;
            }
            var hsl = this._area.hsl;
            var color = _Color.Color.hsl2rgb(hsl.h, hsl.s, hsl.l);
            var r = color.r;
            var g = color.g;
            var b = color.b;
            this._setBox(r, g, b);
        }
        // rgb (255,255,255)

    }, {
        key: '_setBox',
        value: function _setBox(r, g, b) {
            var value = '';
            switch (this._options.colorMode) {
                case 'rgb':
                    value = [r, g, b].join(',');
                    this._mode.innerText = 'rgb';
                    this._sample.style.backgroundColor = 'rgb(' + value + ')';
                    break;
                default:
                case 'hex':
                    value = _Color.Color.rgb2hex(r, g, b);
                    this._mode.innerText = 'hex';
                    this._sample.style.backgroundColor = value;
                    break;
            }
            this._box.value = value;
        }
    }, {
        key: '_changeColor',
        value: function _changeColor(e) {
            var hsl = e.detail;
            var color = _Color.Color.hsl2rgb(hsl.h, hsl.s, hsl.l);
            var r = color.r;
            var g = color.g;
            var b = color.b;
            this._setBox(r, g, b);
            var a = this._alpha.value;

            // this.dispatchEvent (new CustomEvent('change', {detail: {hsl: hsl, rgb: {r: r, g: g, b: b, a: a}, hex: Color.rgb2hex(r,g,b)}}));

            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = { hsl: hsl, rgb: { r: r, g: g, b: b, a: a }, hex: _Color.Color.rgb2hex(r, g, b) };
            this.dispatchEvent(event);
        }
    }, {
        key: '_changeHue',
        value: function _changeHue(e) {
            this._alpha.setRGB(e.detail.rgb);
            this._area.setHue(e.detail.hsl.h);
        }
    }, {
        key: '_changeAlpha',
        value: function _changeAlpha(e) {
            this._area.setAlpha(e.detail.value);
        }
    }, {
        key: 'value',
        get: function get() {
            var hsl = this._area.hsl;
            var color = _Color.Color.hsl2rgb(hsl.h, hsl.s, hsl.l);
            var r = color.r;
            var g = color.g;
            var b = color.b;
            var a = this._alpha.value;
            return { rgb: { r: r, g: g, b: b, a: a }, hsl: hsl };
        },
        set: function set(hex) {
            var _Color$hex2rgb = _Color.Color.hex2rgb(hex),
                r = _Color$hex2rgb.r,
                g = _Color$hex2rgb.g,
                b = _Color$hex2rgb.b;

            this._slider.value = { r: r, g: g, b: b };
            this._area.hsl = _Color.Color.rgb2hsl(r, g, b);
            this._alpha.setRGB({ r: r, g: g, b: b });
        }
    }]);

    return ColorPicker;
}(_EventTarget2.EventTarget);

exports.ColorPicker = ColorPicker;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ColorSlider = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if ("value" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };

var _Slider2 = __webpack_require__(18);

var _Color = __webpack_require__(8);

__webpack_require__(203);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorSlider = function (_Slider) {
    _inherits(ColorSlider, _Slider);

    function ColorSlider(container) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, ColorSlider);

        var _this = _possibleConstructorReturn(this, (ColorSlider.__proto__ || Object.getPrototypeOf(ColorSlider)).call(this, container, options));

        _this._options.alpha = _this._options.alpha || 1.0;
        _this._options.hue = _this._options.hue || 0;
        _this._options.saturation = _this._options.saturation || 1.0;
        _this._options.lightness = _this._options.lightness || 0.5;
        _this._container.classList.add('color-slider');
        _this._canvas = document.createElement('canvas');
        _this._container.querySelector('.slider-bar').appendChild(_this._canvas);
        switch (_this._options.orientation) {
            case 'horizontal':
                _this._renderHorizontal(_this._options.alpha);
                break;
            case 'vertical':
                _this._renderVertical(_this._options.alpha);
                break;
        }
        _this._handleChange = _this._handleChange.bind(_this);
        _this.addEventListener('slide', _this._handleChange);
        return _this;
    }

    _createClass(ColorSlider, [{
        key: '_handleChange',
        value: function _handleChange(e) {
            this._options.hue = Math.round(e.detail.value * 360 / (this._options.orientation === 'horizontal' ? this._width : this._height));

            // this.dispatchEvent (new CustomEvent('change', {detail: this.value}));

            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = this.value;
            this.dispatchEvent(event);
        }
    }, {
        key: '_renderHorizontal',
        value: function _renderHorizontal(alpha) {
            var ctx = this._canvas.getContext('2d');
            var imgData = ctx.createImageData(this._canvas.width, this._canvas.height);
            var data = imgData.data;
            for (var i = 0; i < data.length; i += 4) {
                var h = i / 4 % imgData.width * 360 / imgData.width;
                var color = _Color.Color.hsl2rgb(h, this._options.saturation, this._options.lightness);
                var r = color.r;
                var g = color.g;
                var b = color.b;
                var a = Math.round(alpha * 255);
                data[i + 0] = r;
                data[i + 1] = g;
                data[i + 2] = b;
                data[i + 3] = a;
            }
            ctx.putImageData(imgData, 0, 0);
        }
    }, {
        key: '_renderVertical',
        value: function _renderVertical(alpha) {
            var ctx = this._canvas.getContext('2d');
            var imgData = ctx.createImageData(this._canvas.width, this._canvas.height);
            var data = imgData.data;
            for (var i = 0; i < data.length; i += 4) {
                var h = Math.floor(i / 4 / imgData.width) * 360 / imgData.height;
                var color = _Color.Color.hsl2rgb(h, this._options.saturation, this._options.lightness);
                var r = color.r;
                var g = color.g;
                var b = color.b;
                var a = Math.round(alpha * 255);
                data[i + 0] = r;
                data[i + 1] = g;
                data[i + 2] = b;
                data[i + 3] = a;
            }
            ctx.putImageData(imgData, 0, 0);
        }
        // a (1)

    }, {
        key: 'alpha',
        set: function set(a) {
            this._options.alpha = a;
            switch (this._options.orientation) {
                case 'horizontal':
                    this._renderHorizontal(this._options.alpha);
                    break;
                case 'vertical':
                    this._renderVertical(this._options.alpha);
                    break;
            }
        }
        // rgb (255,255,255), hsl(360,1,1)

    }, {
        key: 'value',
        get: function get() {
            var color = _Color.Color.hsl2rgb(this._options.hue, this._options.saturation, this._options.lightness);
            var r = color.r;
            var g = color.g;
            var b = color.b;
            return {
                rgb: {
                    r: r,
                    g: g,
                    b: b
                },
                hsl: {
                    h: this._options.hue,
                    s: this._options.saturation,
                    l: this._options.lightness
                }
            };
        },
        set: function set(_ref) {
            var r = _ref.r,
                g = _ref.g,
                b = _ref.b;

            var _Color$rgb2hsl = _Color.Color.rgb2hsl(r, g, b),
                h = _Color$rgb2hsl.h;

            this._options.hue = h;
            _set(ColorSlider.prototype.__proto__ || Object.getPrototypeOf(ColorSlider.prototype), 'value', Math.round((this._options.orientation === 'horizontal' ? this._width : this._height) * h / 360), this);
        }
    }]);

    return ColorSlider;
}(_Slider2.Slider);

exports.ColorSlider = ColorSlider;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventTarget = function () {
    function EventTarget() {
        _classCallCheck(this, EventTarget);

        this.listeners = {};
    }

    _createClass(EventTarget, [{
        key: "addEventListener",
        value: function addEventListener(type, callback) {
            if (!(type in this.listeners)) {
                this.listeners[type] = [];
            }
            this.listeners[type].push(callback);
        }
    }, {
        key: "removeEventListener",
        value: function removeEventListener(type, callback) {
            if (!(type in this.listeners)) {
                return;
            }
            var stack = this.listeners[type];
            for (var i = 0, l = stack.length; i < l; i++) {
                if (stack[i] === callback) {
                    stack.splice(i, 1);
                    return this.removeEventListener(type, callback);
                }
            }
        }
    }, {
        key: "dispatchEvent",
        value: function dispatchEvent(event) {
            if (!(event.type in this.listeners)) {
                return;
            }
            var stack = this.listeners[event.type];
            // event.target = this;
            for (var i = 0, l = stack.length; i < l; i++) {
                stack[i].call(this, event);
            }
        }
    }]);

    return EventTarget;
}();

exports.EventTarget = EventTarget;

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Tristate = function () {
	function Tristate(target, items) {
		_classCallCheck(this, Tristate);

		this._target = target;
		this._items = items;
		this._handleClick = this._handleClick.bind(this);
		this.update = this.update.bind(this);
		this._target.addEventListener('click', this._handleClick);
		this._attachEvents(this._items);
		this.state = this._items;
	}

	_createClass(Tristate, [{
		key: '_handleClick',
		value: function _handleClick() {
			var state = this._target.checked;
			for (var i = 0; i < this._items.length; ++i) {
				var checked = this._items[i].checked;
				if (checked != state) {
					this._items[i].click();
				}
			}
		}
	}, {
		key: '_attachEvents',
		value: function _attachEvents(items) {
			for (var i = 0; i < items.length; ++i) {
				items[i].addEventListener('click', this.update);
			}
		}
	}, {
		key: 'update',
		value: function update() {
			if (this._items.length > 1) {
				var _state = this.state,
				    indeterminate = _state.indeterminate,
				    checked = _state.checked;

				this._target.indeterminate = indeterminate;
				if (!indeterminate) {
					this._target.checked = checked;
				}
			}
		}
	}, {
		key: 'state',
		set: function set(items) {
			this._items = items;
			this._attachEvents(this._items);
			this.update();
		},
		get: function get() {
			var checked = this._items[0].checked;
			for (var i = 1; i < this._items.length; i++) {
				if (this._items[i].checked != checked) {
					return { indeterminate: true };
				}
			}
			return { indeterminate: false, checked: checked };
		}
	}]);

	return Tristate;
}();

exports.Tristate = Tristate;

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventTarget = function () {
    function EventTarget() {
        _classCallCheck(this, EventTarget);

        this.listeners = {};
    }

    _createClass(EventTarget, [{
        key: "addEventListener",
        value: function addEventListener(type, callback) {
            if (!(type in this.listeners)) {
                this.listeners[type] = [];
            }
            this.listeners[type].push(callback);
        }
    }, {
        key: "removeEventListener",
        value: function removeEventListener(type, callback) {
            if (!(type in this.listeners)) {
                return;
            }
            var stack = this.listeners[type];
            for (var i = 0, l = stack.length; i < l; i++) {
                if (stack[i] === callback) {
                    stack.splice(i, 1);
                    return this.removeEventListener(type, callback);
                }
            }
        }
    }, {
        key: "dispatchEvent",
        value: function dispatchEvent(event) {
            if (!(event.type in this.listeners)) {
                return;
            }
            var stack = this.listeners[event.type];
            // event.target = this;
            for (var i = 0, l = stack.length; i < l; i++) {
                stack[i].call(this, event);
            }
        }
    }]);

    return EventTarget;
}();

exports.EventTarget = EventTarget;

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventTarget = function () {
    function EventTarget() {
        _classCallCheck(this, EventTarget);

        this.listeners = {};
    }

    _createClass(EventTarget, [{
        key: "addEventListener",
        value: function addEventListener(type, callback) {
            if (!(type in this.listeners)) {
                this.listeners[type] = [];
            }
            this.listeners[type].push(callback);
        }
    }, {
        key: "removeEventListener",
        value: function removeEventListener(type, callback) {
            if (!(type in this.listeners)) {
                return;
            }
            var stack = this.listeners[type];
            for (var i = 0, l = stack.length; i < l; i++) {
                if (stack[i] === callback) {
                    stack.splice(i, 1);
                    return this.removeEventListener(type, callback);
                }
            }
        }
    }, {
        key: "dispatchEvent",
        value: function dispatchEvent(event) {
            if (!(event.type in this.listeners)) {
                return;
            }
            var stack = this.listeners[event.type];
            // event.target = this;
            for (var i = 0, l = stack.length; i < l; i++) {
                stack[i].call(this, event);
            }
        }
    }]);

    return EventTarget;
}();

exports.EventTarget = EventTarget;

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.RangeWidget = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if ("value" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };

var _SliderWidget2 = __webpack_require__(180);

__webpack_require__(210);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RangeWidget = function (_SliderWidget) {
    _inherits(RangeWidget, _SliderWidget);

    function RangeWidget(container) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { mode: 'integer' };

        _classCallCheck(this, RangeWidget);

        var _this = _possibleConstructorReturn(this, (RangeWidget.__proto__ || Object.getPrototypeOf(RangeWidget)).call(this, container, options));

        _this.options.mode = _this.options.mode || 'integer';
        if (!_this._container.classList.contains('range-widget')) {
            _this._container.classList.add('range-widget');
            var html = '<div class="range-widget-content">\n                <input type="text" value="" />\n                <i>-</i>\n                <input type="text" value="" />\n            </div>';
            _this._bar.insertAdjacentHTML('beforebegin', html);
            _this._leftInput = _this._container.querySelector('.range-widget-content input:first-child');
            _this._rightInput = _this._container.querySelector('.range-widget-content input:last-child');
            _this._handleLeftInput = _this._handleLeftInput.bind(_this);
            _this._handleRightInput = _this._handleRightInput.bind(_this);
            _this._handleRange = _this._handleRange.bind(_this);
            _this._leftInput.addEventListener('change', _this._handleLeftInput);
            _this._leftInput.addEventListener('focus', function (e) {
                return _this._leftInput.select();
            });
            _this._rightInput.addEventListener('change', _this._handleRightInput);
            _this._rightInput.addEventListener('focus', function (e) {
                return _this._rightInput.select();
            });
            _this.addEventListener('change', _this._handleRange);
            _this.values = [_this.options.min, _this.options.max];
        }
        return _this;
    }

    _createClass(RangeWidget, [{
        key: '_handleLeftInput',
        value: function _handleLeftInput(e) {
            var lo = this.options.mode === 'integer' ? parseInt(this._leftInput.value, 10) : parseFloat(this._leftInput.value);
            var hi = this.options.mode === 'integer' ? parseInt(this._rightInput.value, 10) : parseFloat(this._rightInput.value);
            if (!isNaN(lo) && this.options.min <= lo && lo <= this.options.max) {
                this.values = [lo, hi];
            } else {
                this._leftInput.value = this.options.mode === 'integer' ? Math.round(this._lo) : this._lo.toFixed(1);
            }

            // this.dispatchEvent(new CustomEvent('change', { detail: [this._lo, this._hi]}));

            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = [this._lo, this._hi];
            this.dispatchEvent(event);

            event.initEvent('stop', false, false);
            event.detail = [this._lo, this._hi];
            this.dispatchEvent(event);
        }
    }, {
        key: '_handleRightInput',
        value: function _handleRightInput(e) {
            var lo = this.options.mode === 'integer' ? parseInt(this._leftInput.value, 10) : parseFloat(this._leftInput.value);
            var hi = this.options.mode === 'integer' ? parseInt(this._rightInput.value, 10) : parseFloat(this._rightInput.value);
            if (!isNaN(hi) && this.options.min <= hi && hi <= this.options.max) {
                this.values = [lo, hi];
            } else {
                this._rightInput.value = this.options.mode === 'integer' ? Math.round(this._hi) : this._hi.toFixed(1);
            }

            // this.dispatchEvent(new CustomEvent('change', { detail: [this._lo, this._hi]}));

            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = [this._lo, this._hi];
            this.dispatchEvent(event);

            event.initEvent('stop', false, false);
            event.detail = [this._lo, this._hi];
            this.dispatchEvent(event);
        }
    }, {
        key: '_handleRange',
        value: function _handleRange(e) {
            var _e$detail = _slicedToArray(e.detail, 2),
                lo = _e$detail[0],
                hi = _e$detail[1];

            this._leftInput.value = this.options.mode === 'integer' ? Math.round(lo) : lo.toFixed(1);
            this._rightInput.value = this.options.mode === 'integer' ? Math.round(hi) : hi.toFixed(1);
        }
    }, {
        key: 'values',
        set: function set(_ref) {
            var _ref2 = _slicedToArray(_ref, 2),
                lo = _ref2[0],
                hi = _ref2[1];

            if (!isNaN(lo) && this.options.min <= lo && lo <= this.options.max && !isNaN(hi) && this.options.min <= hi && hi <= this.options.max) {
                _set(RangeWidget.prototype.__proto__ || Object.getPrototypeOf(RangeWidget.prototype), 'values', [lo, hi], this);
            }
            this._leftInput.value = this.options.mode === 'integer' ? Math.round(this._lo) : this._lo.toFixed(1);
            this._rightInput.value = this.options.mode === 'integer' ? Math.round(this._hi) : this._hi.toFixed(1);

            // this.dispatchEvent(new CustomEvent('change', { detail: [lo, hi]}));
        },
        get: function get() {
            return _get(RangeWidget.prototype.__proto__ || Object.getPrototypeOf(RangeWidget.prototype), 'values', this);
        }
    }]);

    return RangeWidget;
}(_SliderWidget2.SliderWidget);

exports.RangeWidget = RangeWidget;

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.SliderWidget = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(211);

var _EventTarget2 = __webpack_require__(181);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SliderWidget = function (_EventTarget) {
    _inherits(SliderWidget, _EventTarget);

    function SliderWidget(container) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { min: 0, max: 100 };

        _classCallCheck(this, SliderWidget);

        var _this = _possibleConstructorReturn(this, (SliderWidget.__proto__ || Object.getPrototypeOf(SliderWidget)).call(this));

        _this._container = container;
        _this._current = null;
        _this.options = options;
        _this.stopPropagation = _this.stopPropagation.bind(_this);
        _this.preventDefault = _this.preventDefault.bind(_this);
        _this._slide = _this._slide.bind(_this);
        _this._stop = _this._stop.bind(_this);
        if (!_this._container.classList.contains('slider-widget')) {
            _this._container.classList.add('slider-widget');
            _this._container.classList.add('no-select');
            _this._container.innerHTML = '<div class="slider-widget-bar">\n                    <div class="slider-widget-range">\n                        <i class="slider-widget-tick-left"></i>\n                        <i class="slider-widget-tick-right"></i>\n                    </div>\n                </div>';
            _this._bar = _this._container.querySelector('.slider-widget-bar');
            _this._leftTick = _this._container.querySelector('.slider-widget-tick-left');
            _this._rightTick = _this._container.querySelector('.slider-widget-tick-right');
            _this._range = _this._container.querySelector('.slider-widget-range');
            _this._attachEvents();
        }
        return _this;
    }

    _createClass(SliderWidget, [{
        key: '_reset',
        value: function _reset() {
            // const {width, height} = this._leftTick.getBoundingClientRect();
            // this._leftTick.style.left = `-${width}px`;
            // this._rightTick.style.left = `${width}px`;
        }
    }, {
        key: 'stopPropagation',
        value: function stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: 'preventDefault',
        value: function preventDefault(e) {
            e.preventDefault();
        }
    }, {
        key: '_attachEvents',
        value: function _attachEvents() {
            // this._container.addEventListener('dragstart', this.preventDefault);
            this._leftTick.addEventListener('mousedown', this.stopPropagation);
            this._leftTick.addEventListener('mousedown', this.preventDefault);
            this._leftTick.addEventListener('mousedown', this._start.bind(this, 'left'));
            this._rightTick.addEventListener('mousedown', this.stopPropagation);
            this._rightTick.addEventListener('mousedown', this.preventDefault);
            this._rightTick.addEventListener('mousedown', this._start.bind(this, 'right'));
            // document.body.addEventListener('mouseup', this.stopPropagation);
            // document.body.addEventListener('mouseup', this.preventDefault);
            document.body.addEventListener('mouseup', this._stop);
            document.body.addEventListener('mousemove', this._slide);
            this._handleBarClick = this._handleBarClick.bind(this);
            this._bar.addEventListener('click', this.stopPropagation);
            this._bar.addEventListener('click', this.preventDefault);
            this._bar.addEventListener('click', this._handleBarClick);
        }
    }, {
        key: '_handleBarClick',
        value: function _handleBarClick(e) {
            var x = e.clientX;
            var leftRect = this._leftTick.getBoundingClientRect();
            var rightRect = this._rightTick.getBoundingClientRect();
            if (x < leftRect.left || leftRect.right < x && x < rightRect.left || rightRect.right < x) {
                var _bar$getBoundingClien = this._bar.getBoundingClientRect(),
                    left = _bar$getBoundingClien.left,
                    right = _bar$getBoundingClien.right;

                var rangeRect = this._range.getBoundingClientRect();
                var min = rangeRect.left + leftRect.width;
                var max = rangeRect.right - rightRect.width;
                if (Math.abs(x - min) < Math.abs(max - x)) {
                    // left tick
                    if (x > left + leftRect.width) {
                        this._range.style.left = x - left - leftRect.width + 'px';
                        this._range.style.width = rangeRect.right - x + leftRect.width + 'px';
                    } else {
                        // leftmost
                        this._range.style.left = 0 + 'px';
                        this._range.style.width = rangeRect.right - left + 'px';
                    }
                } else {
                    // right tick
                    if (x < right - rightRect.width) {
                        this._range.style.width = x - rangeRect.left + rightRect.width + 'px';
                    } else {
                        // rightmost
                        this._range.style.width = right - rangeRect.left + 'px';
                    }
                }
                this._updateBounds();

                // this.dispatchEvent(new CustomEvent('change', { detail: [this._lo, this._hi]}));

                var event = document.createEvent('Event');
                event.initEvent('change', false, false);
                event.detail = [this._lo, this._hi];
                this.dispatchEvent(event);
            }
        }
    }, {
        key: '_start',
        value: function _start(tick, e) {
            if (this._current === null) {
                this._current = tick;
                switch (this._current) {
                    case 'left':
                        var leftRect = this._leftTick.getBoundingClientRect();
                        this._offset = e.clientX - leftRect.left;
                        break;
                    case 'right':
                        var rightRect = this._rightTick.getBoundingClientRect();
                        this._offset = rightRect.right - e.clientX;
                        break;
                }
                var event = document.createEvent('Event');
                event.initEvent('start', false, false);
                event.detail = [this._lo, this._hi];
                this.dispatchEvent(event);
            }
        }
    }, {
        key: '_stop',
        value: function _stop(e) {
            if (this._current !== null) {
                this._current = null;
                this._offset = 0;

                var event = document.createEvent('Event');
                event.initEvent('stop', false, false);
                event.detail = [this._lo, this._hi];
                this.dispatchEvent(event);
            }
        }
    }, {
        key: '_slide',
        value: function _slide(e) {
            if (this._current) {
                switch (this._current) {
                    case 'left':
                        this._handleLeftSlide(e.clientX - this._offset);
                        break;
                    case 'right':
                        this._handleRightSlide(e.clientX + this._offset);
                        break;
                    default:
                        break;
                }
            }
        }
    }, {
        key: '_handleLeftSlide',
        value: function _handleLeftSlide(x) {
            var leftRect = this._leftTick.getBoundingClientRect();
            var rightRect = this._rightTick.getBoundingClientRect();
            var max = this._range.getBoundingClientRect().right;

            var _bar$getBoundingClien2 = this._bar.getBoundingClientRect(),
                left = _bar$getBoundingClien2.left;

            var totalWidth = leftRect.width + rightRect.width;
            if (x < max - totalWidth) {
                if (x < left) {
                    // min
                    this._range.style.left = 0 + 'px';
                    this._range.style.width = max - left + 'px';
                } else {
                    this._range.style.left = x - left + 'px';
                    this._range.style.width = max - x + 'px';
                }
            } else {
                // rightmost
                this._range.style.left = max - totalWidth - left + 'px';
                this._range.style.width = totalWidth + 'px';
            }
            this._updateBounds();

            // this.dispatchEvent(new CustomEvent('change', { detail: [this._lo, this._hi]}));

            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = [this._lo, this._hi];
            this.dispatchEvent(event);
        }
    }, {
        key: '_handleRightSlide',
        value: function _handleRightSlide(x) {
            var leftRect = this._leftTick.getBoundingClientRect();
            var rightRect = this._rightTick.getBoundingClientRect();
            var min = this._range.getBoundingClientRect().left;

            var _bar$getBoundingClien3 = this._bar.getBoundingClientRect(),
                left = _bar$getBoundingClien3.left,
                right = _bar$getBoundingClien3.right;

            var totalWidth = leftRect.width + rightRect.width;
            if (x > min + totalWidth) {
                if (x > right) {
                    // max
                    this._range.style.width = right - min + 'px';
                } else {
                    this._range.style.width = x - min + 'px';
                }
            } else {
                // leftmost            
                this._range.style.width = totalWidth + 'px';
            }
            this._updateBounds();

            // this.dispatchEvent(new CustomEvent('change', { detail: [this._lo, this._hi]}));

            var event = document.createEvent('Event');
            event.initEvent('change', false, false);
            event.detail = [this._lo, this._hi];
            this.dispatchEvent(event);
        }
    }, {
        key: '_updateBounds',
        value: function _updateBounds() {
            var _bar$getBoundingClien4 = this._bar.getBoundingClientRect(),
                width = _bar$getBoundingClien4.width,
                left = _bar$getBoundingClien4.left;

            var leftRect = this._leftTick.getBoundingClientRect();
            var rightRect = this._rightTick.getBoundingClientRect();

            var k = (this.options.max - this.options.min) / (width - leftRect.width - rightRect.width);
            var lo = leftRect.left - left;
            this._lo = this.options.min + (this.options.mode === 'float' ? lo * k : Math.round(lo * k));
            var hi = rightRect.left - rightRect.width - left;
            this._hi = this.options.min + (this.options.mode === 'float' ? hi * k : Math.round(hi * k));
        }
    }, {
        key: 'values',
        set: function set(_ref) {
            var _ref2 = _slicedToArray(_ref, 2),
                lo = _ref2[0],
                hi = _ref2[1];

            if (this.options.min <= lo && lo <= hi && hi <= this.options.max) {
                var _bar$getBoundingClien5 = this._bar.getBoundingClientRect(),
                    width = _bar$getBoundingClien5.width,
                    left = _bar$getBoundingClien5.left;

                var leftRect = this._leftTick.getBoundingClientRect();
                var rightRect = this._rightTick.getBoundingClientRect();

                this._lo = lo;
                this._hi = hi;

                var k = (width - leftRect.width - rightRect.width) / (this.options.max - this.options.min);
                this._range.style.left = Math.round((this._lo - this.options.min) * k) + 'px';
                this._range.style.width = Math.round((this._hi - this._lo) * k) + leftRect.width + rightRect.width + 'px';
            }
            // this.dispatchEvent(new CustomEvent('change', { detail: [lo, hi]}));
        },
        get: function get() {
            // let validate = (x,y) => this.options.min <= x && y <= this.options.max ? [x,y] : [this.options.min, this.options.max];
            // return validate(this._lo,this._hi);
            return [this._lo, this._hi];
        }
    }]);

    return SliderWidget;
}(_EventTarget2.EventTarget);

exports.SliderWidget = SliderWidget;

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EventTarget = function () {
    function EventTarget() {
        _classCallCheck(this, EventTarget);

        this.listeners = {};
    }

    _createClass(EventTarget, [{
        key: "addEventListener",
        value: function addEventListener(type, callback) {
            if (!(type in this.listeners)) {
                this.listeners[type] = [];
            }
            this.listeners[type].push(callback);
        }
    }, {
        key: "removeEventListener",
        value: function removeEventListener(type, callback) {
            if (!(type in this.listeners)) {
                return;
            }
            var stack = this.listeners[type];
            for (var i = 0, l = stack.length; i < l; i++) {
                if (stack[i] === callback) {
                    stack.splice(i, 1);
                    return this.removeEventListener(type, callback);
                }
            }
        }
    }, {
        key: "dispatchEvent",
        value: function dispatchEvent(event) {
            if (!(event.type in this.listeners)) {
                return;
            }
            var stack = this.listeners[event.type];
            // event.target = this;
            for (var i = 0, l = stack.length; i < l; i++) {
                stack[i].call(this, event);
            }
        }
    }]);

    return EventTarget;
}();

exports.EventTarget = EventTarget;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function copy(source) {
    switch (typeof source === 'undefined' ? 'undefined' : _typeof(source)) {
        case 'number':
        case 'string':
        case 'function':
        default:
            return source;
        case 'object':
            if (source === null) {
                return null;
            } else if (Array.isArray(source)) {
                return source.map(function (item) {
                    return copy(item);
                });
            } else if (source instanceof Date) {
                return source;
            } else {
                return Object.keys(source).reduce(function (a, k) {
                    a[k] = copy(source[k]);
                    return a;
                }, {});
            }
    }
}

function extend(target, source) {
    if (target === source) {
        return target;
    } else {
        return Object.keys(source).reduce(function (a, k) {
            var value = source[k];
            if (_typeof(a[k]) === 'object' && k in a) {
                a[k] = extend(a[k], value);
            } else {
                a[k] = copy(value);
            }
            return a;
        }, copy(target));
    }
}

exports.copy = copy;
exports.extend = extend;

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Tristate = function () {
	function Tristate(target, items) {
		_classCallCheck(this, Tristate);

		this._target = target;
		this._items = items;
		this._handleClick = this._handleClick.bind(this);
		this.update = this.update.bind(this);
		this._target.addEventListener('click', this._handleClick);
		this._attachEvents(this._items);
		this.state = this._items;
	}

	_createClass(Tristate, [{
		key: '_handleClick',
		value: function _handleClick() {
			var state = this._target.checked;
			for (var i = 0; i < this._items.length; ++i) {
				var checked = this._items[i].checked;
				if (checked != state) {
					this._items[i].click();
				}
			}
		}
	}, {
		key: '_attachEvents',
		value: function _attachEvents(items) {
			for (var i = 0; i < items.length; ++i) {
				items[i].addEventListener('click', this.update);
			}
		}
	}, {
		key: 'update',
		value: function update() {
			if (this._items.length > 1) {
				var _state = this.state,
				    indeterminate = _state.indeterminate,
				    checked = _state.checked;

				this._target.indeterminate = indeterminate;
				if (!indeterminate) {
					this._target.checked = checked;
				}
			}
		}
	}, {
		key: 'state',
		set: function set(items) {
			this._items = items;
			this._attachEvents(this._items);
			this.update();
		},
		get: function get() {
			var checked = this._items[0].checked;
			for (var i = 1; i < this._items.length; i++) {
				if (this._items[i].checked != checked) {
					return { indeterminate: true };
				}
			}
			return { indeterminate: false, checked: checked };
		}
	}]);

	return Tristate;
}();

exports.Tristate = Tristate;

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

__webpack_require__(156);

__webpack_require__(158);

__webpack_require__(157);

__webpack_require__(159);

var _Translations = __webpack_require__(2);

var _SearchOptions = __webpack_require__(146);

var _ImageDetails = __webpack_require__(12);

var _DrawnObjects = __webpack_require__(11);

var _Cart = __webpack_require__(10);

var _ResultList = __webpack_require__(13);

var _FavoritesList = __webpack_require__(142);

var _Satellites = __webpack_require__(6);

var _AuthWidget = __webpack_require__(150);

var _AuthManager = __webpack_require__(14);

var _ResourceServer = __webpack_require__(15);

var _api = __webpack_require__(149);

var _Panel = __webpack_require__(5);

var _RequestAdapter = __webpack_require__(144);

var _ResultsController = __webpack_require__(145);

var _TabFactory = __webpack_require__(148);

var _Utils = __webpack_require__(1);

var _NotificationWidget = __webpack_require__(155);

var _LoaderWidget = __webpack_require__(154);

var _ShapeLoader = __webpack_require__(147);

var _Extensions = __webpack_require__(7);

var _GmxLayerDataProvider = __webpack_require__(143);

var _LanguageWidget = __webpack_require__(152);

var _About = __webpack_require__(141);

__webpack_require__(162);

// import { Progress } from 'app/Progress/Progress.js';
// import { FilterControl } from 'app/FilterControl/FilterControl.js';

__webpack_require__(160);
var IconSidebarControl = __webpack_require__(151);

__webpack_require__(161);
var IconLayers = __webpack_require__(153);

// import './animate.css';


// window.L.Icon.Default.imagePath = './dist/';

window.DIALOG_PLACE = { left: 600, top: 150 };
window.RESULT_MAX_COUNT = 1000;
window.MAX_CART_SIZE = 200;
window.MAX_UPLOAD_POINTS = 1000;
window.Catalog.VERSION = '2.2.2';
window.Catalog.VERSION_DATE = new Date(2018, 1, 15);

window.Catalog.translations = window.Catalog.translations || new _Translations.Translations();
var T = window.Catalog.translations;

var DEFAULT_LANGUAGE = 'rus';
var NON_EDIT_LINE_STYLE = {
    fill: false,
    weight: 2,
    opacity: 1
};

var ignoreResults = false;

T.addText('rus', {
    aoi: 'Область интереса',
    controls: {
        point: 'Маркер',
        polygon: 'Полигон',
        polyline: 'Линия',
        print: 'Печать',
        permalink: 'Постоянная ссылка',
        rectangle: 'Прямоугольник',
        download: 'Скачать',
        upload: 'Загрузить',
        zoom: 'Увеличение',
        search: 'Поиск по кадастру, адресам, координатам'
    },
    results: {
        title: 'Найденные снимки',
        favorites: 'Корзина',
        sceneid: 'ID',
        date: 'Дата',
        satellite: 'Спутник',
        clouds: 'Обл.',
        angle: 'Угол',
        stereo: 'Стерео',
        clear: 'Очистить список',
        selected: 'Показывать выбранные / все',
        quicklooks: {
            select: 'Выбрать квиклуки',
            toggle: 'Показать / скрыть выбранные квиклуки',
            cart: 'Поместить видимые в корзину'
        },
        download: 'Количество найденных снимков превышает установленный порог.<br/>Хотите скачать их в виде шейп-файла?',
        change: 'Количество найденных снимков превышает установленный порог.<br/>Измените критерий поиска.'
    },
    favorites: {
        limit: '\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u043E\u0435 \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0441\u043D\u0438\u043C\u043A\u043E\u0432 \u0432 \u043A\u043E\u0440\u0437\u0438\u043D\u0435 - ' + window.MAX_CART_SIZE,
        delete: 'Удалить выделенные'
    },
    boolean: {
        true: 'Да',
        false: 'Нет'
    },
    units: {
        m: 'м',
        km: 'км'
    },
    alerts: {
        title: 'Внимание',
        clear: 'Удалить найденные снимки?',
        cancel: 'Отмена',
        close: 'Закрыть',
        authenticate: 'Для оформления заказа необходимо:',
        ok: 'ОК',
        login: 'Войти в систему',
        clipboard: 'Копировать ссылку',
        permalink: 'Постоянная ссылка скопирована в буфер обмена',
        nothing: 'Ничего не найдено'
    },
    search: {
        title: 'Параметры поиска',
        action: 'Найти снимки'
    },
    cart: {
        add: 'Оформить заказ'
    },
    download: {
        type: 'Состав',
        file: 'Имя файла',
        borders: 'Границы поиска',
        results: 'Результаты поиска',
        cart: 'Корзина: контуры',
        quicklooks: 'Корзина: контуры и квиклуки',
        ok: 'Скачать',
        cancel: 'Отмена',
        noname: 'Без имени',
        noresults: 'Нет объектов для скачивания',
        empty: "Нет объектов",
        csv: 'Результаты поиска в формате csv'
    },
    errors: {
        permalink: 'Произошла ошибка при загрузке ссылки',
        upload: 'Произошла ошибка при загрузке файла',
        points: '\u0413\u0435\u043E\u043C\u0435\u0442\u0440\u0438\u044F \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u0442 \u0431\u043E\u043B\u0435\u0435 ' + window.MAX_UPLOAD_POINTS + ' \u0442\u043E\u0447\u0435\u043A'
    }
});

T.addText('eng', {
    aoi: 'Area of interest',
    controls: {
        point: 'Marker',
        polygon: 'Polygon',
        polyline: 'Polyline',
        print: 'Print',
        permalink: 'Permalink',
        rectangle: 'Rectangle',
        download: 'Download',
        upload: 'Upload',
        zoom: 'Zoom',
        search: 'Search by cadastre, address and coordinates'
    },
    results: {
        title: 'Found images',
        favorites: 'Cart',
        sceneid: 'ID',
        date: 'Date',
        satellite: 'Satellite',
        clouds: 'Clouds',
        angle: 'Angle',
        stereo: 'Stereo',
        controls: {
            print: 'Print',
            permalink: 'Permalink',
            zoom: 'Zoom'
        },
        clear: 'Clear results',
        selected: 'Show selected / all',
        quicklooks: {
            select: 'Select quicklooks',
            toggle: 'Show / hide selected quicklooks',
            cart: 'Add visible to cart'
        },
        download: 'Results exceed allowed items amount.<br/>Do you want to download them in a shape-file?',
        change: 'Results exceed allowed items amount.<br/>Change the criteria to limit the search.'
    },
    favorites: {
        limit: 'No more than ' + window.MAX_CART_SIZE + ' elements are allowed in the cart',
        delete: 'Remove selected'
    },
    boolean: {
        true: 'Yes',
        false: 'No'
    },
    units: {
        m: 'm',
        km: 'km'
    },
    alerts: {
        title: 'Warning',
        clear: 'Remove found images?',
        cancel: 'Cancel',
        close: 'Close',
        authenticate: 'To place order<br/>you need to login',
        ok: 'OK',
        login: 'Login',
        clipboard: 'Copy to to clipboard',
        permalink: 'Permalink saved to clipboard',
        nothing: 'Nothing found'
    },
    search: {
        title: 'Search options',
        action: 'Search'
    },
    cart: {
        add: 'Place an order'
    },
    download: {
        type: 'Download contents',
        file: 'File name',
        borders: 'Search borders',
        results: 'Results',
        cart: 'Cart: contours',
        quicklooks: 'Cart: contours and quicklooks',
        ok: 'Download',
        cancel: 'Cancel',
        noname: 'No name',
        noresults: 'No objects to download',
        empty: "Can't download. No objects",
        csv: 'Results as .csv'
    },
    errors: {
        permalink: 'Error while loading permalik',
        upload: 'Error while uploading file',
        points: 'Geometry contains more than ' + window.MAX_UPLOAD_POINTS + ' points'
    }
});

var mapContainer = document.getElementById('map');

var map = L.map(mapContainer, {
    center: new L.LatLng(55.634508, 37.433167),
    minZoom: 3,
    maxZoom: 17,
    zoom: 3,
    boxZoom: false,
    srs: 3857,
    skipTiles: 'All',
    ftc: 'osm',
    attributionControl: false,
    zoomControl: false,
    squareUnit: 'km2',
    distanceUnit: 'km',
    maxBounds: L.latLngBounds(L.latLng(-90, -180), L.latLng(90, 180))
});

map.options.svgSprite = false;

resize_map();

function resize_map() {
    var container = mapContainer;
    var bounds = document.body.getBoundingClientRect();
    var header = document.getElementById('header');
    var headerBounds = header.getBoundingClientRect();
    container.style.height = bounds.height - headerBounds.height + 'px';
    map.invalidateSize();
}

function load_locale(state) {
    return new Promise(function (resolve) {
        var s = localStorage.getItem('view_state');
        if (s) {
            var viewState = JSON.parse(s);
            T.setLanguage(viewState.lang || DEFAULT_LANGUAGE);
            L.gmxLocale.setLanguage(viewState.lang || DEFAULT_LANGUAGE);
        }
        resolve(state);
    });
}

function load_map(state) {
    return new Promise(function (resolve) {
        L.gmx.loadMap('1CB019F36D024831972F3029B724D7CA', {
            apiKey: 'Z2SSNR87N4', //'A07FEB777402A559A7DE8BC6CA7C2E96',
            leafletMap: map,
            srs: 3857,
            skipTiles: 'All',
            ftc: 'osm'
        }).then(function (gmxMap) {
            state.gmxMap = gmxMap;
            map.invalidateSize();
            resolve(state);
        });
    });
}

function init_baselayer_manager(state) {
    return new Promise(function (resolve) {
        map.gmxBaseLayersManager = new window.L.gmxBaseLayersManager(map);
        map.gmxBaseLayersManager.initDefaults({
            srs: 3857,
            skipTiles: 'All',
            ftc: 'osm'
        }).then(function () {
            return resolve(state);
        });
    });
}

function set_active_layer(state) {
    return new Promise(function (resolve) {
        var gmxMap = state.gmxMap;
        var baseLayers = gmxMap.properties.BaseLayers;
        var currentID = baseLayers[0];
        map.gmxBaseLayersManager.setActiveIDs(baseLayers).setCurrentID(currentID);
        map.addControl(new window.L.Control.gmxLayers(map.gmxBaseLayersManager, { hideBaseLayers: true }));
        resolve(state);
    });
}

var authPermalinkUrl = null;

function authenticate(state) {
    return new Promise(function (resolve) {
        window.Catalog.authManager = (0, _api.getAuthManager)();
        var authBaseUrl = location.protocol + '//' + location.host + location.pathname.substr(0, location.pathname.lastIndexOf('/'));
        window.Catalog.catalogResourceServer = new _ResourceServer.ResourceServer(window.Catalog.authManager, {
            id: 'Catalog',
            root: authBaseUrl
        });
        window.Catalog.gmxResourceServer = (0, _api.getResourceServer)('geomixer');
        window.Catalog.authWidget = new _AuthWidget.AuthWidget({ authManager: window.Catalog.authManager });
        window.Catalog.authContainer = document.getElementById('auth');
        window.Catalog.authWidget.appendTo(window.Catalog.authContainer);
        window.Catalog.authWidget.addEventListener('logout', function () {
            localStorage.setItem('view_state', JSON.stringify(get_state()));
            window.location.reload(true);
        });
        var dlgAuthContainer = (0, _Utils.create_container)();
        dlgAuthContainer.classList.add('auth-dialog');
        window.Catalog.dlgAuth = new _Panel.Panel(dlgAuthContainer, {
            id: 'auth.dialog',
            left: window.DIALOG_PLACE.left,
            top: window.DIALOG_PLACE.top,
            modal: true
        });
        window.Catalog.dlgAuth.hide();
        window.Catalog.dlgAuth.content.innerHTML = '' + T.getText('alerts.authenticate');
        window.Catalog.dlgAuth.footer.innerHTML = '<button class="dialog-login-button">' + T.getText('alerts.login') + '</button>';
        window.Catalog.dlgAuth.footer.querySelector('button').addEventListener('click', function (e) {
            if (!localStorage.getItem('view_state')) {
                localStorage.setItem('view_state', JSON.stringify(get_state()));
            }
            window.Catalog.authContainer.querySelector('.authWidget-loginButton').click();
        });
        resolve(state);
    });
}

function get_user(state) {
    return new Promise(function (resolve) {
        window.Catalog.authManager.getUserInfo().then(function (response) {
            var _response$Result = response.Result,
                ID = _response$Result.ID,
                FullName = _response$Result.FullName,
                Email = _response$Result.Email,
                Phone = _response$Result.Phone,
                Organization = _response$Result.Organization;

            window.Catalog.userInfo = {
                IsAuthenticated: true,
                ID: ID,
                FullName: FullName,
                Email: Email,
                Phone: Phone,
                Organization: Organization
            };
            resolve(state);
        }).catch(function (e) {
            console.log(e);
            window.Catalog.userInfo = { IsAuthenticated: false };
            resolve(state);
        });
    });
}

function check_access(state) {
    return new Promise(function (resolve) {
        window.Catalog.gmxResourceServer.sendGetRequest('Layer/GetLayerInfo.ashx', { layerID: '9077D16CFE374967A8C57C78095F34EA' }).then(function (response) {
            if (response.Status == 'ok' && response.Result && response.Result.LayerID == '9077D16CFE374967A8C57C78095F34EA') {
                window.Catalog.userInfo.Role = 'scanex';
            }
            resolve(state);
        }).catch(function (e) {
            console.log(e);
            resolve(state);
        });
    });
}

function get_root_url() {
    var _location = location,
        origin = _location.origin,
        pathname = _location.pathname;

    return '' + origin + pathname;
}

function get_permalink_url(id) {
    return get_root_url() + '?link=' + id;
}

function get_state() {
    var center = map.getCenter();

    var _L$Projection$Mercato = L.Projection.Mercator.project(center),
        x = _L$Projection$Mercato.x,
        y = _L$Projection$Mercato.y;

    var searchCriteria = window.Catalog.searchOptions.criteria;
    var serialize = function serialize(group) {
        return group.filter(function (s) {
            return s.checked;
        }).map(function (s) {
            return s.id;
        });
    };
    searchCriteria.satellites = { ms: serialize(searchCriteria.satellites.ms), pc: serialize(searchCriteria.satellites.pc) };
    var drawingObjects = window.Catalog.drawnObjectsControl.widget.items.reduce(function (a, _ref) {
        var visible = _ref.visible,
            id = _ref.id,
            color = _ref.color,
            name = _ref.name,
            area = _ref.area,
            geoJSON = _ref.geoJSON;

        return a.concat({ visible: visible, id: id, color: color, name: name, area: area, geoJSON: geoJSON });
    }, []);
    return {
        lang: T.getLanguage(),
        drawingObjects: drawingObjects,
        position: {
            x: x,
            y: y,
            z: 17 - map.getZoom()
        },
        activeLayer: map.gmxBaseLayersManager.getCurrentID(),
        bounds: map.getBounds(),
        searchCriteria: searchCriteria,
        items: window.Catalog.resultsController.results,
        cart: window.Catalog.resultsController.favorites,
        activeTabId: window.Catalog.searchSidebar.getActiveTabId(),
        cadastre: {}
    };
}

function get_permalink_id() {

    return new Promise(function (resolve, reject) {
        var state = get_state();
        window.Catalog.gmxResourceServer.sendPostRequest('TinyReference/Create.ashx', {
            content: JSON.stringify(state)
        }).then(function (response) {
            if (response.Status === 'ok') {
                resolve(response.Result);
            } else {
                reject(response);
            }
        }).catch(function (e) {
            return reject(e);
        });
    });
}

function get_panel_height(container, parts) {
    return parts.reduce(function (a, x) {
        return a - container.querySelector(x).getBoundingClientRect().height;
    }, container.getBoundingClientRect().height);
}

function resize_search_options(container) {
    var total = get_panel_height(container, ['.search-pane', '.search-options-footer']);
    window.Catalog.searchOptions.resize(total);
}

function resize_results(container) {
    var total = get_panel_height(container, ['.results-header']);
    window.Catalog.resultList.resize(total);
    window.Catalog.resultList.adjustWidth();
}

function resize_favorites(container) {
    var total = get_panel_height(container, ['.favorites-header', '.favorites-footer']);
    window.Catalog.favoritesList.resize(total);
    window.Catalog.favoritesList.adjustWidth();
}

function init_sidebar(state) {
    return new Promise(function (resolve) {
        var restricted = window.Catalog.userInfo.IsAuthenticated && window.Catalog.userInfo.Role === 'scanex';

        // set default search criteria
        var now = new Date();
        var select_satellites = function select_satellites(group, flag) {
            for (var key in group) {
                var s = group[key];
                s.checked = flag;
            }
        };
        select_satellites(_Satellites.satellites.ms, true);
        select_satellites(_Satellites.satellites.pc, true);

        window.Catalog.defaultCriteria = {
            date: [new Date(now.getFullYear(), 0, 1), now],
            annually: false,
            clouds: [0, 100],
            angle: [0, 60],
            resolution: [0.3, 20],
            satellites: _Satellites.satellites,
            stereo: false
        };

        window.Catalog.searchSidebar = new IconSidebarControl({ position: 'left' });
        map.addControl(window.Catalog.searchSidebar);
        var sidebarContainer = document.querySelector('.iconSidebarControl');
        sidebarContainer.classList.add('noselect');
        var searchContainer = window.Catalog.searchSidebar.setPane('search', {
            createTab: (0, _TabFactory.createTab)({
                icon: 'sidebar-search',
                active: 'sidebar-search-active',
                inactive: 'sidebar-search-passive',
                hint: T.getText('search.title')
            })
        });
        searchContainer.innerHTML = '<div class="search-pane"></div>\n            <div class="no-select search-options-pane"></div>\n            <div class="search-options-footer">\n                <button class="search-options-search-button" type="button">\n                    <span>' + T.getText('search.action') + '</span>\n                </button>\n            </div>';

        var cadastreLayerGroup = null;

        var crds = new nsGmx.CoordinatesDataProvider({ showOnMap: false });
        crds.addEventListener('fetch', function (e) {
            var result = e.detail;
            var geoJSON = result.feature;
            geoJSON.properties.editable = false;
            var center = L.GeoJSON.coordsToLatLng(geoJSON.geometry.coordinates);
            var item = window.Catalog.resultsController.getObject({ geoJSON: geoJSON, editable: geoJSON.properties.editable });
            var drawing = window.Catalog.resultsController.addDrawing(item);

            var _mapContainer$getBoun = mapContainer.getBoundingClientRect(),
                height = _mapContainer$getBoun.height;

            window.Catalog.drawnObjectsControl.widget.resize(height - 150);
            // window.Catalog.drawnObjectsControl.widget.items = window.Catalog.drawnObjectsControl.widget.items.concat(item);
            map.setView(center, 14);
            // map.invalidateSize();
        });
        var gmx = new _GmxLayerDataProvider.GmxLayerDataProvider({ map: map, gmxResourceServer: window.Catalog.gmxResourceServer });
        gmx.addEventListener('fetch', function (e) {
            var _e$detail = e.detail,
                fields = _e$detail.fields,
                values = _e$detail.values,
                types = _e$detail.types;

            var count = values.length;
            if (count === 0) {
                window.Catalog.searchSidebar.enable('results', false);
                update_results_number(0);
                window.Catalog.notificationWidget.content.innerText = T.getText('alerts.nothing');
                window.Catalog.notificationWidget.show();
            } else {
                window.Catalog.searchSidebar.enable('results', true);
                window.Catalog.searchSidebar.open('results');
                window.Catalog.resultsController.setLayer({ fields: fields, values: values, types: types });
                update_results_number(count);
            }
        });

        var osm = new nsGmx.OsmDataProvider({
            showOnMap: false,
            serverBase: 'http://maps.kosmosnimki.ru',
            suggestionLimit: 10
        });

        osm.addEventListener('fetch', function (e) {
            var results = e.detail;
            var features = results.map(function (x) {
                x.feature.properties.editable = false;
                x.feature.properties.name = x.feature.properties.ObjName;
                return x.feature;
            });
            var fill = NON_EDIT_LINE_STYLE.fill,
                weight = NON_EDIT_LINE_STYLE.weight,
                opacity = NON_EDIT_LINE_STYLE.opacity;

            if (features && features.length) {
                features.map(function (geoJSON) {
                    var center = map.getCenter();
                    (0, _Utils.normalize_geometry)(center.lng, geoJSON.geometry);

                    var _map$gmxDrawing$addGe = map.gmxDrawing.addGeoJSON(geoJSON, {
                        editable: false,
                        lineStyle: { fill: fill, weight: weight, opacity: opacity },
                        className: 'osm-layer'
                    }),
                        _map$gmxDrawing$addGe2 = _slicedToArray(_map$gmxDrawing$addGe, 1),
                        object = _map$gmxDrawing$addGe2[0];

                    window.Catalog.resultsController.createDrawing({ object: object, geoJSON: geoJSON });
                    object.bringToBack();
                });
                var json = features.reduce(function (a, geojson) {
                    a.addData(geojson.geometry);
                    return a;
                }, L.geoJson());
                var bounds = json.getBounds();
                map.fitBounds(bounds);
                // map.invalidateSize();
            }
        });

        var cadastre = new nsGmx.CadastreDataProvider({
            serverBase: 'http://pkk5.kosmosnimki.ru/api',
            suggestionLimit: 10,
            tolerance: 2048,
            showOnMap: true
        });
        cadastre.addEventListener('fetch', function (e) {
            var response = e.detail;
            if (response && response.features) {
                var feature = response.features[0];
                if (cadastreLayerGroup) {
                    if (!map.hasLayer(cadastreLayerGroup)) {
                        cadastreLayerGroup.addTo(map);
                    }
                    cadastreModule.searchHook(feature.attrs.cn);
                } else {
                    var R = 6378137,
                        crs = L.Projection.SphericalMercator,
                        bounds = map.getPixelBounds(),
                        ne = map.options.crs.project(map.unproject(bounds.getTopRight())),
                        sw = map.options.crs.project(map.unproject(bounds.getBottomLeft())),
                        latLngBounds = L.latLngBounds(crs.unproject(L.point(feature.extent.xmin, feature.extent.ymin).divideBy(R)), crs.unproject(L.point(feature.extent.xmax, feature.extent.ymax).divideBy(R)));
                    map.fitBounds(latLngBounds, { reset: true });
                }
            }
        });

        var searchControl = new nsGmx.SearchWidget(searchContainer.querySelector('.search-pane'), {
            placeHolder: T.getText('controls.search'),
            suggestionLimit: 10,
            providers: [crds, gmx, osm],
            replaceInputOnEnter: true,
            style: {
                editable: false,
                map: true,
                pointStyle: {
                    size: 8,
                    weight: 1,
                    opacity: 1,
                    color: '#00008B'
                },
                lineStyle: {
                    fill: false,
                    weight: 3,
                    opacity: 1,
                    color: '#008B8B'
                }
            }
        });

        map.on('click', searchControl.results.hide.bind(searchControl.results));
        map.on('dragstart', searchControl.results.hide.bind(searchControl.results));

        window.Catalog.searchOptions = new _SearchOptions.SearchOptions(searchContainer.querySelector('.search-options-pane'), { restricted: restricted });
        window.Catalog.searchOptions.criteria = window.Catalog.defaultCriteria;
        window.Catalog.searchOptions.addEventListener('change', function (e) {
            enable_search();
        });

        window.Catalog.requestAdapter = new _RequestAdapter.RequestAdapter({
            layer: 'AFB4D363768E4C5FAC71C9B0C6F7B2F4',
            gmxResourceServer: window.Catalog.gmxResourceServer,
            authorized: restricted
        });

        var dlgDownloadResultContainer = (0, _Utils.create_container)();
        dlgDownloadResultContainer.classList.add('download-result-dialog');
        window.Catalog.dlgDownloadResult = new _Panel.Panel(dlgDownloadResultContainer, {
            id: 'download.result.dialog',
            left: window.DIALOG_PLACE.left,
            top: window.DIALOG_PLACE.top,
            modal: true,
            header: false
        });
        window.Catalog.dlgDownloadResult.hide();
        window.Catalog.dlgDownloadResult.content.innerHTML = '' + T.getText('results.download');
        window.Catalog.dlgDownloadResult.footer.innerHTML = '<button class="dialog-ok-button">' + T.getText('download.ok') + '</button>\n        <button class="dialog-cancel-button">' + T.getText('download.cancel') + '</button>';
        window.Catalog.dlgDownloadResult.footer.querySelector('button.dialog-ok-button').addEventListener('click', function (e) {
            window.Catalog.dlgDownloadResult.hide();
            ignoreResults = false;
            window.Catalog.loaderWidget.show();
            window.Catalog.requestAdapter.search().then(function (_ref2) {
                var fields = _ref2.fields,
                    values = _ref2.values,
                    types = _ref2.types;

                window.Catalog.loaderWidget.hide();
                if (!ignoreResults) {
                    window.Catalog.resultsController.downloadCache = { fields: fields, values: values, types: types };
                    window.Catalog.shapeLoader.download('results', 'results');
                }
            }).catch(function (e) {
                window.Catalog.dlgErrorMessage.content.innerHTML = '' + e.Message;
                window.Catalog.dlgErrorMessage.show();
            });
        });

        var dlgErrorMessageContainer = (0, _Utils.create_container)();
        dlgErrorMessageContainer.classList.add('error-message-dialog');
        window.Catalog.dlgErrorMessage = new _Panel.Panel(dlgErrorMessageContainer, {
            id: 'error.message.dialog',
            left: window.DIALOG_PLACE.left,
            top: window.DIALOG_PLACE.top,
            modal: true,
            header: false
        });
        window.Catalog.dlgErrorMessage.footer.innerHTML = '<button class="dialog-close-button">' + T.getText('alerts.close') + '</button>';
        window.Catalog.dlgErrorMessage.footer.querySelector('button.dialog-close-button').addEventListener('click', function (e) {
            window.Catalog.dlgErrorMessage.hide();
        });

        window.Catalog.dlgErrorMessage.hide();

        window.Catalog.dlgDownloadResult.footer.querySelector('button.dialog-cancel-button').addEventListener('click', function (e) {
            window.Catalog.dlgDownloadResult.hide();
        });

        var dlgChangeResultContainer = (0, _Utils.create_container)();
        dlgChangeResultContainer.classList.add('download-change-dialog');
        window.Catalog.dlgChangeResult = new _Panel.Panel(dlgChangeResultContainer, {
            id: 'download.change.dialog',
            left: window.DIALOG_PLACE.left,
            top: window.DIALOG_PLACE.top,
            modal: true,
            header: false
        });
        window.Catalog.dlgChangeResult.hide();
        window.Catalog.dlgChangeResult.content.innerHTML = '' + T.getText('results.change');
        window.Catalog.dlgChangeResult.footer.innerHTML = '<button class="dialog-close-button">' + T.getText('alerts.ok') + '</button>';
        window.Catalog.dlgChangeResult.footer.querySelector('button.dialog-close-button').addEventListener('click', function (e) {
            window.Catalog.dlgChangeResult.hide();
        });

        window.Catalog.resultsContainer = window.Catalog.searchSidebar.setPane('results', {
            createTab: (0, _TabFactory.createTab)({
                icon: 'sidebar-image',
                active: 'sidebar-image-active',
                inactive: 'sidebar-image-passive',
                hint: T.getText('results.title')
            })
        });

        window.Catalog.resultsContainer.innerHTML = '<div class="results-header">\n            <span class="results-title">' + T.getText('results.title') + '</span>\n            <span class="results-number">0</span>\n            <div class="results-buttons">                \n                <i title="' + T.getText('results.quicklooks.cart') + '" class="quicklooks-cart"></i>\n                <i title="' + T.getText('results.clear') + '" class="results-clear"></i>\n            </div>\n        </div>\n        <div class="results-pane"></div>';

        window.Catalog.resultsNumberContainer = window.Catalog.resultsContainer.querySelector('.results-number');

        window.Catalog.favoritesContainer = window.Catalog.searchSidebar.setPane('favorites', {
            createTab: (0, _TabFactory.createTab)({
                icon: 'sidebar-cart',
                active: 'sidebar-cart-active',
                inactive: 'sidebar-cart-passive',
                hint: T.getText('results.favorites')
            })
        });

        window.Catalog.favoritesContainer.innerHTML = '<div class="favorites-header">\n            <span class="favorites-title">' + T.getText('results.favorites') + '</span>\n            <span class="favorites-number">0</span>          \n            <div class="favorites-buttons">\n                <i title="' + T.getText('favorites.delete') + '" class="favorites-delete-button"></i>\n            </div>\n        </div>\n        <div class="favorites-pane"></div>\n        <div class="favorites-footer">\n            <div class="favorites-order-button">\n                <div>' + T.getText('cart.add') + '</div>\n            </div>\n        </div>';

        window.addEventListener('resize', function (e) {
            resize_map();
            resize_search_options(searchContainer);
            resize_results(window.Catalog.resultsContainer);
            resize_favorites(window.Catalog.favoritesContainer);
        });

        window.Catalog.drawnObjectsControl = new _DrawnObjects.DrawnObjectsControl({ position: 'topright' });
        map.addControl(window.Catalog.drawnObjectsControl);

        window.Catalog.resultList = new _ResultList.ResultList(window.Catalog.resultsContainer.querySelector('.results-pane'), { restricted: restricted });
        window.Catalog.favoritesList = new _FavoritesList.FavoritesList(window.Catalog.favoritesContainer.querySelector('.favorites-pane'), { restricted: restricted });

        window.Catalog.imageDetails = new _ImageDetails.ImageDetails((0, _Utils.create_container)(), { left: 600, top: 300 });
        window.Catalog.resultsController = new _ResultsController.ResultsController({
            map: map,
            requestAdapter: window.Catalog.requestAdapter,
            sidebar: window.Catalog.searchSidebar,
            resultList: window.Catalog.resultList,
            favoritesList: window.Catalog.favoritesList,
            imageDetails: window.Catalog.imageDetails,
            drawnObjects: window.Catalog.drawnObjectsControl.widget
        });

        window.Catalog.resultsController.addEventListener('cart', function (e) {
            var count = window.Catalog.resultsController.favoritesCount;
            window.Catalog.searchSidebar.enable('favorites', count > 0);
            update_cart_number(count);
        });

        var dlgCartLimitContainer = (0, _Utils.create_container)();
        dlgCartLimitContainer.classList.add('cart-limit-dialog');

        window.Catalog.dlgCartLimit = new _Panel.Panel(dlgCartLimitContainer, {
            id: 'cart.limit.dialog',
            left: Math.round(mapContainer.getBoundingClientRect().width / 2),
            top: window.DIALOG_PLACE.top,
            modal: true,
            header: false
        });
        window.Catalog.dlgCartLimit.hide();
        window.Catalog.dlgCartLimit.content.innerHTML = '' + T.getText('favorites.limit');
        window.Catalog.dlgCartLimit.footer.innerHTML = '<button class="dialog-cancel-button">' + T.getText('alerts.close') + '</button>';
        window.Catalog.dlgCartLimit.footer.querySelector('button.dialog-cancel-button').addEventListener('click', function (e) {
            window.Catalog.dlgCartLimit.hide();
        });

        window.Catalog.resultsController.addEventListener('cart:limit', function (e) {
            window.Catalog.dlgCartLimit.show();
        });

        window.Catalog.resultsController.addEventListener('cart:all', function (e) {
            var count = window.Catalog.favoritesCount;
            window.Catalog.searchSidebar.enable('favorites', count > 0);
            update_cart_number(count);
        });

        window.Catalog.resultsController.addEventListener('visible', function (e) {
            update_quicklooks_cart();
        });

        window.Catalog.resultsController.addEventListener('selected', function (e) {
            enable_cart(window.Catalog.resultsController.hasFavoritesSelected);
        });

        var btnOrder = window.Catalog.favoritesContainer.querySelector('.favorites-order-button');
        btnOrder.addEventListener('click', function (e) {
            if (btnOrder.classList.contains('favorites-order-button-active')) {
                add_to_order();
            }
        });

        var btnRemoveFavorites = window.Catalog.favoritesContainer.querySelector('.favorites-delete-button');
        btnRemoveFavorites.addEventListener('click', function (e) {
            if (btnRemoveFavorites.classList.contains('favorites-delete-button-active')) {
                window.Catalog.resultsController.removeSelectedFavorites();
                enable_cart(window.Catalog.resultsController.hasFavoritesSelected);
                var count = window.Catalog.resultsController.favoritesCount;
                update_cart_number(count);

                if (count === 0) {
                    if (window.Catalog.searchSidebar.enabled('results')) {
                        window.Catalog.searchSidebar.open('results');
                    } else {
                        window.Catalog.searchSidebar.open('search');
                    }
                    window.Catalog.searchSidebar.enable('favorites', false);
                }
            }
        });

        window.Catalog.btnQuicklooksCart = window.Catalog.resultsContainer.querySelector('.quicklooks-cart');
        update_quicklooks_cart();
        window.Catalog.btnQuicklooksCart.addEventListener('click', function (e) {
            if (window.Catalog.btnQuicklooksCart.classList.contains('quicklooks-cart-active')) {
                window.Catalog.resultsController.addVisibleToCart();
            }
        });

        window.Catalog.resultsContainer.querySelector('.results-clear').addEventListener('click', function (e) {
            window.Catalog.searchSidebar.open('search');
            window.Catalog.resultsController.clear();
            window.Catalog.searchSidebar.enable('results', false);
            update_results_number(window.Catalog.resultsController.resultsCount);
        });

        // window.Catalog.filterControl = new FilterControl ({position: 'topleft'});
        // map.addControl (window.Catalog.filterControl);
        // window.Catalog.filterControl.getContainer().style.visibility = 'hidden';
        // window.Catalog.filterControl.clouds.values = [0, 100];
        // window.Catalog.filterControl.angle.values = [0, 60];
        // window.Catalog.resultsController.enableFilter(true);
        // let filterVisible = false;
        // let apply_filter = (clouds, angle) => {
        //     window.Catalog.resultsController.filter = item => {
        //         return clouds[0] <= item.cloudness && item.cloudness <= clouds[1] &&
        //             angle[0] <= item.tilt && item.tilt <= angle[1];
        //     };
        //     window.Catalog.resultsController.enableFilter(true);
        //     resize_results(window.Catalog.resultsContainer);            
        //     update_results_number(window.Catalog.resultList.count);
        //     update_cart_number(window.Catalog.favoritesList.count);
        // };
        // window.Catalog.filterControl.on ('change', e => {
        //     let {clouds, angle} = e;
        //     apply_filter (clouds, angle);
        // });

        // let show_filter = () => {
        //     if (!filterVisible) {
        //         window.Catalog.filterControl.getContainer().style.visibility = 'visible';
        //         let clouds = [0, 100];
        //         let angle = [0, 60];
        //         window.Catalog.filterControl.clouds.values = clouds;
        //         window.Catalog.filterControl.angle.values = angle;
        //         // window.Catalog.filterControl.satellites.items = window.Catalog.resultsController.platforms;
        //         apply_filter (clouds, angle);
        //         filterVisible = true;
        //     }
        // };

        // let hide_filter = () => {
        //     if (filterVisible) {
        //         window.Catalog.filterControl.getContainer().style.visibility = 'hidden';
        //         filterVisible = false;
        //     }
        // };

        // window.Catalog.progressWidget = new Progress(document.getElementById('progress-icon'));

        window.Catalog.searchSidebar.on('opened', function (e) {
            switch (e.id) {
                case 'search':
                    window.Catalog.searchOptions.refresh();
                    resize_search_options(searchContainer);
                    window.Catalog.resultsController.hideContours();
                    // hide_filter();
                    break;
                case 'results':
                    window.Catalog.resultsController.showResults();
                    resize_results(window.Catalog.resultsContainer);
                    // show_filter();
                    break;
                case 'favorites':
                    window.Catalog.resultsController.showFavorites();
                    resize_favorites(window.Catalog.favoritesContainer);
                    enable_cart(window.Catalog.resultsController.hasFavoritesSelected);
                    // show_filter();
                    break;
                default:
                    break;
            }
            update_cart_number(window.Catalog.resultsController.favoritesCount);
            shift_base_layers_control();
        });

        window.Catalog.searchSidebar.enable('results', false);
        window.Catalog.searchSidebar.enable('favorites', false);

        window.Catalog.searchSidebar.on('closed', function (e) {
            update_cart_number(window.Catalog.favoritesList.items.length);
            shift_base_layers_control();
        });

        var get_bounds = function get_bounds() {
            var bounds = map.getBounds();
            var nw = bounds.getNorthWest();
            var ne = bounds.getNorthEast();
            var se = bounds.getSouthEast();
            var sw = bounds.getSouthWest();
            return {
                type: 'Polygon',
                coordinates: [[[nw.lng, nw.lat], [ne.lng, ne.lat], [se.lng, se.lat], [sw.lng, sw.lat], [nw.lng, nw.lat]]]
            };
        };

        window.Catalog.resultsController.addEventListener('result:done', function (e) {
            var activeTabId = e.detail.activeTabId;

            switch (activeTabId) {
                case 'results':
                    if (window.Catalog.resultsController.hasResults) {
                        window.Catalog.searchSidebar.enable('results', true);
                        window.Catalog.searchSidebar.open('results');
                        window.Catalog.resultsController.zoomToResults();
                    }
                    break;
                case 'favorites':
                    if (window.Catalog.resultsController.hasFavorites) {
                        window.Catalog.searchSidebar.enable('favorites', true);
                        window.Catalog.searchSidebar.open('favorites');
                        window.Catalog.resultsController.zoomToFavorites();
                    }
                    break;
                default:
                    break;
            }
        });

        window.Catalog.btnSearch = searchContainer.querySelector('.search-options-search-button');
        window.Catalog.btnSearch.addEventListener('click', function () {
            if (window.Catalog.btnSearch.classList.contains('search-options-search-button-active')) {
                ignoreResults = false;
                window.Catalog.loaderWidget.show();
                window.Catalog.resultsController.clear();
                window.Catalog.requestAdapter.criteria = window.Catalog.searchOptions.criteria;
                if (window.Catalog.drawnObjectsControl.widget.count === 0) {
                    window.Catalog.requestAdapter.geometries = [get_bounds()];
                }
                window.Catalog.requestAdapter.search(window.RESULT_MAX_COUNT).then(function (_ref3) {
                    var Count = _ref3.Count,
                        fields = _ref3.fields,
                        values = _ref3.values,
                        types = _ref3.types;

                    window.Catalog.loaderWidget.hide();
                    if (!ignoreResults) {
                        if (Count === 0) {
                            window.Catalog.searchSidebar.enable('results', false);
                            update_results_number(0);
                            window.Catalog.notificationWidget.content.innerText = T.getText('alerts.nothing');
                            window.Catalog.notificationWidget.show();
                        } else if (0 < Count && Count <= window.RESULT_MAX_COUNT) {

                            window.Catalog.resultsController.setLayer({ fields: fields, values: values, types: types });
                            update_results_number(Count);
                        } else {
                            window.Catalog.searchSidebar.enable('results', false);
                            if (window.Catalog.userInfo.IsAuthenticated && window.Catalog.userInfo.Role === 'scanex') {
                                window.Catalog.dlgDownloadResult.show();
                            } else {
                                window.Catalog.dlgChangeResult.show();
                            }
                        }
                    }
                }).catch(function (e) {
                    console.log(e);
                    window.Catalog.loaderWidget.hide();
                    window.Catalog.dlgErrorMessage.content.innerHTML = e.toString() + '<br/>' + e.StackTrace;
                    window.Catalog.dlgErrorMessage.show();
                });
            }
        });
        enable_search();

        var sidebarWidth = sidebarContainer.getBoundingClientRect().width;
        map.options.paddingTopLeft = [sidebarWidth, 0];

        resolve(state);
    });
}

function update_quicklooks_cart() {
    if (window.Catalog.resultsController.hasVisibleResults) {
        window.Catalog.btnQuicklooksCart.classList.add('quicklooks-cart-active');
        window.Catalog.btnQuicklooksCart.classList.remove('quicklooks-cart-passive');
    } else {
        window.Catalog.btnQuicklooksCart.classList.remove('quicklooks-cart-active');
        window.Catalog.btnQuicklooksCart.classList.add('quicklooks-cart-passive');
    }
}

function shift_base_layers_control() {
    var _window$Catalog$searc = window.Catalog.searchSidebar.getContainer().getBoundingClientRect(),
        width = _window$Catalog$searc.width;

    map.gmxControlsManager.get('iconLayers').getContainer().style.left = width + 30 + 'px';
}

function enable_search() {
    if (window.Catalog.searchOptions.selected) {
        window.Catalog.btnSearch.classList.remove('search-options-search-button-passive');
        window.Catalog.btnSearch.classList.add('search-options-search-button-active');
    } else {
        window.Catalog.btnSearch.classList.remove('search-options-search-button-active');
        window.Catalog.btnSearch.classList.add('search-options-search-button-passive');
    }
}

function enable_cart(enable) {
    var btnOrder = document.body.querySelector('[data-pane-id=favorites] .favorites-order-button');
    var btnDelete = document.body.querySelector('[data-pane-id=favorites] .favorites-delete-button');
    if (enable) {
        btnOrder.classList.remove('favorites-order-button-passive');
        btnDelete.classList.remove('favorites-delete-button-passive');
        btnOrder.classList.add('favorites-order-button-active');
        btnDelete.classList.add('favorites-delete-button-active');
    } else {
        btnOrder.classList.remove('favorites-order-button-active');
        btnDelete.classList.remove('favorites-delete-button-active');
        btnOrder.classList.add('favorites-order-button-passive');
        btnDelete.classList.add('favorites-delete-button-passive');
    }
}

function cart_enabled() {
    return !document.body.querySelector('[data-pane-id=favorites] .favorites-order-button').classList.contains('button-disabled');
}

function ensure_cart_number_place() {
    var p = document.body.querySelector('.iconSidebarControl [data-tab-id=favorites] .sidebar-cart');
    var el = p.querySelector('.cart-number');
    if (el === null) {
        el = document.createElement('span');
        el.className = 'cart-number';
        p.appendChild(el);
    }
    return el;
}

function update_cart_number(num) {
    document.querySelector('.favorites-number').innerText = num;
    var cartNumberPlace = ensure_cart_number_place();
    if (num) {
        cartNumberPlace.innerText = num;
        cartNumberPlace.style.visibility = 'visible';
    } else {
        cartNumberPlace.style.visibility = 'hidden';
    }
    window.Catalog.searchSidebar.enable('favorites', num > 0);
}

function update_results_number(num) {
    document.querySelector('[data-pane-id=results] .results-number').innerText = num;
}

function add_to_order() {
    if (window.Catalog.userInfo.IsAuthenticated && cart_enabled()) {
        window.Catalog.cartPanel.items = window.Catalog.favoritesList.items.filter(function (item) {
            return item.selected;
        });
        show_cart();
    } else {
        window.Catalog.dlgAuth.show();
    }
}

function show_cart() {
    if (window.Catalog.cartPanel.count > 0) {
        get_permalink_id().then(function (id) {
            window.Catalog.cartPanel.permalink = get_permalink_url(id);
            window.Catalog.cartPanel.show();
        }).catch(function (e) {
            console.log(e);
            window.Catalog.dlgErrorMessage.content.innerHTML = '' + T.getText('errors.permalink');
            window.Catalog.dlgErrorMessage.show();
        });
    }
}

function init_drawing() {

    var activeIcon = null;

    var setActive = function setActive(id) {
        map.gmxDrawing.bringToFront();
        switch (id) {
            case 'point':
                map.gmxDrawing.create('Point');
                break;
            case 'polygon':
                map.gmxDrawing.create('Polygon');
                break;
            case 'polyline':
                map.gmxDrawing.create('Polyline');
                break;
            case 'rectangle':
                map.gmxDrawing.create('Rectangle');
                break;
            default:
                break;
        }
    };

    var handleStateChange = function handleStateChange(e) {
        var opt = e.target.options;
        var id = opt.id;
        if (id === activeIcon) {
            setActive();
        } else if (opt.isActive) {
            setActive(id);
        }
        setActiveIcon(e.target, opt.isActive);
    };

    map.gmxDrawing.on('drawstop', function (e) {
        var opt = e.object._obj.options || {};
        setActiveIcon(e.object, false);
        if (!window.Catalog.searchSidebar.isOpened()) {
            window.Catalog.searchSidebar.open('search');
        }
    });

    map._controlCorners.searchControls = document.querySelector('#search-controls');
    map._controlCorners.drawControls = document.querySelector('#draw-controls');
    map.gmxControlsManager.init({
        gmxHide: null,
        gmxLogo: null,
        gmxZoom: null,
        gmxDrawing: null,
        svgSprite: false
    });

    var drawControls = ['point', 'polyline', 'polygon', 'rectangle'].map(function (id) {
        var control = new L.Control.gmxIcon({
            id: id,
            position: 'drawControls',
            title: T.getText('controls.' + id),
            togglable: true,
            imagePath: './dist/'
        });
        control.on('statechange', handleStateChange);
        map.gmxControlsManager.add(control);
        map.addControl(control);
        return control;
    });

    var setActiveIcon = function setActiveIcon(control, isActive) {
        activeIcon = null;
        drawControls.forEach(function (ctr) {
            var flag = control === ctr && (isActive || ctr.options.isActive);
            ctr.setActive(flag);
            if (flag) {
                activeIcon = ctr.options.id;
            }
        });
        return activeIcon;
    };
}

function init_print() {
    var printControl = new L.Control.gmxIcon({
        id: 'print',
        position: 'searchControls',
        title: T.getText('controls.print'),
        stateChange: function stateChange() {
            window.open('http://search.kosmosnimki.ru/print-iframe_leaflet.html', '_blank');
        }
    });
    map.gmxControlsManager.add(printControl);
    map.addControl(printControl);
}

function init_permalink() {
    var dlgPermalink = (0, _Utils.create_container)();
    dlgPermalink.style.display = 'none';
    dlgPermalink.classList.add('dialog-permalink');
    dlgPermalink.innerHTML = '<input type="text" value=""/><button class="copy-button">' + T.getText('alerts.clipboard') + '</button>';
    dlgPermalink.querySelector('.copy-button').addEventListener('click', function (e) {
        dlgPermalink.querySelector('input[type="text"]').select();
        if (document.execCommand('copy')) {
            dlgPermalink.style.display = 'none';
            window.Catalog.notificationWidget.content.innerText = T.getText('alerts.permalink');
            window.Catalog.notificationWidget.show();
        }
    });
    var permalinkControl = new L.Control.gmxIcon({
        id: 'link',
        position: 'searchControls',
        title: T.getText('controls.permalink'),
        stateChange: function stateChange(control) {
            get_permalink_id().then(function (id) {
                dlgPermalink.querySelector('input[type="text"]').value = get_permalink_url(id);
                dlgPermalink.style.display = 'block';
            });
        }
    });
    map.gmxControlsManager.add(permalinkControl);
    map.addControl(permalinkControl);
    dlgPermalink.style.top = document.getElementById('header').getBoundingClientRect().height + 'px';
    dlgPermalink.style.left = '450px';
}

function init_boxzoom() {
    var zoomControl = new L.Control.gmxIcon({
        id: 'boxzoom',
        position: 'searchControls',
        toggle: true,
        title: T.getText('controls.zoom'),
        onAdd: function onAdd(control) {
            var _onMouseDown = map.boxZoom._onMouseDown;
            map.boxZoom._onMouseDown = function (e) {
                _onMouseDown.call(map.boxZoom, {
                    clientX: e.clientX,
                    clientY: e.clientY,
                    which: 1,
                    shiftKey: true
                });
            };
            map.on('boxzoomend', function () {
                map.dragging.enable();
                map.boxZoom.removeHooks();
                control.setActive(false);
            });
        },
        stateChange: function stateChange(control) {
            if (control.options.isActive) {
                map.dragging.disable();
                map.boxZoom.addHooks();
            } else {
                map.dragging.enable();
                map.boxZoom.removeHooks();
            }
        }
    });
    map.gmxControlsManager.add(zoomControl);
    map.addControl(zoomControl);
}

function init_zoom() {
    var zoomControl = L.control.zoom({ position: 'bottomright' });
    map.gmxControlsManager.add(zoomControl);
    map.addControl(zoomControl);
}

function init_upload(shapeLoader) {
    var npoints = function npoints(coordinates) {
        var m = /\[(-?\d+(\.\d+)?)\s*,\s*(-?\d+(\.\d+)?)\]/g.exec(JSON.stringify(coordinates));
        return m && m.length || 0;
    };
    var uploadControl = new L.Control.gmxIcon({
        id: 'upload',
        position: 'searchControls',
        title: T.getText('controls.upload'),
        stateChange: function stateChange(control) {
            shapeLoader.upload().then(function (_ref4) {
                var type = _ref4.type,
                    results = _ref4.results;

                switch (type) {
                    case 'shapefile':
                        var bounds = null;
                        var count = results.reduce(function (a, item) {
                            var coordinates = item.geometry.coordinates;

                            return a + npoints(coordinates);
                        }, 0);
                        if (count <= window.MAX_UPLOAD_POINTS) {
                            results.forEach(function (item) {
                                var _window$Catalog$resul = window.Catalog.resultsController.getObject({ geoJSON: item }),
                                    name = _window$Catalog$resul.name,
                                    color = _window$Catalog$resul.color,
                                    editable = _window$Catalog$resul.editable,
                                    visible = _window$Catalog$resul.visible,
                                    _window$Catalog$resul2 = _window$Catalog$resul.geoJSON,
                                    geometry = _window$Catalog$resul2.geometry,
                                    properties = _window$Catalog$resul2.properties;

                                var drawing = window.Catalog.resultsController.addDrawing({
                                    name: name,
                                    color: color,
                                    geoJSON: { type: 'Feature', properties: properties, geometry: geometry },
                                    visible: visible,
                                    editable: editable
                                });
                                if (drawing) {
                                    if (bounds) {
                                        bounds.extend(drawing.getBounds());
                                    } else {
                                        bounds = drawing.getBounds();
                                    }
                                }
                            });

                            var _mapContainer$getBoun2 = mapContainer.getBoundingClientRect(),
                                height = _mapContainer$getBoun2.height;

                            window.Catalog.drawnObjectsControl.widget.resize(height - 150);
                            map.fitBounds(bounds, { animate: false });
                        } else {
                            window.Catalog.dlgErrorMessage.content.innerHTML = T.getText('errors.upload') + '<br>' + T.getText('errors.points');
                            window.Catalog.dlgErrorMessage.show();
                        }
                        break;
                    case 'idlist':
                        var fields = results.fields,
                            values = results.values,
                            types = results.types,
                            Count = results.Count;

                        if (Count) {

                            var geometry_index = fields.length - 1;
                            values.forEach(function (item) {
                                item[geometry_index] = L.gmxUtil.convertGeometry(item[geometry_index], false, true);
                            });

                            window.Catalog.resultsController.setLayer(results);
                            update_results_number(Count);
                        }
                        break;
                    default:
                        break;
                }
            }).catch(function (e) {
                console.log(e);
                window.Catalog.dlgErrorMessage.content.innerHTML = '' + T.getText('errors.upload');
                window.Catalog.dlgErrorMessage.show();
            });
        }
    });
    map.addControl(uploadControl);
}

function init_download(shapeLoader) {
    var dlgDownload = (0, _Utils.create_container)();
    dlgDownload.style.display = 'none';
    dlgDownload.classList.add('dialog-download');
    dlgDownload.innerHTML = '<table border="0" cellspacing="0" cellpadding="0">\n        <tbody>\n            <tr>\n                <td class="download-type">' + T.getText('download.type') + '</td>\n                <td>\n                    <select>                        \n                        <option value="borders">' + T.getText('download.borders') + '</option>\n                        <option value="results">' + T.getText('download.results') + '</option>\n                        <option value="csv">' + T.getText('download.csv') + '</option>\n                        <option value="cart">' + T.getText('download.cart') + '</option>\n                        <option value="quicklooks">' + T.getText('download.quicklooks') + '</option>\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td class="download-file">' + T.getText('download.file') + '</td>\n                <td>\n                    <input type="text" value="' + T.getText('download.noname') + '"/>\n                </td>\n            </tr>\n            <tr>\n                <td colspan="2" class="download-footer">\n                    <button class="download-ok">' + T.getText('download.ok') + '</button>\n                    <button class="download-cancel">' + T.getText('download.cancel') + '</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>';

    dlgDownload.querySelector('.download-ok').addEventListener('click', function (e) {
        var type = dlgDownload.querySelector('select').value;
        var name = dlgDownload.querySelector('input[type=text]').value;
        var valid = false;
        switch (type) {
            case 'borders':
                if (window.Catalog.drawnObjectsControl.widget.items.length > 0) {
                    valid = true;
                }
                break;
            case 'results':
            case 'csv':
                if (window.Catalog.resultsController.hasResults) {
                    valid = true;
                }
                break;
            case 'cart':
            case 'quicklooks':
                if (window.Catalog.resultsController.hasFavorites) {
                    valid = true;
                }
                break;
            default:
                break;
        }
        if (valid) {
            dlgDownload.style.display = 'none';
            shapeLoader.download(name, type);
        } else {
            window.Catalog.notificationWidget.content.innerText = T.getText('download.noresults');
            window.Catalog.notificationWidget.show();
        }
    });
    dlgDownload.querySelector('input[type="text"]').addEventListener('focus', function (e) {
        return e.target.select();
    });
    dlgDownload.querySelector('.download-cancel').addEventListener('click', function (e) {
        dlgDownload.style.display = 'none';
    });

    var downloadControl = new L.Control.gmxIcon({
        id: 'download',
        position: 'searchControls',
        title: T.getText('controls.download'),
        stateChange: function stateChange(control) {
            if (window.Catalog.resultsController.resultsCount + window.Catalog.resultsController.favoritesCount > 0 || window.Catalog.drawnObjectsControl.widget.items.length) {
                dlgDownload.style.display = 'block';
            } else {
                window.Catalog.notificationWidget.content.innerText = T.getText('download.empty');
                window.Catalog.notificationWidget.show();
            }
        }
    });
    map.addControl(downloadControl);
    dlgDownload.style.top = document.getElementById('header').getBoundingClientRect().height + 'px';
    dlgDownload.style.left = downloadControl.getContainer().getBoundingClientRect().left + 'px';
}

function init_base_layers() {
    var lang = T.getLanguage() || 'rus';
    var layers = map.gmxBaseLayersManager.getActiveIDs().map(function (id) {
        var layer = map.gmxBaseLayersManager.get(id);
        if (!layer) {
            return null;
        } else {
            return {
                layer: layer,
                icon: layer.options.icon,
                title: layer.options[lang]
            };
        }
    }).filter(function (e) {
        return e;
    });

    var baseLayersControl = new IconLayers(layers, { id: 'iconLayers' });
    map.gmxControlsManager.add(baseLayersControl);
    map.addControl(baseLayersControl);

    shift_base_layers_control();
}

function init_controls(state) {
    return new Promise(function (resolve) {

        init_drawing();
        // init_print();
        init_permalink();
        init_boxzoom();
        init_zoom();
        window.Catalog.shapeLoader = new _ShapeLoader.ShapeLoader({
            gmxResourceServer: window.Catalog.gmxResourceServer,
            resultsController: window.Catalog.resultsController,
            catalogResourceServer: window.Catalog.catalogResourceServer,
            drawnObjects: window.Catalog.drawnObjectsControl.widget
        });
        init_upload(window.Catalog.shapeLoader);
        init_download(window.Catalog.shapeLoader);
        init_base_layers();
        window.Catalog.notificationWidget = new _NotificationWidget.NotificationWidget(map._controlCorners.right, { timeout: 2000 });
        window.Catalog.loaderWidget = new _LoaderWidget.LoaderWidget();
        window.Catalog.loaderWidget.addEventListener('cancel', function (e) {
            ignoreResults = true;
        });

        resolve(state);
    });
}

function read_permalink(id) {
    return new Promise(function (resolve, reject) {
        window.Catalog.gmxResourceServer.sendGetRequest('TinyReference/Get.ashx', { id: id }).then(function (response) {
            if (response.Status == 'ok') {
                try {
                    resolve(JSON.parse(response.Result));
                } catch (e) {
                    reject(e);
                }
            } else {
                reject(response.Result);
            }
        }).catch(function (e) {
            return reject(e);
        });
    });
}

function init_cart(state) {
    return new Promise(function (resolve) {
        var restricted = window.Catalog.userInfo.Role === 'scanex';
        window.Catalog.cartPanel = new _Cart.Cart((0, _Utils.create_container)(), { catalogResourceServer: window.Catalog.catalogResourceServer, left: 400, top: 200, modal: true, internal: restricted });

        update_cart_number(0);

        window.Catalog.cartPanel.addEventListener('items:change', function (e) {
            update_cart_number(e.detail);
        });
        resolve(state);
    });
}

function load_search_criteria(_ref5) {
    var archive = _ref5.archive,
        _ref5$date = _slicedToArray(_ref5.date, 2),
        dateStart = _ref5$date[0],
        dateEnd = _ref5$date[1],
        annually = _ref5.annually,
        angle = _ref5.angle,
        clouds = _ref5.clouds,
        stereo = _ref5.stereo,
        satellites = _ref5.satellites;

    var dates = [moment(dateStart).toDate(), moment(dateEnd).toDate()];
    var _window$Catalog$defau = window.Catalog.defaultCriteria.satellites,
        ms = _window$Catalog$defau.ms,
        pc = _window$Catalog$defau.pc;

    ms.forEach(function (s) {
        return s.checked = satellites.ms.indexOf(s.id) >= 0;
    });
    pc.forEach(function (s) {
        return s.checked = satellites.pc.indexOf(s.id) >= 0;
    });
    window.Catalog.searchOptions.criteria = {
        archive: archive,
        date: dates,
        annually: annually,
        angle: angle,
        clouds: clouds,
        stereo: stereo,
        satellites: { ms: ms, pc: pc }
    };
}

function load_state(state) {
    localStorage.removeItem('view_state');
    T.setLanguage(state.lang || DEFAULT_LANGUAGE);
    L.gmxLocale.setLanguage(state.lang || DEFAULT_LANGUAGE);
    load_search_criteria(state.searchCriteria);
    state.drawingObjects.forEach(function (item) {
        window.Catalog.resultsController.addDrawing(item);
    });
    update_results_number(state.items.length);

    update_cart_number(state.cart.length);

    var convert_date = function convert_date(item, fields) {
        for (var k in fields) {
            var field = fields[k];
            if (field.type === 'date') {
                item[k] = new Date(item[k]);
            }
        }
        return item;
    };

    var items = state.items.reduce(function (a, item) {
        var gmx_id = item.gmx_id;

        a[gmx_id] = item;
        a[gmx_id].result = true;
        return a;
    }, {});

    items = state.cart.reduce(function (a, item) {
        var gmx_id = item.gmx_id;

        if (a[gmx_id]) {
            a[gmx_id].cart = true;
            if (item.hasOwnProperty('selected')) {
                a[gmx_id].selected = item.selected;
            }
            if (item.hasOwnProperty('visible')) {
                a[gmx_id].visible = item.visible;
            } else if (item.hasOwnProperty('quicklook')) {
                a[gmx_id].visible = item.quicklook;
            }
        } else {
            a[gmx_id] = item;
            a[gmx_id].cart = true;
        }
        delete a[gmx_id].checked;
        delete a[gmx_id].quicklook;
        return a;
    }, items);

    var _Object$keys$reduce = Object.keys(items).reduce(function (a, gmx_id) {
        var item = items[gmx_id];
        if (a.fields.length === 0) {
            _ResultsController.layerAttributes.forEach(function (k, i) {
                if (k === 'selected' || k === 'visible' || k === 'result' || k === 'cart' || item.hasOwnProperty(k)) {
                    a.fields.push(k);
                    a.types.push(_ResultsController.layerAttrTypes[i]);
                }
            });
        }

        var values = a.fields.map(function (k) {
            if (item[k]) {
                return item[k];
            } else {
                return false;
            }
        });

        values.push(L.gmxUtil.convertGeometry(item.geoJSON, false, true));
        a.values.push(values);
        return a;
    }, { fields: [], values: [], types: [] }),
        fields = _Object$keys$reduce.fields,
        values = _Object$keys$reduce.values,
        types = _Object$keys$reduce.types;

    window.Catalog.resultsController.setLayer({ fields: fields, values: values, types: types }, state.activeTabId);

    update_quicklooks_cart();

    if (state.items.length > 0) {
        window.Catalog.searchSidebar.enable('results', true);
    }

    if (state.cart.length > 0) {
        window.Catalog.searchSidebar.enable('favorites', true);
    }

    var _state$position = state.position,
        x = _state$position.x,
        y = _state$position.y,
        z = _state$position.z;

    var center = L.Projection.Mercator.unproject({ y: y, x: x });
    map.setView(center, 17 - z);
    // map.invalidateSize();        

    var _mapContainer$getBoun3 = mapContainer.getBoundingClientRect(),
        height = _mapContainer$getBoun3.height;

    window.Catalog.drawnObjectsControl.widget.resize(height - 150);
}

function load_presets(state) {
    return new Promise(function (resolve) {
        var s = localStorage.getItem('view_state');
        if (s) {
            var viewState = JSON.parse(s);
            load_state(viewState);
            resolve(state);
        } else {
            var matches = /link=([^&]+)/g.exec(location.search);
            if (Array.isArray(matches) && matches.length > 0) {
                var _matches = _slicedToArray(matches, 2),
                    link = _matches[0],
                    id = _matches[1];

                read_permalink(id).then(function (response) {
                    load_state(response);
                    resolve(state);
                }).catch(function (e) {
                    console.log(e);
                    resolve(state);
                });
            } else {
                resolve(state);
            }
        }
    });
}

function load_version_info(state) {
    return new Promise(function (resolve) {
        fetch('dist/version-' + T.getLanguage() + '.txt').then(function (response) {
            return response.text();
        }).then(function (text) {
            var dlgAboutContainer = (0, _Utils.create_container)();
            window.Catalog.dlgAbout = new _About.About(dlgAboutContainer, { text: text });
            window.Catalog.dlgAbout.hide();
            document.getElementById('help').addEventListener('click', function (e) {
                // window.Catalog.dlgAbout.show();
                window.open('https://scanex.github.io/Documentation/Catalog/index.html', '_blank');
            });
            resolve(state);
        });
    });
}

(0, _Utils.chain)([load_locale, load_map, init_baselayer_manager, set_active_layer, authenticate, get_user, check_access, init_sidebar, init_controls, init_cart, load_presets, load_version_info], {}).then(function (state) {
    var btnLogin = window.Catalog.authContainer.querySelector('.authWidget-loginButton');
    if (btnLogin) {
        btnLogin.addEventListener('click', function (e) {
            if (!localStorage.view_state) {
                localStorage.setItem('view_state', JSON.stringify(get_state()));
            }
        });
    }
    window.Catalog.langWidget = new _LanguageWidget.LanguageWidget(document.getElementById('lang'), {
        languages: {
            'eng': 'EN',
            'rus': 'RU'
        }
    });
    window.Catalog.langWidget.currentLanguage = T.getLanguage();
    window.Catalog.langWidget.addEventListener('change', function (e) {
        T.setLanguage(e.detail);
        L.gmxLocale.setLanguage(e.detail);
        localStorage.setItem('view_state', JSON.stringify(get_state()));
        window.location.reload(true);
    });
});

/***/ }),
/* 185 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 186 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 187 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 188 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 189 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 190 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 191 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 192 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 193 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 194 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 195 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 196 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 197 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 198 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 199 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 200 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 201 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 202 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 203 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 204 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 205 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 206 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 207 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 208 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 209 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 210 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 211 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 20,
	"./af.js": 20,
	"./ar": 27,
	"./ar-dz": 21,
	"./ar-dz.js": 21,
	"./ar-kw": 22,
	"./ar-kw.js": 22,
	"./ar-ly": 23,
	"./ar-ly.js": 23,
	"./ar-ma": 24,
	"./ar-ma.js": 24,
	"./ar-sa": 25,
	"./ar-sa.js": 25,
	"./ar-tn": 26,
	"./ar-tn.js": 26,
	"./ar.js": 27,
	"./az": 28,
	"./az.js": 28,
	"./be": 29,
	"./be.js": 29,
	"./bg": 30,
	"./bg.js": 30,
	"./bm": 31,
	"./bm.js": 31,
	"./bn": 32,
	"./bn.js": 32,
	"./bo": 33,
	"./bo.js": 33,
	"./br": 34,
	"./br.js": 34,
	"./bs": 35,
	"./bs.js": 35,
	"./ca": 36,
	"./ca.js": 36,
	"./cs": 37,
	"./cs.js": 37,
	"./cv": 38,
	"./cv.js": 38,
	"./cy": 39,
	"./cy.js": 39,
	"./da": 40,
	"./da.js": 40,
	"./de": 43,
	"./de-at": 41,
	"./de-at.js": 41,
	"./de-ch": 42,
	"./de-ch.js": 42,
	"./de.js": 43,
	"./dv": 44,
	"./dv.js": 44,
	"./el": 45,
	"./el.js": 45,
	"./en-au": 46,
	"./en-au.js": 46,
	"./en-ca": 47,
	"./en-ca.js": 47,
	"./en-gb": 48,
	"./en-gb.js": 48,
	"./en-ie": 49,
	"./en-ie.js": 49,
	"./en-nz": 50,
	"./en-nz.js": 50,
	"./eo": 51,
	"./eo.js": 51,
	"./es": 54,
	"./es-do": 52,
	"./es-do.js": 52,
	"./es-us": 53,
	"./es-us.js": 53,
	"./es.js": 54,
	"./et": 55,
	"./et.js": 55,
	"./eu": 56,
	"./eu.js": 56,
	"./fa": 57,
	"./fa.js": 57,
	"./fi": 58,
	"./fi.js": 58,
	"./fo": 59,
	"./fo.js": 59,
	"./fr": 62,
	"./fr-ca": 60,
	"./fr-ca.js": 60,
	"./fr-ch": 61,
	"./fr-ch.js": 61,
	"./fr.js": 62,
	"./fy": 63,
	"./fy.js": 63,
	"./gd": 64,
	"./gd.js": 64,
	"./gl": 65,
	"./gl.js": 65,
	"./gom-latn": 66,
	"./gom-latn.js": 66,
	"./gu": 67,
	"./gu.js": 67,
	"./he": 68,
	"./he.js": 68,
	"./hi": 69,
	"./hi.js": 69,
	"./hr": 70,
	"./hr.js": 70,
	"./hu": 71,
	"./hu.js": 71,
	"./hy-am": 72,
	"./hy-am.js": 72,
	"./id": 73,
	"./id.js": 73,
	"./is": 74,
	"./is.js": 74,
	"./it": 75,
	"./it.js": 75,
	"./ja": 76,
	"./ja.js": 76,
	"./jv": 77,
	"./jv.js": 77,
	"./ka": 78,
	"./ka.js": 78,
	"./kk": 79,
	"./kk.js": 79,
	"./km": 80,
	"./km.js": 80,
	"./kn": 81,
	"./kn.js": 81,
	"./ko": 82,
	"./ko.js": 82,
	"./ky": 83,
	"./ky.js": 83,
	"./lb": 84,
	"./lb.js": 84,
	"./lo": 85,
	"./lo.js": 85,
	"./lt": 86,
	"./lt.js": 86,
	"./lv": 87,
	"./lv.js": 87,
	"./me": 88,
	"./me.js": 88,
	"./mi": 89,
	"./mi.js": 89,
	"./mk": 90,
	"./mk.js": 90,
	"./ml": 91,
	"./ml.js": 91,
	"./mr": 92,
	"./mr.js": 92,
	"./ms": 94,
	"./ms-my": 93,
	"./ms-my.js": 93,
	"./ms.js": 94,
	"./mt": 95,
	"./mt.js": 95,
	"./my": 96,
	"./my.js": 96,
	"./nb": 97,
	"./nb.js": 97,
	"./ne": 98,
	"./ne.js": 98,
	"./nl": 100,
	"./nl-be": 99,
	"./nl-be.js": 99,
	"./nl.js": 100,
	"./nn": 101,
	"./nn.js": 101,
	"./pa-in": 102,
	"./pa-in.js": 102,
	"./pl": 103,
	"./pl.js": 103,
	"./pt": 105,
	"./pt-br": 104,
	"./pt-br.js": 104,
	"./pt.js": 105,
	"./ro": 106,
	"./ro.js": 106,
	"./ru": 107,
	"./ru.js": 107,
	"./sd": 108,
	"./sd.js": 108,
	"./se": 109,
	"./se.js": 109,
	"./si": 110,
	"./si.js": 110,
	"./sk": 111,
	"./sk.js": 111,
	"./sl": 112,
	"./sl.js": 112,
	"./sq": 113,
	"./sq.js": 113,
	"./sr": 115,
	"./sr-cyrl": 114,
	"./sr-cyrl.js": 114,
	"./sr.js": 115,
	"./ss": 116,
	"./ss.js": 116,
	"./sv": 117,
	"./sv.js": 117,
	"./sw": 118,
	"./sw.js": 118,
	"./ta": 119,
	"./ta.js": 119,
	"./te": 120,
	"./te.js": 120,
	"./tet": 121,
	"./tet.js": 121,
	"./th": 122,
	"./th.js": 122,
	"./tl-ph": 123,
	"./tl-ph.js": 123,
	"./tlh": 124,
	"./tlh.js": 124,
	"./tr": 125,
	"./tr.js": 125,
	"./tzl": 126,
	"./tzl.js": 126,
	"./tzm": 128,
	"./tzm-latn": 127,
	"./tzm-latn.js": 127,
	"./tzm.js": 128,
	"./uk": 129,
	"./uk.js": 129,
	"./ur": 130,
	"./ur.js": 130,
	"./uz": 132,
	"./uz-latn": 131,
	"./uz-latn.js": 131,
	"./uz.js": 132,
	"./vi": 133,
	"./vi.js": 133,
	"./x-pseudo": 134,
	"./x-pseudo.js": 134,
	"./yo": 135,
	"./yo.js": 135,
	"./zh-cn": 136,
	"./zh-cn.js": 136,
	"./zh-hk": 137,
	"./zh-hk.js": 137,
	"./zh-tw": 138,
	"./zh-tw.js": 138
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 212;

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

/*!
 * Pikaday
 *
 * Copyright © 2014 David Bushell | BSD & MIT license | https://github.com/dbushell/Pikaday
 */

(function (root, factory)
{
    'use strict';

    var moment;
    if (true) {
        // CommonJS module
        // Load moment.js as an optional dependency
        try { moment = __webpack_require__(0); } catch (e) {}
        module.exports = factory(moment);
    } else if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(function (req)
        {
            // Load moment.js as an optional dependency
            var id = 'moment';
            try { moment = req(id); } catch (e) {}
            return factory(moment);
        });
    } else {
        root.Pikaday = factory(root.moment);
    }
}(this, function (moment)
{
    'use strict';

    /**
     * feature detection and helper functions
     */
    var hasMoment = typeof moment === 'function',

    hasEventListeners = !!window.addEventListener,

    document = window.document,

    sto = window.setTimeout,

    addEvent = function(el, e, callback, capture)
    {
        if (hasEventListeners) {
            el.addEventListener(e, callback, !!capture);
        } else {
            el.attachEvent('on' + e, callback);
        }
    },

    removeEvent = function(el, e, callback, capture)
    {
        if (hasEventListeners) {
            el.removeEventListener(e, callback, !!capture);
        } else {
            el.detachEvent('on' + e, callback);
        }
    },

    trim = function(str)
    {
        return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g,'');
    },

    hasClass = function(el, cn)
    {
        return (' ' + el.className + ' ').indexOf(' ' + cn + ' ') !== -1;
    },

    addClass = function(el, cn)
    {
        if (!hasClass(el, cn)) {
            el.className = (el.className === '') ? cn : el.className + ' ' + cn;
        }
    },

    removeClass = function(el, cn)
    {
        el.className = trim((' ' + el.className + ' ').replace(' ' + cn + ' ', ' '));
    },

    isArray = function(obj)
    {
        return (/Array/).test(Object.prototype.toString.call(obj));
    },

    isDate = function(obj)
    {
        return (/Date/).test(Object.prototype.toString.call(obj)) && !isNaN(obj.getTime());
    },

    isWeekend = function(date)
    {
        var day = date.getDay();
        return day === 0 || day === 6;
    },

    isLeapYear = function(year)
    {
        // solution by Matti Virkkunen: http://stackoverflow.com/a/4881951
        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
    },

    getDaysInMonth = function(year, month)
    {
        return [31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
    },

    setToStartOfDay = function(date)
    {
        if (isDate(date)) date.setHours(0,0,0,0);
    },

    compareDates = function(a,b)
    {
        // weak date comparison (use setToStartOfDay(date) to ensure correct result)
        return a.getTime() === b.getTime();
    },

    extend = function(to, from, overwrite)
    {
        var prop, hasProp;
        for (prop in from) {
            hasProp = to[prop] !== undefined;
            if (hasProp && typeof from[prop] === 'object' && from[prop] !== null && from[prop].nodeName === undefined) {
                if (isDate(from[prop])) {
                    if (overwrite) {
                        to[prop] = new Date(from[prop].getTime());
                    }
                }
                else if (isArray(from[prop])) {
                    if (overwrite) {
                        to[prop] = from[prop].slice(0);
                    }
                } else {
                    to[prop] = extend({}, from[prop], overwrite);
                }
            } else if (overwrite || !hasProp) {
                to[prop] = from[prop];
            }
        }
        return to;
    },

    fireEvent = function(el, eventName, data)
    {
        var ev;

        if (document.createEvent) {
            ev = document.createEvent('HTMLEvents');
            ev.initEvent(eventName, true, false);
            ev = extend(ev, data);
            el.dispatchEvent(ev);
        } else if (document.createEventObject) {
            ev = document.createEventObject();
            ev = extend(ev, data);
            el.fireEvent('on' + eventName, ev);
        }
    },

    adjustCalendar = function(calendar) {
        if (calendar.month < 0) {
            calendar.year -= Math.ceil(Math.abs(calendar.month)/12);
            calendar.month += 12;
        }
        if (calendar.month > 11) {
            calendar.year += Math.floor(Math.abs(calendar.month)/12);
            calendar.month -= 12;
        }
        return calendar;
    },

    /**
     * defaults and localisation
     */
    defaults = {

        // bind the picker to a form field
        field: null,

        // automatically show/hide the picker on `field` focus (default `true` if `field` is set)
        bound: undefined,

        // position of the datepicker, relative to the field (default to bottom & left)
        // ('bottom' & 'left' keywords are not used, 'top' & 'right' are modifier on the bottom/left position)
        position: 'bottom left',

        // automatically fit in the viewport even if it means repositioning from the position option
        reposition: true,

        // the default output format for `.toString()` and `field` value
        format: 'YYYY-MM-DD',

        // the toString function which gets passed a current date object and format
        // and returns a string
        toString: null,

        // used to create date object from current input string
        parse: null,

        // the initial date to view when first opened
        defaultDate: null,

        // make the `defaultDate` the initial selected value
        setDefaultDate: false,

        // first day of week (0: Sunday, 1: Monday etc)
        firstDay: 0,

        // the default flag for moment's strict date parsing
        formatStrict: false,

        // the minimum/earliest date that can be selected
        minDate: null,
        // the maximum/latest date that can be selected
        maxDate: null,

        // number of years either side, or array of upper/lower range
        yearRange: 10,

        // show week numbers at head of row
        showWeekNumber: false,

        // Week picker mode
        pickWholeWeek: false,

        // used internally (don't config outside)
        minYear: 0,
        maxYear: 9999,
        minMonth: undefined,
        maxMonth: undefined,

        startRange: null,
        endRange: null,

        isRTL: false,

        // Additional text to append to the year in the calendar title
        yearSuffix: '',

        // Render the month after year in the calendar title
        showMonthAfterYear: false,

        // Render days of the calendar grid that fall in the next or previous month
        showDaysInNextAndPreviousMonths: false,

        // Allows user to select days that fall in the next or previous month
        enableSelectionDaysInNextAndPreviousMonths: false,

        // how many months are visible
        numberOfMonths: 1,

        // when numberOfMonths is used, this will help you to choose where the main calendar will be (default `left`, can be set to `right`)
        // only used for the first display or when a selected date is not visible
        mainCalendar: 'left',

        // Specify a DOM element to render the calendar in
        container: undefined,

        // Blur field when date is selected
        blurFieldOnSelect : true,

        // internationalization
        i18n: {
            previousMonth : 'Previous Month',
            nextMonth     : 'Next Month',
            months        : ['January','February','March','April','May','June','July','August','September','October','November','December'],
            weekdays      : ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],
            weekdaysShort : ['Sun','Mon','Tue','Wed','Thu','Fri','Sat']
        },

        // Theme Classname
        theme: null,

        // events array
        events: [],

        // callback function
        onSelect: null,
        onOpen: null,
        onClose: null,
        onDraw: null
    },


    /**
     * templating functions to abstract HTML rendering
     */
    renderDayName = function(opts, day, abbr)
    {
        day += opts.firstDay;
        while (day >= 7) {
            day -= 7;
        }
        return abbr ? opts.i18n.weekdaysShort[day] : opts.i18n.weekdays[day];
    },

    renderDay = function(opts)
    {
        var arr = [];
        var ariaSelected = 'false';
        if (opts.isEmpty) {
            if (opts.showDaysInNextAndPreviousMonths) {
                arr.push('is-outside-current-month');

                if(!opts.enableSelectionDaysInNextAndPreviousMonths) {
                    arr.push('is-selection-disabled');
                }

            } else {
                return '<td class="is-empty"></td>';
            }
        }
        if (opts.isDisabled) {
            arr.push('is-disabled');
        }
        if (opts.isToday) {
            arr.push('is-today');
        }
        if (opts.isSelected) {
            arr.push('is-selected');
            ariaSelected = 'true';
        }
        if (opts.hasEvent) {
            arr.push('has-event');
        }
        if (opts.isInRange) {
            arr.push('is-inrange');
        }
        if (opts.isStartRange) {
            arr.push('is-startrange');
        }
        if (opts.isEndRange) {
            arr.push('is-endrange');
        }
        return '<td data-day="' + opts.day + '" class="' + arr.join(' ') + '" aria-selected="' + ariaSelected + '">' +
                 '<button class="pika-button pika-day" type="button" ' +
                    'data-pika-year="' + opts.year + '" data-pika-month="' + opts.month + '" data-pika-day="' + opts.day + '">' +
                        opts.day +
                 '</button>' +
               '</td>';
    },

    renderWeek = function (d, m, y) {
        // Lifted from http://javascript.about.com/library/blweekyear.htm, lightly modified.
        var onejan = new Date(y, 0, 1),
            weekNum = Math.ceil((((new Date(y, m, d) - onejan) / 86400000) + onejan.getDay()+1)/7);
        return '<td class="pika-week">' + weekNum + '</td>';
    },

    renderRow = function(days, isRTL, pickWholeWeek, isRowSelected)
    {
        return '<tr class="pika-row' + (pickWholeWeek ? ' pick-whole-week' : '') + (isRowSelected ? ' is-selected' : '') + '">' + (isRTL ? days.reverse() : days).join('') + '</tr>';
    },

    renderBody = function(rows)
    {
        return '<tbody>' + rows.join('') + '</tbody>';
    },

    renderHead = function(opts)
    {
        var i, arr = [];
        if (opts.showWeekNumber) {
            arr.push('<th></th>');
        }
        for (i = 0; i < 7; i++) {
            arr.push('<th scope="col"><abbr title="' + renderDayName(opts, i) + '">' + renderDayName(opts, i, true) + '</abbr></th>');
        }
        return '<thead><tr>' + (opts.isRTL ? arr.reverse() : arr).join('') + '</tr></thead>';
    },

    renderTitle = function(instance, c, year, month, refYear, randId)
    {
        var i, j, arr,
            opts = instance._o,
            isMinYear = year === opts.minYear,
            isMaxYear = year === opts.maxYear,
            html = '<div id="' + randId + '" class="pika-title" role="heading" aria-live="assertive">',
            monthHtml,
            yearHtml,
            prev = true,
            next = true;

        for (arr = [], i = 0; i < 12; i++) {
            arr.push('<option value="' + (year === refYear ? i - c : 12 + i - c) + '"' +
                (i === month ? ' selected="selected"': '') +
                ((isMinYear && i < opts.minMonth) || (isMaxYear && i > opts.maxMonth) ? 'disabled="disabled"' : '') + '>' +
                opts.i18n.months[i] + '</option>');
        }

        monthHtml = '<div class="pika-label">' + opts.i18n.months[month] + '<select class="pika-select pika-select-month" tabindex="-1">' + arr.join('') + '</select></div>';

        if (isArray(opts.yearRange)) {
            i = opts.yearRange[0];
            j = opts.yearRange[1] + 1;
        } else {
            i = year - opts.yearRange;
            j = 1 + year + opts.yearRange;
        }

        for (arr = []; i < j && i <= opts.maxYear; i++) {
            if (i >= opts.minYear) {
                arr.push('<option value="' + i + '"' + (i === year ? ' selected="selected"': '') + '>' + (i) + '</option>');
            }
        }
        yearHtml = '<div class="pika-label">' + year + opts.yearSuffix + '<select class="pika-select pika-select-year" tabindex="-1">' + arr.join('') + '</select></div>';

        if (opts.showMonthAfterYear) {
            html += yearHtml + monthHtml;
        } else {
            html += monthHtml + yearHtml;
        }

        if (isMinYear && (month === 0 || opts.minMonth >= month)) {
            prev = false;
        }

        if (isMaxYear && (month === 11 || opts.maxMonth <= month)) {
            next = false;
        }

        if (c === 0) {
            html += '<button class="pika-prev' + (prev ? '' : ' is-disabled') + '" type="button">' + opts.i18n.previousMonth + '</button>';
        }
        if (c === (instance._o.numberOfMonths - 1) ) {
            html += '<button class="pika-next' + (next ? '' : ' is-disabled') + '" type="button">' + opts.i18n.nextMonth + '</button>';
        }

        return html += '</div>';
    },

    renderTable = function(opts, data, randId)
    {
        return '<table cellpadding="0" cellspacing="0" class="pika-table" role="grid" aria-labelledby="' + randId + '">' + renderHead(opts) + renderBody(data) + '</table>';
    },


    /**
     * Pikaday constructor
     */
    Pikaday = function(options)
    {
        var self = this,
            opts = self.config(options);

        self._onMouseDown = function(e)
        {
            if (!self._v) {
                return;
            }
            e = e || window.event;
            var target = e.target || e.srcElement;
            if (!target) {
                return;
            }

            if (!hasClass(target, 'is-disabled')) {
                if (hasClass(target, 'pika-button') && !hasClass(target, 'is-empty') && !hasClass(target.parentNode, 'is-disabled')) {
                    self.setDate(new Date(target.getAttribute('data-pika-year'), target.getAttribute('data-pika-month'), target.getAttribute('data-pika-day')));
                    if (opts.bound) {
                        sto(function() {
                            self.hide();
                            if (opts.blurFieldOnSelect && opts.field) {
                                opts.field.blur();
                            }
                        }, 100);
                    }
                }
                else if (hasClass(target, 'pika-prev')) {
                    self.prevMonth();
                }
                else if (hasClass(target, 'pika-next')) {
                    self.nextMonth();
                }
            }
            if (!hasClass(target, 'pika-select')) {
                // if this is touch event prevent mouse events emulation
                if (e.preventDefault) {
                    e.preventDefault();
                } else {
                    e.returnValue = false;
                    return false;
                }
            } else {
                self._c = true;
            }
        };

        self._onChange = function(e)
        {
            e = e || window.event;
            var target = e.target || e.srcElement;
            if (!target) {
                return;
            }
            if (hasClass(target, 'pika-select-month')) {
                self.gotoMonth(target.value);
            }
            else if (hasClass(target, 'pika-select-year')) {
                self.gotoYear(target.value);
            }
        };

        self._onKeyChange = function(e)
        {
            e = e || window.event;

            if (self.isVisible()) {

                switch(e.keyCode){
                    case 13:
                    case 27:
                        if (opts.field) {
                            opts.field.blur();
                        }
                        break;
                    case 37:
                        e.preventDefault();
                        self.adjustDate('subtract', 1);
                        break;
                    case 38:
                        self.adjustDate('subtract', 7);
                        break;
                    case 39:
                        self.adjustDate('add', 1);
                        break;
                    case 40:
                        self.adjustDate('add', 7);
                        break;
                }
            }
        };

        self._onInputChange = function(e)
        {
            var date;

            if (e.firedBy === self) {
                return;
            }
            if (opts.parse) {
                date = opts.parse(opts.field.value, opts.format);
            } else if (hasMoment) {
                date = moment(opts.field.value, opts.format, opts.formatStrict);
                date = (date && date.isValid()) ? date.toDate() : null;
            }
            else {
                date = new Date(Date.parse(opts.field.value));
            }
            if (isDate(date)) {
              self.setDate(date);
            }
            if (!self._v) {
                self.show();
            }
        };

        self._onInputFocus = function()
        {
            self.show();
        };

        self._onInputClick = function()
        {
            self.show();
        };

        self._onInputBlur = function()
        {
            // IE allows pika div to gain focus; catch blur the input field
            var pEl = document.activeElement;
            do {
                if (hasClass(pEl, 'pika-single')) {
                    return;
                }
            }
            while ((pEl = pEl.parentNode));

            if (!self._c) {
                self._b = sto(function() {
                    self.hide();
                }, 50);
            }
            self._c = false;
        };

        self._onClick = function(e)
        {
            e = e || window.event;
            var target = e.target || e.srcElement,
                pEl = target;
            if (!target) {
                return;
            }
            if (!hasEventListeners && hasClass(target, 'pika-select')) {
                if (!target.onchange) {
                    target.setAttribute('onchange', 'return;');
                    addEvent(target, 'change', self._onChange);
                }
            }
            do {
                if (hasClass(pEl, 'pika-single') || pEl === opts.trigger) {
                    return;
                }
            }
            while ((pEl = pEl.parentNode));
            if (self._v && target !== opts.trigger && pEl !== opts.trigger) {
                self.hide();
            }
        };

        self.el = document.createElement('div');
        self.el.className = 'pika-single' + (opts.isRTL ? ' is-rtl' : '') + (opts.theme ? ' ' + opts.theme : '');

        addEvent(self.el, 'mousedown', self._onMouseDown, true);
        addEvent(self.el, 'touchend', self._onMouseDown, true);
        addEvent(self.el, 'change', self._onChange);
        addEvent(document, 'keydown', self._onKeyChange);

        if (opts.field) {
            if (opts.container) {
                opts.container.appendChild(self.el);
            } else if (opts.bound) {
                document.body.appendChild(self.el);
            } else {
                opts.field.parentNode.insertBefore(self.el, opts.field.nextSibling);
            }
            addEvent(opts.field, 'change', self._onInputChange);

            if (!opts.defaultDate) {
                if (hasMoment && opts.field.value) {
                    opts.defaultDate = moment(opts.field.value, opts.format).toDate();
                } else {
                    opts.defaultDate = new Date(Date.parse(opts.field.value));
                }
                opts.setDefaultDate = true;
            }
        }

        var defDate = opts.defaultDate;

        if (isDate(defDate)) {
            if (opts.setDefaultDate) {
                self.setDate(defDate, true);
            } else {
                self.gotoDate(defDate);
            }
        } else {
            self.gotoDate(new Date());
        }

        if (opts.bound) {
            this.hide();
            self.el.className += ' is-bound';
            addEvent(opts.trigger, 'click', self._onInputClick);
            addEvent(opts.trigger, 'focus', self._onInputFocus);
            addEvent(opts.trigger, 'blur', self._onInputBlur);
        } else {
            this.show();
        }
    };


    /**
     * public Pikaday API
     */
    Pikaday.prototype = {


        /**
         * configure functionality
         */
        config: function(options)
        {
            if (!this._o) {
                this._o = extend({}, defaults, true);
            }

            var opts = extend(this._o, options, true);

            opts.isRTL = !!opts.isRTL;

            opts.field = (opts.field && opts.field.nodeName) ? opts.field : null;

            opts.theme = (typeof opts.theme) === 'string' && opts.theme ? opts.theme : null;

            opts.bound = !!(opts.bound !== undefined ? opts.field && opts.bound : opts.field);

            opts.trigger = (opts.trigger && opts.trigger.nodeName) ? opts.trigger : opts.field;

            opts.disableWeekends = !!opts.disableWeekends;

            opts.disableDayFn = (typeof opts.disableDayFn) === 'function' ? opts.disableDayFn : null;

            var nom = parseInt(opts.numberOfMonths, 10) || 1;
            opts.numberOfMonths = nom > 4 ? 4 : nom;

            if (!isDate(opts.minDate)) {
                opts.minDate = false;
            }
            if (!isDate(opts.maxDate)) {
                opts.maxDate = false;
            }
            if ((opts.minDate && opts.maxDate) && opts.maxDate < opts.minDate) {
                opts.maxDate = opts.minDate = false;
            }
            if (opts.minDate) {
                this.setMinDate(opts.minDate);
            }
            if (opts.maxDate) {
                this.setMaxDate(opts.maxDate);
            }

            if (isArray(opts.yearRange)) {
                var fallback = new Date().getFullYear() - 10;
                opts.yearRange[0] = parseInt(opts.yearRange[0], 10) || fallback;
                opts.yearRange[1] = parseInt(opts.yearRange[1], 10) || fallback;
            } else {
                opts.yearRange = Math.abs(parseInt(opts.yearRange, 10)) || defaults.yearRange;
                if (opts.yearRange > 100) {
                    opts.yearRange = 100;
                }
            }

            return opts;
        },

        /**
         * return a formatted string of the current selection (using Moment.js if available)
         */
        toString: function(format)
        {
            format = format || this._o.format;
            if (!isDate(this._d)) {
                return '';
            }
            if (this._o.toString) {
              return this._o.toString(this._d, format);
            }
            if (hasMoment) {
              return moment(this._d).format(format);
            }
            return this._d.toDateString();
        },

        /**
         * return a Moment.js object of the current selection (if available)
         */
        getMoment: function()
        {
            return hasMoment ? moment(this._d) : null;
        },

        /**
         * set the current selection from a Moment.js object (if available)
         */
        setMoment: function(date, preventOnSelect)
        {
            if (hasMoment && moment.isMoment(date)) {
                this.setDate(date.toDate(), preventOnSelect);
            }
        },

        /**
         * return a Date object of the current selection
         */
        getDate: function()
        {
            return isDate(this._d) ? new Date(this._d.getTime()) : null;
        },

        /**
         * set the current selection
         */
        setDate: function(date, preventOnSelect)
        {
            if (!date) {
                this._d = null;

                if (this._o.field) {
                    this._o.field.value = '';
                    fireEvent(this._o.field, 'change', { firedBy: this });
                }

                return this.draw();
            }
            if (typeof date === 'string') {
                date = new Date(Date.parse(date));
            }
            if (!isDate(date)) {
                return;
            }

            var min = this._o.minDate,
                max = this._o.maxDate;

            if (isDate(min) && date < min) {
                date = min;
            } else if (isDate(max) && date > max) {
                date = max;
            }

            this._d = new Date(date.getTime());
            setToStartOfDay(this._d);
            this.gotoDate(this._d);

            if (this._o.field) {
                this._o.field.value = this.toString();
                fireEvent(this._o.field, 'change', { firedBy: this });
            }
            if (!preventOnSelect && typeof this._o.onSelect === 'function') {
                this._o.onSelect.call(this, this.getDate());
            }
        },

        /**
         * change view to a specific date
         */
        gotoDate: function(date)
        {
            var newCalendar = true;

            if (!isDate(date)) {
                return;
            }

            if (this.calendars) {
                var firstVisibleDate = new Date(this.calendars[0].year, this.calendars[0].month, 1),
                    lastVisibleDate = new Date(this.calendars[this.calendars.length-1].year, this.calendars[this.calendars.length-1].month, 1),
                    visibleDate = date.getTime();
                // get the end of the month
                lastVisibleDate.setMonth(lastVisibleDate.getMonth()+1);
                lastVisibleDate.setDate(lastVisibleDate.getDate()-1);
                newCalendar = (visibleDate < firstVisibleDate.getTime() || lastVisibleDate.getTime() < visibleDate);
            }

            if (newCalendar) {
                this.calendars = [{
                    month: date.getMonth(),
                    year: date.getFullYear()
                }];
                if (this._o.mainCalendar === 'right') {
                    this.calendars[0].month += 1 - this._o.numberOfMonths;
                }
            }

            this.adjustCalendars();
        },

        adjustDate: function(sign, days) {

            var day = this.getDate() || new Date();
            var difference = parseInt(days)*24*60*60*1000;

            var newDay;

            if (sign === 'add') {
                newDay = new Date(day.valueOf() + difference);
            } else if (sign === 'subtract') {
                newDay = new Date(day.valueOf() - difference);
            }

            this.setDate(newDay);
        },

        adjustCalendars: function() {
            this.calendars[0] = adjustCalendar(this.calendars[0]);
            for (var c = 1; c < this._o.numberOfMonths; c++) {
                this.calendars[c] = adjustCalendar({
                    month: this.calendars[0].month + c,
                    year: this.calendars[0].year
                });
            }
            this.draw();
        },

        gotoToday: function()
        {
            this.gotoDate(new Date());
        },

        /**
         * change view to a specific month (zero-index, e.g. 0: January)
         */
        gotoMonth: function(month)
        {
            if (!isNaN(month)) {
                this.calendars[0].month = parseInt(month, 10);
                this.adjustCalendars();
            }
        },

        nextMonth: function()
        {
            this.calendars[0].month++;
            this.adjustCalendars();
        },

        prevMonth: function()
        {
            this.calendars[0].month--;
            this.adjustCalendars();
        },

        /**
         * change view to a specific full year (e.g. "2012")
         */
        gotoYear: function(year)
        {
            if (!isNaN(year)) {
                this.calendars[0].year = parseInt(year, 10);
                this.adjustCalendars();
            }
        },

        /**
         * change the minDate
         */
        setMinDate: function(value)
        {
            if(value instanceof Date) {
                setToStartOfDay(value);
                this._o.minDate = value;
                this._o.minYear  = value.getFullYear();
                this._o.minMonth = value.getMonth();
            } else {
                this._o.minDate = defaults.minDate;
                this._o.minYear  = defaults.minYear;
                this._o.minMonth = defaults.minMonth;
                this._o.startRange = defaults.startRange;
            }

            this.draw();
        },

        /**
         * change the maxDate
         */
        setMaxDate: function(value)
        {
            if(value instanceof Date) {
                setToStartOfDay(value);
                this._o.maxDate = value;
                this._o.maxYear = value.getFullYear();
                this._o.maxMonth = value.getMonth();
            } else {
                this._o.maxDate = defaults.maxDate;
                this._o.maxYear = defaults.maxYear;
                this._o.maxMonth = defaults.maxMonth;
                this._o.endRange = defaults.endRange;
            }

            this.draw();
        },

        setStartRange: function(value)
        {
            this._o.startRange = value;
        },

        setEndRange: function(value)
        {
            this._o.endRange = value;
        },

        /**
         * refresh the HTML
         */
        draw: function(force)
        {
            if (!this._v && !force) {
                return;
            }
            var opts = this._o,
                minYear = opts.minYear,
                maxYear = opts.maxYear,
                minMonth = opts.minMonth,
                maxMonth = opts.maxMonth,
                html = '',
                randId;

            if (this._y <= minYear) {
                this._y = minYear;
                if (!isNaN(minMonth) && this._m < minMonth) {
                    this._m = minMonth;
                }
            }
            if (this._y >= maxYear) {
                this._y = maxYear;
                if (!isNaN(maxMonth) && this._m > maxMonth) {
                    this._m = maxMonth;
                }
            }

            randId = 'pika-title-' + Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 2);

            for (var c = 0; c < opts.numberOfMonths; c++) {
                html += '<div class="pika-lendar">' + renderTitle(this, c, this.calendars[c].year, this.calendars[c].month, this.calendars[0].year, randId) + this.render(this.calendars[c].year, this.calendars[c].month, randId) + '</div>';
            }

            this.el.innerHTML = html;

            if (opts.bound) {
                if(opts.field.type !== 'hidden') {
                    sto(function() {
                        opts.trigger.focus();
                    }, 1);
                }
            }

            if (typeof this._o.onDraw === 'function') {
                this._o.onDraw(this);
            }

            if (opts.bound) {
                // let the screen reader user know to use arrow keys
                opts.field.setAttribute('aria-label', 'Use the arrow keys to pick a date');
            }
        },

        adjustPosition: function()
        {
            var field, pEl, width, height, viewportWidth, viewportHeight, scrollTop, left, top, clientRect;

            if (this._o.container) return;

            this.el.style.position = 'absolute';

            field = this._o.trigger;
            pEl = field;
            width = this.el.offsetWidth;
            height = this.el.offsetHeight;
            viewportWidth = window.innerWidth || document.documentElement.clientWidth;
            viewportHeight = window.innerHeight || document.documentElement.clientHeight;
            scrollTop = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;

            if (typeof field.getBoundingClientRect === 'function') {
                clientRect = field.getBoundingClientRect();
                left = clientRect.left + window.pageXOffset;
                top = clientRect.bottom + window.pageYOffset;
            } else {
                left = pEl.offsetLeft;
                top  = pEl.offsetTop + pEl.offsetHeight;
                while((pEl = pEl.offsetParent)) {
                    left += pEl.offsetLeft;
                    top  += pEl.offsetTop;
                }
            }

            // default position is bottom & left
            if ((this._o.reposition && left + width > viewportWidth) ||
                (
                    this._o.position.indexOf('right') > -1 &&
                    left - width + field.offsetWidth > 0
                )
            ) {
                left = left - width + field.offsetWidth;
            }
            if ((this._o.reposition && top + height > viewportHeight + scrollTop) ||
                (
                    this._o.position.indexOf('top') > -1 &&
                    top - height - field.offsetHeight > 0
                )
            ) {
                top = top - height - field.offsetHeight;
            }

            this.el.style.left = left + 'px';
            this.el.style.top = top + 'px';
        },

        /**
         * render HTML for a particular month
         */
        render: function(year, month, randId)
        {
            var opts   = this._o,
                now    = new Date(),
                days   = getDaysInMonth(year, month),
                before = new Date(year, month, 1).getDay(),
                data   = [],
                row    = [];
            setToStartOfDay(now);
            if (opts.firstDay > 0) {
                before -= opts.firstDay;
                if (before < 0) {
                    before += 7;
                }
            }
            var previousMonth = month === 0 ? 11 : month - 1,
                nextMonth = month === 11 ? 0 : month + 1,
                yearOfPreviousMonth = month === 0 ? year - 1 : year,
                yearOfNextMonth = month === 11 ? year + 1 : year,
                daysInPreviousMonth = getDaysInMonth(yearOfPreviousMonth, previousMonth);
            var cells = days + before,
                after = cells;
            while(after > 7) {
                after -= 7;
            }
            cells += 7 - after;
            var isWeekSelected = false;
            for (var i = 0, r = 0; i < cells; i++)
            {
                var day = new Date(year, month, 1 + (i - before)),
                    isSelected = isDate(this._d) ? compareDates(day, this._d) : false,
                    isToday = compareDates(day, now),
                    hasEvent = opts.events.indexOf(day.toDateString()) !== -1 ? true : false,
                    isEmpty = i < before || i >= (days + before),
                    dayNumber = 1 + (i - before),
                    monthNumber = month,
                    yearNumber = year,
                    isStartRange = opts.startRange && compareDates(opts.startRange, day),
                    isEndRange = opts.endRange && compareDates(opts.endRange, day),
                    isInRange = opts.startRange && opts.endRange && opts.startRange < day && day < opts.endRange,
                    isDisabled = (opts.minDate && day < opts.minDate) ||
                                 (opts.maxDate && day > opts.maxDate) ||
                                 (opts.disableWeekends && isWeekend(day)) ||
                                 (opts.disableDayFn && opts.disableDayFn(day));

                if (isEmpty) {
                    if (i < before) {
                        dayNumber = daysInPreviousMonth + dayNumber;
                        monthNumber = previousMonth;
                        yearNumber = yearOfPreviousMonth;
                    } else {
                        dayNumber = dayNumber - days;
                        monthNumber = nextMonth;
                        yearNumber = yearOfNextMonth;
                    }
                }

                var dayConfig = {
                        day: dayNumber,
                        month: monthNumber,
                        year: yearNumber,
                        hasEvent: hasEvent,
                        isSelected: isSelected,
                        isToday: isToday,
                        isDisabled: isDisabled,
                        isEmpty: isEmpty,
                        isStartRange: isStartRange,
                        isEndRange: isEndRange,
                        isInRange: isInRange,
                        showDaysInNextAndPreviousMonths: opts.showDaysInNextAndPreviousMonths,
                        enableSelectionDaysInNextAndPreviousMonths: opts.enableSelectionDaysInNextAndPreviousMonths
                    };

                if (opts.pickWholeWeek && isSelected) {
                    isWeekSelected = true;
                }

                row.push(renderDay(dayConfig));

                if (++r === 7) {
                    if (opts.showWeekNumber) {
                        row.unshift(renderWeek(i - before, month, year));
                    }
                    data.push(renderRow(row, opts.isRTL, opts.pickWholeWeek, isWeekSelected));
                    row = [];
                    r = 0;
                    isWeekSelected = false;
                }
            }
            return renderTable(opts, data, randId);
        },

        isVisible: function()
        {
            return this._v;
        },

        show: function()
        {
            if (!this.isVisible()) {
                this._v = true;
                this.draw();
                removeClass(this.el, 'is-hidden');
                if (this._o.bound) {
                    addEvent(document, 'click', this._onClick);
                    this.adjustPosition();
                }
                if (typeof this._o.onOpen === 'function') {
                    this._o.onOpen.call(this);
                }
            }
        },

        hide: function()
        {
            var v = this._v;
            if (v !== false) {
                if (this._o.bound) {
                    removeEvent(document, 'click', this._onClick);
                }
                this.el.style.position = 'static'; // reset
                this.el.style.left = 'auto';
                this.el.style.top = 'auto';
                addClass(this.el, 'is-hidden');
                this._v = false;
                if (v !== undefined && typeof this._o.onClose === 'function') {
                    this._o.onClose.call(this);
                }
            }
        },

        /**
         * GAME OVER
         */
        destroy: function()
        {
            this.hide();
            removeEvent(this.el, 'mousedown', this._onMouseDown, true);
            removeEvent(this.el, 'touchend', this._onMouseDown, true);
            removeEvent(this.el, 'change', this._onChange);
            removeEvent(document, 'keydown', this._onKeyChange);
            if (this._o.field) {
                removeEvent(this._o.field, 'change', this._onInputChange);
                if (this._o.bound) {
                    removeEvent(this._o.trigger, 'click', this._onInputClick);
                    removeEvent(this._o.trigger, 'focus', this._onInputFocus);
                    removeEvent(this._o.trigger, 'blur', this._onInputBlur);
                }
            }
            if (this.el.parentNode) {
                this.el.parentNode.removeChild(this.el);
            }
        }

    };

    return Pikaday;

}));


/***/ })
/******/ ]);
//# sourceMappingURL=main.043488c755ad0c2ec642.bundle.js.map